// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voltha_protos/logical_device.proto

package org.opencord.voltha;

public final class OFLogicalDevice {
  private OFLogicalDevice() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LogicalPortIdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:voltha.LogicalPortId)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * id of the port on the logical device
     * </pre>
     *
     * <code>string port_id = 2;</code>
     */
    java.lang.String getPortId();
    /**
     * <pre>
     * id of the port on the logical device
     * </pre>
     *
     * <code>string port_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getPortIdBytes();
  }
  /**
   * Protobuf type {@code voltha.LogicalPortId}
   */
  public  static final class LogicalPortId extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:voltha.LogicalPortId)
      LogicalPortIdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalPortId.newBuilder() to construct.
    private LogicalPortId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalPortId() {
      id_ = "";
      portId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalPortId();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalPortId(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              portId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPortId_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPortId_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.OFLogicalDevice.LogicalPortId.class, org.opencord.voltha.OFLogicalDevice.LogicalPortId.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object portId_;
    /**
     * <pre>
     * id of the port on the logical device
     * </pre>
     *
     * <code>string port_id = 2;</code>
     */
    public java.lang.String getPortId() {
      java.lang.Object ref = portId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        portId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * id of the port on the logical device
     * </pre>
     *
     * <code>string port_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPortIdBytes() {
      java.lang.Object ref = portId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        portId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getPortIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, portId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getPortIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, portId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.OFLogicalDevice.LogicalPortId)) {
        return super.equals(obj);
      }
      org.opencord.voltha.OFLogicalDevice.LogicalPortId other = (org.opencord.voltha.OFLogicalDevice.LogicalPortId) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getPortId()
          .equals(other.getPortId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + PORT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPortId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.OFLogicalDevice.LogicalPortId prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code voltha.LogicalPortId}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:voltha.LogicalPortId)
        org.opencord.voltha.OFLogicalDevice.LogicalPortIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPortId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPortId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.OFLogicalDevice.LogicalPortId.class, org.opencord.voltha.OFLogicalDevice.LogicalPortId.Builder.class);
      }

      // Construct using org.opencord.voltha.OFLogicalDevice.LogicalPortId.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        portId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPortId_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPortId getDefaultInstanceForType() {
        return org.opencord.voltha.OFLogicalDevice.LogicalPortId.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPortId build() {
        org.opencord.voltha.OFLogicalDevice.LogicalPortId result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPortId buildPartial() {
        org.opencord.voltha.OFLogicalDevice.LogicalPortId result = new org.opencord.voltha.OFLogicalDevice.LogicalPortId(this);
        result.id_ = id_;
        result.portId_ = portId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.OFLogicalDevice.LogicalPortId) {
          return mergeFrom((org.opencord.voltha.OFLogicalDevice.LogicalPortId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.OFLogicalDevice.LogicalPortId other) {
        if (other == org.opencord.voltha.OFLogicalDevice.LogicalPortId.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getPortId().isEmpty()) {
          portId_ = other.portId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.OFLogicalDevice.LogicalPortId parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.OFLogicalDevice.LogicalPortId) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object portId_ = "";
      /**
       * <pre>
       * id of the port on the logical device
       * </pre>
       *
       * <code>string port_id = 2;</code>
       */
      public java.lang.String getPortId() {
        java.lang.Object ref = portId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          portId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * id of the port on the logical device
       * </pre>
       *
       * <code>string port_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPortIdBytes() {
        java.lang.Object ref = portId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          portId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * id of the port on the logical device
       * </pre>
       *
       * <code>string port_id = 2;</code>
       */
      public Builder setPortId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        portId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id of the port on the logical device
       * </pre>
       *
       * <code>string port_id = 2;</code>
       */
      public Builder clearPortId() {
        
        portId_ = getDefaultInstance().getPortId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id of the port on the logical device
       * </pre>
       *
       * <code>string port_id = 2;</code>
       */
      public Builder setPortIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        portId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:voltha.LogicalPortId)
    }

    // @@protoc_insertion_point(class_scope:voltha.LogicalPortId)
    private static final org.opencord.voltha.OFLogicalDevice.LogicalPortId DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.OFLogicalDevice.LogicalPortId();
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalPortId getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalPortId>
        PARSER = new com.google.protobuf.AbstractParser<LogicalPortId>() {
      @java.lang.Override
      public LogicalPortId parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalPortId(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalPortId> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalPortId> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.OFLogicalDevice.LogicalPortId getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalPortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:voltha.LogicalPort)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.openflow_13.ofp_port ofp_port = 2;</code>
     */
    boolean hasOfpPort();
    /**
     * <code>.openflow_13.ofp_port ofp_port = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_port getOfpPort();
    /**
     * <code>.openflow_13.ofp_port ofp_port = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder getOfpPortOrBuilder();

    /**
     * <code>string device_id = 3;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>string device_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <code>uint32 device_port_no = 4;</code>
     */
    int getDevicePortNo();

    /**
     * <code>bool root_port = 5;</code>
     */
    boolean getRootPort();

    /**
     * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
     */
    boolean hasOfpPortStats();
    /**
     * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_port_stats getOfpPortStats();
    /**
     * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_port_statsOrBuilder getOfpPortStatsOrBuilder();
  }
  /**
   * Protobuf type {@code voltha.LogicalPort}
   */
  public  static final class LogicalPort extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:voltha.LogicalPort)
      LogicalPortOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalPort.newBuilder() to construct.
    private LogicalPort(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalPort() {
      id_ = "";
      deviceId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalPort();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalPort(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder subBuilder = null;
              if (ofpPort_ != null) {
                subBuilder = ofpPort_.toBuilder();
              }
              ofpPort_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_port.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ofpPort_);
                ofpPort_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 32: {

              devicePortNo_ = input.readUInt32();
              break;
            }
            case 40: {

              rootPort_ = input.readBool();
              break;
            }
            case 50: {
              org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder subBuilder = null;
              if (ofpPortStats_ != null) {
                subBuilder = ofpPortStats_.toBuilder();
              }
              ofpPortStats_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ofpPortStats_);
                ofpPortStats_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPort_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPort_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.OFLogicalDevice.LogicalPort.class, org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFP_PORT_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_port ofpPort_;
    /**
     * <code>.openflow_13.ofp_port ofp_port = 2;</code>
     */
    public boolean hasOfpPort() {
      return ofpPort_ != null;
    }
    /**
     * <code>.openflow_13.ofp_port ofp_port = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_port getOfpPort() {
      return ofpPort_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance() : ofpPort_;
    }
    /**
     * <code>.openflow_13.ofp_port ofp_port = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder getOfpPortOrBuilder() {
      return getOfpPort();
    }

    public static final int DEVICE_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object deviceId_;
    /**
     * <code>string device_id = 3;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <code>string device_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICE_PORT_NO_FIELD_NUMBER = 4;
    private int devicePortNo_;
    /**
     * <code>uint32 device_port_no = 4;</code>
     */
    public int getDevicePortNo() {
      return devicePortNo_;
    }

    public static final int ROOT_PORT_FIELD_NUMBER = 5;
    private boolean rootPort_;
    /**
     * <code>bool root_port = 5;</code>
     */
    public boolean getRootPort() {
      return rootPort_;
    }

    public static final int OFP_PORT_STATS_FIELD_NUMBER = 6;
    private org.opencord.voltha.openflow13.Openflow13.ofp_port_stats ofpPortStats_;
    /**
     * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
     */
    public boolean hasOfpPortStats() {
      return ofpPortStats_ != null;
    }
    /**
     * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats getOfpPortStats() {
      return ofpPortStats_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.getDefaultInstance() : ofpPortStats_;
    }
    /**
     * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_statsOrBuilder getOfpPortStatsOrBuilder() {
      return getOfpPortStats();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (ofpPort_ != null) {
        output.writeMessage(2, getOfpPort());
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, deviceId_);
      }
      if (devicePortNo_ != 0) {
        output.writeUInt32(4, devicePortNo_);
      }
      if (rootPort_ != false) {
        output.writeBool(5, rootPort_);
      }
      if (ofpPortStats_ != null) {
        output.writeMessage(6, getOfpPortStats());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (ofpPort_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOfpPort());
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, deviceId_);
      }
      if (devicePortNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, devicePortNo_);
      }
      if (rootPort_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, rootPort_);
      }
      if (ofpPortStats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getOfpPortStats());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.OFLogicalDevice.LogicalPort)) {
        return super.equals(obj);
      }
      org.opencord.voltha.OFLogicalDevice.LogicalPort other = (org.opencord.voltha.OFLogicalDevice.LogicalPort) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasOfpPort() != other.hasOfpPort()) return false;
      if (hasOfpPort()) {
        if (!getOfpPort()
            .equals(other.getOfpPort())) return false;
      }
      if (!getDeviceId()
          .equals(other.getDeviceId())) return false;
      if (getDevicePortNo()
          != other.getDevicePortNo()) return false;
      if (getRootPort()
          != other.getRootPort()) return false;
      if (hasOfpPortStats() != other.hasOfpPortStats()) return false;
      if (hasOfpPortStats()) {
        if (!getOfpPortStats()
            .equals(other.getOfpPortStats())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasOfpPort()) {
        hash = (37 * hash) + OFP_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getOfpPort().hashCode();
      }
      hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + DEVICE_PORT_NO_FIELD_NUMBER;
      hash = (53 * hash) + getDevicePortNo();
      hash = (37 * hash) + ROOT_PORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRootPort());
      if (hasOfpPortStats()) {
        hash = (37 * hash) + OFP_PORT_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getOfpPortStats().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.OFLogicalDevice.LogicalPort prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code voltha.LogicalPort}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:voltha.LogicalPort)
        org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPort_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPort_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.OFLogicalDevice.LogicalPort.class, org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder.class);
      }

      // Construct using org.opencord.voltha.OFLogicalDevice.LogicalPort.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (ofpPortBuilder_ == null) {
          ofpPort_ = null;
        } else {
          ofpPort_ = null;
          ofpPortBuilder_ = null;
        }
        deviceId_ = "";

        devicePortNo_ = 0;

        rootPort_ = false;

        if (ofpPortStatsBuilder_ == null) {
          ofpPortStats_ = null;
        } else {
          ofpPortStats_ = null;
          ofpPortStatsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPort_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPort getDefaultInstanceForType() {
        return org.opencord.voltha.OFLogicalDevice.LogicalPort.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPort build() {
        org.opencord.voltha.OFLogicalDevice.LogicalPort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPort buildPartial() {
        org.opencord.voltha.OFLogicalDevice.LogicalPort result = new org.opencord.voltha.OFLogicalDevice.LogicalPort(this);
        result.id_ = id_;
        if (ofpPortBuilder_ == null) {
          result.ofpPort_ = ofpPort_;
        } else {
          result.ofpPort_ = ofpPortBuilder_.build();
        }
        result.deviceId_ = deviceId_;
        result.devicePortNo_ = devicePortNo_;
        result.rootPort_ = rootPort_;
        if (ofpPortStatsBuilder_ == null) {
          result.ofpPortStats_ = ofpPortStats_;
        } else {
          result.ofpPortStats_ = ofpPortStatsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.OFLogicalDevice.LogicalPort) {
          return mergeFrom((org.opencord.voltha.OFLogicalDevice.LogicalPort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.OFLogicalDevice.LogicalPort other) {
        if (other == org.opencord.voltha.OFLogicalDevice.LogicalPort.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasOfpPort()) {
          mergeOfpPort(other.getOfpPort());
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.getDevicePortNo() != 0) {
          setDevicePortNo(other.getDevicePortNo());
        }
        if (other.getRootPort() != false) {
          setRootPort(other.getRootPort());
        }
        if (other.hasOfpPortStats()) {
          mergeOfpPortStats(other.getOfpPortStats());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.OFLogicalDevice.LogicalPort parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.OFLogicalDevice.LogicalPort) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_port ofpPort_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder> ofpPortBuilder_;
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public boolean hasOfpPort() {
        return ofpPortBuilder_ != null || ofpPort_ != null;
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port getOfpPort() {
        if (ofpPortBuilder_ == null) {
          return ofpPort_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance() : ofpPort_;
        } else {
          return ofpPortBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public Builder setOfpPort(org.opencord.voltha.openflow13.Openflow13.ofp_port value) {
        if (ofpPortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ofpPort_ = value;
          onChanged();
        } else {
          ofpPortBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public Builder setOfpPort(
          org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder builderForValue) {
        if (ofpPortBuilder_ == null) {
          ofpPort_ = builderForValue.build();
          onChanged();
        } else {
          ofpPortBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public Builder mergeOfpPort(org.opencord.voltha.openflow13.Openflow13.ofp_port value) {
        if (ofpPortBuilder_ == null) {
          if (ofpPort_ != null) {
            ofpPort_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_port.newBuilder(ofpPort_).mergeFrom(value).buildPartial();
          } else {
            ofpPort_ = value;
          }
          onChanged();
        } else {
          ofpPortBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public Builder clearOfpPort() {
        if (ofpPortBuilder_ == null) {
          ofpPort_ = null;
          onChanged();
        } else {
          ofpPort_ = null;
          ofpPortBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder getOfpPortBuilder() {
        
        onChanged();
        return getOfpPortFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder getOfpPortOrBuilder() {
        if (ofpPortBuilder_ != null) {
          return ofpPortBuilder_.getMessageOrBuilder();
        } else {
          return ofpPort_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance() : ofpPort_;
        }
      }
      /**
       * <code>.openflow_13.ofp_port ofp_port = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder> 
          getOfpPortFieldBuilder() {
        if (ofpPortBuilder_ == null) {
          ofpPortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_port, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder>(
                  getOfpPort(),
                  getParentForChildren(),
                  isClean());
          ofpPort_ = null;
        }
        return ofpPortBuilder_;
      }

      private java.lang.Object deviceId_ = "";
      /**
       * <code>string device_id = 3;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private int devicePortNo_ ;
      /**
       * <code>uint32 device_port_no = 4;</code>
       */
      public int getDevicePortNo() {
        return devicePortNo_;
      }
      /**
       * <code>uint32 device_port_no = 4;</code>
       */
      public Builder setDevicePortNo(int value) {
        
        devicePortNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 device_port_no = 4;</code>
       */
      public Builder clearDevicePortNo() {
        
        devicePortNo_ = 0;
        onChanged();
        return this;
      }

      private boolean rootPort_ ;
      /**
       * <code>bool root_port = 5;</code>
       */
      public boolean getRootPort() {
        return rootPort_;
      }
      /**
       * <code>bool root_port = 5;</code>
       */
      public Builder setRootPort(boolean value) {
        
        rootPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool root_port = 5;</code>
       */
      public Builder clearRootPort() {
        
        rootPort_ = false;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_port_stats ofpPortStats_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port_stats, org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_port_statsOrBuilder> ofpPortStatsBuilder_;
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public boolean hasOfpPortStats() {
        return ofpPortStatsBuilder_ != null || ofpPortStats_ != null;
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats getOfpPortStats() {
        if (ofpPortStatsBuilder_ == null) {
          return ofpPortStats_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.getDefaultInstance() : ofpPortStats_;
        } else {
          return ofpPortStatsBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public Builder setOfpPortStats(org.opencord.voltha.openflow13.Openflow13.ofp_port_stats value) {
        if (ofpPortStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ofpPortStats_ = value;
          onChanged();
        } else {
          ofpPortStatsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public Builder setOfpPortStats(
          org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder builderForValue) {
        if (ofpPortStatsBuilder_ == null) {
          ofpPortStats_ = builderForValue.build();
          onChanged();
        } else {
          ofpPortStatsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public Builder mergeOfpPortStats(org.opencord.voltha.openflow13.Openflow13.ofp_port_stats value) {
        if (ofpPortStatsBuilder_ == null) {
          if (ofpPortStats_ != null) {
            ofpPortStats_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.newBuilder(ofpPortStats_).mergeFrom(value).buildPartial();
          } else {
            ofpPortStats_ = value;
          }
          onChanged();
        } else {
          ofpPortStatsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public Builder clearOfpPortStats() {
        if (ofpPortStatsBuilder_ == null) {
          ofpPortStats_ = null;
          onChanged();
        } else {
          ofpPortStats_ = null;
          ofpPortStatsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder getOfpPortStatsBuilder() {
        
        onChanged();
        return getOfpPortStatsFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_statsOrBuilder getOfpPortStatsOrBuilder() {
        if (ofpPortStatsBuilder_ != null) {
          return ofpPortStatsBuilder_.getMessageOrBuilder();
        } else {
          return ofpPortStats_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.getDefaultInstance() : ofpPortStats_;
        }
      }
      /**
       * <code>.openflow_13.ofp_port_stats ofp_port_stats = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port_stats, org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_port_statsOrBuilder> 
          getOfpPortStatsFieldBuilder() {
        if (ofpPortStatsBuilder_ == null) {
          ofpPortStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_port_stats, org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_port_statsOrBuilder>(
                  getOfpPortStats(),
                  getParentForChildren(),
                  isClean());
          ofpPortStats_ = null;
        }
        return ofpPortStatsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:voltha.LogicalPort)
    }

    // @@protoc_insertion_point(class_scope:voltha.LogicalPort)
    private static final org.opencord.voltha.OFLogicalDevice.LogicalPort DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.OFLogicalDevice.LogicalPort();
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalPort getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalPort>
        PARSER = new com.google.protobuf.AbstractParser<LogicalPort>() {
      @java.lang.Override
      public LogicalPort parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalPort(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalPort> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalPort> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.OFLogicalDevice.LogicalPort getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalPortsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:voltha.LogicalPorts)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalPort> 
        getItemsList();
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    org.opencord.voltha.OFLogicalDevice.LogicalPort getItems(int index);
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code voltha.LogicalPorts}
   */
  public  static final class LogicalPorts extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:voltha.LogicalPorts)
      LogicalPortsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalPorts.newBuilder() to construct.
    private LogicalPorts(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalPorts() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalPorts();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalPorts(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                items_ = new java.util.ArrayList<org.opencord.voltha.OFLogicalDevice.LogicalPort>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(org.opencord.voltha.OFLogicalDevice.LogicalPort.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPorts_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPorts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.OFLogicalDevice.LogicalPorts.class, org.opencord.voltha.OFLogicalDevice.LogicalPorts.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalPort> items_;
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    public java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalPort> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    public org.opencord.voltha.OFLogicalDevice.LogicalPort getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .voltha.LogicalPort items = 1;</code>
     */
    public org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.OFLogicalDevice.LogicalPorts)) {
        return super.equals(obj);
      }
      org.opencord.voltha.OFLogicalDevice.LogicalPorts other = (org.opencord.voltha.OFLogicalDevice.LogicalPorts) obj;

      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.OFLogicalDevice.LogicalPorts prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code voltha.LogicalPorts}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:voltha.LogicalPorts)
        org.opencord.voltha.OFLogicalDevice.LogicalPortsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPorts_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPorts_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.OFLogicalDevice.LogicalPorts.class, org.opencord.voltha.OFLogicalDevice.LogicalPorts.Builder.class);
      }

      // Construct using org.opencord.voltha.OFLogicalDevice.LogicalPorts.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalPorts_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPorts getDefaultInstanceForType() {
        return org.opencord.voltha.OFLogicalDevice.LogicalPorts.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPorts build() {
        org.opencord.voltha.OFLogicalDevice.LogicalPorts result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalPorts buildPartial() {
        org.opencord.voltha.OFLogicalDevice.LogicalPorts result = new org.opencord.voltha.OFLogicalDevice.LogicalPorts(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.OFLogicalDevice.LogicalPorts) {
          return mergeFrom((org.opencord.voltha.OFLogicalDevice.LogicalPorts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.OFLogicalDevice.LogicalPorts other) {
        if (other == org.opencord.voltha.OFLogicalDevice.LogicalPorts.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.OFLogicalDevice.LogicalPorts parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.OFLogicalDevice.LogicalPorts) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalPort> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          items_ = new java.util.ArrayList<org.opencord.voltha.OFLogicalDevice.LogicalPort>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.OFLogicalDevice.LogicalPort, org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder, org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalPort> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalPort getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalPort value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder addItems(org.opencord.voltha.OFLogicalDevice.LogicalPort value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalPort value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder addItems(
          org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends org.opencord.voltha.OFLogicalDevice.LogicalPort> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            org.opencord.voltha.OFLogicalDevice.LogicalPort.getDefaultInstance());
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, org.opencord.voltha.OFLogicalDevice.LogicalPort.getDefaultInstance());
      }
      /**
       * <code>repeated .voltha.LogicalPort items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.OFLogicalDevice.LogicalPort, org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder, org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.OFLogicalDevice.LogicalPort, org.opencord.voltha.OFLogicalDevice.LogicalPort.Builder, org.opencord.voltha.OFLogicalDevice.LogicalPortOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:voltha.LogicalPorts)
    }

    // @@protoc_insertion_point(class_scope:voltha.LogicalPorts)
    private static final org.opencord.voltha.OFLogicalDevice.LogicalPorts DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.OFLogicalDevice.LogicalPorts();
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalPorts getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalPorts>
        PARSER = new com.google.protobuf.AbstractParser<LogicalPorts>() {
      @java.lang.Override
      public LogicalPorts parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalPorts(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalPorts> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalPorts> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.OFLogicalDevice.LogicalPorts getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalDeviceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:voltha.LogicalDevice)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * unique datapath id for the logical device (used by the SDN controller)
     * </pre>
     *
     * <code>uint64 datapath_id = 2;</code>
     */
    long getDatapathId();

    /**
     * <pre>
     * device description
     * </pre>
     *
     * <code>.openflow_13.ofp_desc desc = 3;</code>
     */
    boolean hasDesc();
    /**
     * <pre>
     * device description
     * </pre>
     *
     * <code>.openflow_13.ofp_desc desc = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_desc getDesc();
    /**
     * <pre>
     * device description
     * </pre>
     *
     * <code>.openflow_13.ofp_desc desc = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_descOrBuilder getDescOrBuilder();

    /**
     * <pre>
     * device features
     * </pre>
     *
     * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
     */
    boolean hasSwitchFeatures();
    /**
     * <pre>
     * device features
     * </pre>
     *
     * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_switch_features getSwitchFeatures();
    /**
     * <pre>
     * device features
     * </pre>
     *
     * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_switch_featuresOrBuilder getSwitchFeaturesOrBuilder();

    /**
     * <pre>
     * name of the root device anchoring logical device
     * </pre>
     *
     * <code>string root_device_id = 5;</code>
     */
    java.lang.String getRootDeviceId();
    /**
     * <pre>
     * name of the root device anchoring logical device
     * </pre>
     *
     * <code>string root_device_id = 5;</code>
     */
    com.google.protobuf.ByteString
        getRootDeviceIdBytes();
  }
  /**
   * Protobuf type {@code voltha.LogicalDevice}
   */
  public  static final class LogicalDevice extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:voltha.LogicalDevice)
      LogicalDeviceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalDevice.newBuilder() to construct.
    private LogicalDevice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalDevice() {
      id_ = "";
      rootDeviceId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalDevice();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalDevice(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              datapathId_ = input.readUInt64();
              break;
            }
            case 26: {
              org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder subBuilder = null;
              if (desc_ != null) {
                subBuilder = desc_.toBuilder();
              }
              desc_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_desc.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(desc_);
                desc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder subBuilder = null;
              if (switchFeatures_ != null) {
                subBuilder = switchFeatures_.toBuilder();
              }
              switchFeatures_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(switchFeatures_);
                switchFeatures_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              rootDeviceId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevice_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.OFLogicalDevice.LogicalDevice.class, org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id of logical device
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATAPATH_ID_FIELD_NUMBER = 2;
    private long datapathId_;
    /**
     * <pre>
     * unique datapath id for the logical device (used by the SDN controller)
     * </pre>
     *
     * <code>uint64 datapath_id = 2;</code>
     */
    public long getDatapathId() {
      return datapathId_;
    }

    public static final int DESC_FIELD_NUMBER = 3;
    private org.opencord.voltha.openflow13.Openflow13.ofp_desc desc_;
    /**
     * <pre>
     * device description
     * </pre>
     *
     * <code>.openflow_13.ofp_desc desc = 3;</code>
     */
    public boolean hasDesc() {
      return desc_ != null;
    }
    /**
     * <pre>
     * device description
     * </pre>
     *
     * <code>.openflow_13.ofp_desc desc = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_desc getDesc() {
      return desc_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_desc.getDefaultInstance() : desc_;
    }
    /**
     * <pre>
     * device description
     * </pre>
     *
     * <code>.openflow_13.ofp_desc desc = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_descOrBuilder getDescOrBuilder() {
      return getDesc();
    }

    public static final int SWITCH_FEATURES_FIELD_NUMBER = 4;
    private org.opencord.voltha.openflow13.Openflow13.ofp_switch_features switchFeatures_;
    /**
     * <pre>
     * device features
     * </pre>
     *
     * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
     */
    public boolean hasSwitchFeatures() {
      return switchFeatures_ != null;
    }
    /**
     * <pre>
     * device features
     * </pre>
     *
     * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_switch_features getSwitchFeatures() {
      return switchFeatures_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.getDefaultInstance() : switchFeatures_;
    }
    /**
     * <pre>
     * device features
     * </pre>
     *
     * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_switch_featuresOrBuilder getSwitchFeaturesOrBuilder() {
      return getSwitchFeatures();
    }

    public static final int ROOT_DEVICE_ID_FIELD_NUMBER = 5;
    private volatile java.lang.Object rootDeviceId_;
    /**
     * <pre>
     * name of the root device anchoring logical device
     * </pre>
     *
     * <code>string root_device_id = 5;</code>
     */
    public java.lang.String getRootDeviceId() {
      java.lang.Object ref = rootDeviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rootDeviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of the root device anchoring logical device
     * </pre>
     *
     * <code>string root_device_id = 5;</code>
     */
    public com.google.protobuf.ByteString
        getRootDeviceIdBytes() {
      java.lang.Object ref = rootDeviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rootDeviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (datapathId_ != 0L) {
        output.writeUInt64(2, datapathId_);
      }
      if (desc_ != null) {
        output.writeMessage(3, getDesc());
      }
      if (switchFeatures_ != null) {
        output.writeMessage(4, getSwitchFeatures());
      }
      if (!getRootDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, rootDeviceId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (datapathId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, datapathId_);
      }
      if (desc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDesc());
      }
      if (switchFeatures_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSwitchFeatures());
      }
      if (!getRootDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, rootDeviceId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.OFLogicalDevice.LogicalDevice)) {
        return super.equals(obj);
      }
      org.opencord.voltha.OFLogicalDevice.LogicalDevice other = (org.opencord.voltha.OFLogicalDevice.LogicalDevice) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (getDatapathId()
          != other.getDatapathId()) return false;
      if (hasDesc() != other.hasDesc()) return false;
      if (hasDesc()) {
        if (!getDesc()
            .equals(other.getDesc())) return false;
      }
      if (hasSwitchFeatures() != other.hasSwitchFeatures()) return false;
      if (hasSwitchFeatures()) {
        if (!getSwitchFeatures()
            .equals(other.getSwitchFeatures())) return false;
      }
      if (!getRootDeviceId()
          .equals(other.getRootDeviceId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + DATAPATH_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDatapathId());
      if (hasDesc()) {
        hash = (37 * hash) + DESC_FIELD_NUMBER;
        hash = (53 * hash) + getDesc().hashCode();
      }
      if (hasSwitchFeatures()) {
        hash = (37 * hash) + SWITCH_FEATURES_FIELD_NUMBER;
        hash = (53 * hash) + getSwitchFeatures().hashCode();
      }
      hash = (37 * hash) + ROOT_DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRootDeviceId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.OFLogicalDevice.LogicalDevice prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code voltha.LogicalDevice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:voltha.LogicalDevice)
        org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevice_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.OFLogicalDevice.LogicalDevice.class, org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder.class);
      }

      // Construct using org.opencord.voltha.OFLogicalDevice.LogicalDevice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        datapathId_ = 0L;

        if (descBuilder_ == null) {
          desc_ = null;
        } else {
          desc_ = null;
          descBuilder_ = null;
        }
        if (switchFeaturesBuilder_ == null) {
          switchFeatures_ = null;
        } else {
          switchFeatures_ = null;
          switchFeaturesBuilder_ = null;
        }
        rootDeviceId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevice_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalDevice getDefaultInstanceForType() {
        return org.opencord.voltha.OFLogicalDevice.LogicalDevice.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalDevice build() {
        org.opencord.voltha.OFLogicalDevice.LogicalDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalDevice buildPartial() {
        org.opencord.voltha.OFLogicalDevice.LogicalDevice result = new org.opencord.voltha.OFLogicalDevice.LogicalDevice(this);
        result.id_ = id_;
        result.datapathId_ = datapathId_;
        if (descBuilder_ == null) {
          result.desc_ = desc_;
        } else {
          result.desc_ = descBuilder_.build();
        }
        if (switchFeaturesBuilder_ == null) {
          result.switchFeatures_ = switchFeatures_;
        } else {
          result.switchFeatures_ = switchFeaturesBuilder_.build();
        }
        result.rootDeviceId_ = rootDeviceId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.OFLogicalDevice.LogicalDevice) {
          return mergeFrom((org.opencord.voltha.OFLogicalDevice.LogicalDevice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.OFLogicalDevice.LogicalDevice other) {
        if (other == org.opencord.voltha.OFLogicalDevice.LogicalDevice.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getDatapathId() != 0L) {
          setDatapathId(other.getDatapathId());
        }
        if (other.hasDesc()) {
          mergeDesc(other.getDesc());
        }
        if (other.hasSwitchFeatures()) {
          mergeSwitchFeatures(other.getSwitchFeatures());
        }
        if (!other.getRootDeviceId().isEmpty()) {
          rootDeviceId_ = other.rootDeviceId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.OFLogicalDevice.LogicalDevice parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.OFLogicalDevice.LogicalDevice) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id of logical device
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private long datapathId_ ;
      /**
       * <pre>
       * unique datapath id for the logical device (used by the SDN controller)
       * </pre>
       *
       * <code>uint64 datapath_id = 2;</code>
       */
      public long getDatapathId() {
        return datapathId_;
      }
      /**
       * <pre>
       * unique datapath id for the logical device (used by the SDN controller)
       * </pre>
       *
       * <code>uint64 datapath_id = 2;</code>
       */
      public Builder setDatapathId(long value) {
        
        datapathId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique datapath id for the logical device (used by the SDN controller)
       * </pre>
       *
       * <code>uint64 datapath_id = 2;</code>
       */
      public Builder clearDatapathId() {
        
        datapathId_ = 0L;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_desc desc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_desc, org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_descOrBuilder> descBuilder_;
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public boolean hasDesc() {
        return descBuilder_ != null || desc_ != null;
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_desc getDesc() {
        if (descBuilder_ == null) {
          return desc_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_desc.getDefaultInstance() : desc_;
        } else {
          return descBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public Builder setDesc(org.opencord.voltha.openflow13.Openflow13.ofp_desc value) {
        if (descBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          desc_ = value;
          onChanged();
        } else {
          descBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public Builder setDesc(
          org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder builderForValue) {
        if (descBuilder_ == null) {
          desc_ = builderForValue.build();
          onChanged();
        } else {
          descBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public Builder mergeDesc(org.opencord.voltha.openflow13.Openflow13.ofp_desc value) {
        if (descBuilder_ == null) {
          if (desc_ != null) {
            desc_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_desc.newBuilder(desc_).mergeFrom(value).buildPartial();
          } else {
            desc_ = value;
          }
          onChanged();
        } else {
          descBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public Builder clearDesc() {
        if (descBuilder_ == null) {
          desc_ = null;
          onChanged();
        } else {
          desc_ = null;
          descBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder getDescBuilder() {
        
        onChanged();
        return getDescFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_descOrBuilder getDescOrBuilder() {
        if (descBuilder_ != null) {
          return descBuilder_.getMessageOrBuilder();
        } else {
          return desc_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_desc.getDefaultInstance() : desc_;
        }
      }
      /**
       * <pre>
       * device description
       * </pre>
       *
       * <code>.openflow_13.ofp_desc desc = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_desc, org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_descOrBuilder> 
          getDescFieldBuilder() {
        if (descBuilder_ == null) {
          descBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_desc, org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_descOrBuilder>(
                  getDesc(),
                  getParentForChildren(),
                  isClean());
          desc_ = null;
        }
        return descBuilder_;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_switch_features switchFeatures_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_switch_features, org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_switch_featuresOrBuilder> switchFeaturesBuilder_;
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public boolean hasSwitchFeatures() {
        return switchFeaturesBuilder_ != null || switchFeatures_ != null;
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_features getSwitchFeatures() {
        if (switchFeaturesBuilder_ == null) {
          return switchFeatures_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.getDefaultInstance() : switchFeatures_;
        } else {
          return switchFeaturesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public Builder setSwitchFeatures(org.opencord.voltha.openflow13.Openflow13.ofp_switch_features value) {
        if (switchFeaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          switchFeatures_ = value;
          onChanged();
        } else {
          switchFeaturesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public Builder setSwitchFeatures(
          org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder builderForValue) {
        if (switchFeaturesBuilder_ == null) {
          switchFeatures_ = builderForValue.build();
          onChanged();
        } else {
          switchFeaturesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public Builder mergeSwitchFeatures(org.opencord.voltha.openflow13.Openflow13.ofp_switch_features value) {
        if (switchFeaturesBuilder_ == null) {
          if (switchFeatures_ != null) {
            switchFeatures_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.newBuilder(switchFeatures_).mergeFrom(value).buildPartial();
          } else {
            switchFeatures_ = value;
          }
          onChanged();
        } else {
          switchFeaturesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public Builder clearSwitchFeatures() {
        if (switchFeaturesBuilder_ == null) {
          switchFeatures_ = null;
          onChanged();
        } else {
          switchFeatures_ = null;
          switchFeaturesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder getSwitchFeaturesBuilder() {
        
        onChanged();
        return getSwitchFeaturesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_featuresOrBuilder getSwitchFeaturesOrBuilder() {
        if (switchFeaturesBuilder_ != null) {
          return switchFeaturesBuilder_.getMessageOrBuilder();
        } else {
          return switchFeatures_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.getDefaultInstance() : switchFeatures_;
        }
      }
      /**
       * <pre>
       * device features
       * </pre>
       *
       * <code>.openflow_13.ofp_switch_features switch_features = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_switch_features, org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_switch_featuresOrBuilder> 
          getSwitchFeaturesFieldBuilder() {
        if (switchFeaturesBuilder_ == null) {
          switchFeaturesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_switch_features, org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_switch_featuresOrBuilder>(
                  getSwitchFeatures(),
                  getParentForChildren(),
                  isClean());
          switchFeatures_ = null;
        }
        return switchFeaturesBuilder_;
      }

      private java.lang.Object rootDeviceId_ = "";
      /**
       * <pre>
       * name of the root device anchoring logical device
       * </pre>
       *
       * <code>string root_device_id = 5;</code>
       */
      public java.lang.String getRootDeviceId() {
        java.lang.Object ref = rootDeviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rootDeviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of the root device anchoring logical device
       * </pre>
       *
       * <code>string root_device_id = 5;</code>
       */
      public com.google.protobuf.ByteString
          getRootDeviceIdBytes() {
        java.lang.Object ref = rootDeviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rootDeviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of the root device anchoring logical device
       * </pre>
       *
       * <code>string root_device_id = 5;</code>
       */
      public Builder setRootDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rootDeviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the root device anchoring logical device
       * </pre>
       *
       * <code>string root_device_id = 5;</code>
       */
      public Builder clearRootDeviceId() {
        
        rootDeviceId_ = getDefaultInstance().getRootDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the root device anchoring logical device
       * </pre>
       *
       * <code>string root_device_id = 5;</code>
       */
      public Builder setRootDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rootDeviceId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:voltha.LogicalDevice)
    }

    // @@protoc_insertion_point(class_scope:voltha.LogicalDevice)
    private static final org.opencord.voltha.OFLogicalDevice.LogicalDevice DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.OFLogicalDevice.LogicalDevice();
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalDevice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalDevice>
        PARSER = new com.google.protobuf.AbstractParser<LogicalDevice>() {
      @java.lang.Override
      public LogicalDevice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalDevice(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalDevice> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalDevice> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.OFLogicalDevice.LogicalDevice getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalDevicesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:voltha.LogicalDevices)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalDevice> 
        getItemsList();
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    org.opencord.voltha.OFLogicalDevice.LogicalDevice getItems(int index);
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code voltha.LogicalDevices}
   */
  public  static final class LogicalDevices extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:voltha.LogicalDevices)
      LogicalDevicesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalDevices.newBuilder() to construct.
    private LogicalDevices(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalDevices() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalDevices();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalDevices(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                items_ = new java.util.ArrayList<org.opencord.voltha.OFLogicalDevice.LogicalDevice>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(org.opencord.voltha.OFLogicalDevice.LogicalDevice.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevices_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevices_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.OFLogicalDevice.LogicalDevices.class, org.opencord.voltha.OFLogicalDevice.LogicalDevices.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalDevice> items_;
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    public java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalDevice> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    public org.opencord.voltha.OFLogicalDevice.LogicalDevice getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .voltha.LogicalDevice items = 1;</code>
     */
    public org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.OFLogicalDevice.LogicalDevices)) {
        return super.equals(obj);
      }
      org.opencord.voltha.OFLogicalDevice.LogicalDevices other = (org.opencord.voltha.OFLogicalDevice.LogicalDevices) obj;

      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.OFLogicalDevice.LogicalDevices prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code voltha.LogicalDevices}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:voltha.LogicalDevices)
        org.opencord.voltha.OFLogicalDevice.LogicalDevicesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevices_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevices_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.OFLogicalDevice.LogicalDevices.class, org.opencord.voltha.OFLogicalDevice.LogicalDevices.Builder.class);
      }

      // Construct using org.opencord.voltha.OFLogicalDevice.LogicalDevices.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.OFLogicalDevice.internal_static_voltha_LogicalDevices_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalDevices getDefaultInstanceForType() {
        return org.opencord.voltha.OFLogicalDevice.LogicalDevices.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalDevices build() {
        org.opencord.voltha.OFLogicalDevice.LogicalDevices result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.OFLogicalDevice.LogicalDevices buildPartial() {
        org.opencord.voltha.OFLogicalDevice.LogicalDevices result = new org.opencord.voltha.OFLogicalDevice.LogicalDevices(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.OFLogicalDevice.LogicalDevices) {
          return mergeFrom((org.opencord.voltha.OFLogicalDevice.LogicalDevices)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.OFLogicalDevice.LogicalDevices other) {
        if (other == org.opencord.voltha.OFLogicalDevice.LogicalDevices.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.OFLogicalDevice.LogicalDevices parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.OFLogicalDevice.LogicalDevices) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalDevice> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          items_ = new java.util.ArrayList<org.opencord.voltha.OFLogicalDevice.LogicalDevice>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.OFLogicalDevice.LogicalDevice, org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder, org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalDevice> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalDevice getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalDevice value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder addItems(org.opencord.voltha.OFLogicalDevice.LogicalDevice value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalDevice value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder addItems(
          org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends org.opencord.voltha.OFLogicalDevice.LogicalDevice> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            org.opencord.voltha.OFLogicalDevice.LogicalDevice.getDefaultInstance());
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, org.opencord.voltha.OFLogicalDevice.LogicalDevice.getDefaultInstance());
      }
      /**
       * <code>repeated .voltha.LogicalDevice items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.OFLogicalDevice.LogicalDevice, org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder, org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.OFLogicalDevice.LogicalDevice, org.opencord.voltha.OFLogicalDevice.LogicalDevice.Builder, org.opencord.voltha.OFLogicalDevice.LogicalDeviceOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:voltha.LogicalDevices)
    }

    // @@protoc_insertion_point(class_scope:voltha.LogicalDevices)
    private static final org.opencord.voltha.OFLogicalDevice.LogicalDevices DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.OFLogicalDevice.LogicalDevices();
    }

    public static org.opencord.voltha.OFLogicalDevice.LogicalDevices getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalDevices>
        PARSER = new com.google.protobuf.AbstractParser<LogicalDevices>() {
      @java.lang.Override
      public LogicalDevices parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalDevices(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalDevices> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalDevices> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.OFLogicalDevice.LogicalDevices getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_voltha_LogicalPortId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_voltha_LogicalPortId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_voltha_LogicalPort_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_voltha_LogicalPort_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_voltha_LogicalPorts_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_voltha_LogicalPorts_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_voltha_LogicalDevice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_voltha_LogicalDevice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_voltha_LogicalDevices_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_voltha_LogicalDevices_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"voltha_protos/logical_device.proto\022\006vo" +
      "ltha\032\034google/api/annotations.proto\032\030volt" +
      "ha_protos/meta.proto\032\037voltha_protos/open" +
      "flow_13.proto\",\n\rLogicalPortId\022\n\n\002id\030\001 \001" +
      "(\t\022\017\n\007port_id\030\002 \001(\t\"\265\001\n\013LogicalPort\022\n\n\002i" +
      "d\030\001 \001(\t\022\'\n\010ofp_port\030\002 \001(\0132\025.openflow_13." +
      "ofp_port\022\021\n\tdevice_id\030\003 \001(\t\022\026\n\016device_po" +
      "rt_no\030\004 \001(\r\022\021\n\troot_port\030\005 \001(\010\0223\n\016ofp_po" +
      "rt_stats\030\006 \001(\0132\033.openflow_13.ofp_port_st" +
      "ats\"2\n\014LogicalPorts\022\"\n\005items\030\001 \003(\0132\023.vol" +
      "tha.LogicalPort\"\250\001\n\rLogicalDevice\022\n\n\002id\030" +
      "\001 \001(\t\022\023\n\013datapath_id\030\002 \001(\004\022#\n\004desc\030\003 \001(\013" +
      "2\025.openflow_13.ofp_desc\0229\n\017switch_featur" +
      "es\030\004 \001(\0132 .openflow_13.ofp_switch_featur" +
      "es\022\026\n\016root_device_id\030\005 \001(\t\"6\n\016LogicalDev" +
      "ices\022$\n\005items\030\001 \003(\0132\025.voltha.LogicalDevi" +
      "ceBV\n\023org.opencord.volthaB\017OFLogicalDevi" +
      "ceZ.github.com/opencord/voltha-protos/v4" +
      "/go/volthab\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          org.opencord.voltha.common.Meta.getDescriptor(),
          org.opencord.voltha.openflow13.Openflow13.getDescriptor(),
        });
    internal_static_voltha_LogicalPortId_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_voltha_LogicalPortId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_voltha_LogicalPortId_descriptor,
        new java.lang.String[] { "Id", "PortId", });
    internal_static_voltha_LogicalPort_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_voltha_LogicalPort_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_voltha_LogicalPort_descriptor,
        new java.lang.String[] { "Id", "OfpPort", "DeviceId", "DevicePortNo", "RootPort", "OfpPortStats", });
    internal_static_voltha_LogicalPorts_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_voltha_LogicalPorts_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_voltha_LogicalPorts_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_voltha_LogicalDevice_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_voltha_LogicalDevice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_voltha_LogicalDevice_descriptor,
        new java.lang.String[] { "Id", "DatapathId", "Desc", "SwitchFeatures", "RootDeviceId", });
    internal_static_voltha_LogicalDevices_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_voltha_LogicalDevices_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_voltha_LogicalDevices_descriptor,
        new java.lang.String[] { "Items", });
    com.google.api.AnnotationsProto.getDescriptor();
    org.opencord.voltha.common.Meta.getDescriptor();
    org.opencord.voltha.openflow13.Openflow13.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
