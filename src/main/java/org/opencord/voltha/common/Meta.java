// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voltha_protos/meta.proto

package org.opencord.voltha.common;

public final class Meta {
  private Meta() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.opencord.voltha.common.Meta.childNode);
    registry.add(org.opencord.voltha.common.Meta.access);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code voltha.Access}
   */
  public enum Access
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * read-write, stored attribute
     * </pre>
     *
     * <code>CONFIG = 0;</code>
     */
    CONFIG(0),
    /**
     * <pre>
     * read-only field, stored with the model, covered by its hash
     * </pre>
     *
     * <code>READ_ONLY = 1;</code>
     */
    READ_ONLY(1),
    /**
     * <pre>
     * A read-only attribute that is not stored in the model, not covered
     * by its hash, its value is filled real-time upon each request.
     * </pre>
     *
     * <code>REAL_TIME = 2;</code>
     */
    REAL_TIME(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * read-write, stored attribute
     * </pre>
     *
     * <code>CONFIG = 0;</code>
     */
    public static final int CONFIG_VALUE = 0;
    /**
     * <pre>
     * read-only field, stored with the model, covered by its hash
     * </pre>
     *
     * <code>READ_ONLY = 1;</code>
     */
    public static final int READ_ONLY_VALUE = 1;
    /**
     * <pre>
     * A read-only attribute that is not stored in the model, not covered
     * by its hash, its value is filled real-time upon each request.
     * </pre>
     *
     * <code>REAL_TIME = 2;</code>
     */
    public static final int REAL_TIME_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Access valueOf(int value) {
      return forNumber(value);
    }

    public static Access forNumber(int value) {
      switch (value) {
        case 0: return CONFIG;
        case 1: return READ_ONLY;
        case 2: return REAL_TIME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Access>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Access> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Access>() {
            public Access findValueByNumber(int number) {
              return Access.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.common.Meta.getDescriptor().getEnumTypes().get(0);
    }

    private static final Access[] VALUES = values();

    public static Access valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Access(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:voltha.Access)
  }

  public interface ChildNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:voltha.ChildNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();
  }
  /**
   * Protobuf type {@code voltha.ChildNode}
   */
  public  static final class ChildNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:voltha.ChildNode)
      ChildNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChildNode.newBuilder() to construct.
    private ChildNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChildNode() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChildNode();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChildNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.common.Meta.internal_static_voltha_ChildNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.common.Meta.internal_static_voltha_ChildNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.common.Meta.ChildNode.class, org.opencord.voltha.common.Meta.ChildNode.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.common.Meta.ChildNode)) {
        return super.equals(obj);
      }
      org.opencord.voltha.common.Meta.ChildNode other = (org.opencord.voltha.common.Meta.ChildNode) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.common.Meta.ChildNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.common.Meta.ChildNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code voltha.ChildNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:voltha.ChildNode)
        org.opencord.voltha.common.Meta.ChildNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.common.Meta.internal_static_voltha_ChildNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.common.Meta.internal_static_voltha_ChildNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.common.Meta.ChildNode.class, org.opencord.voltha.common.Meta.ChildNode.Builder.class);
      }

      // Construct using org.opencord.voltha.common.Meta.ChildNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.common.Meta.internal_static_voltha_ChildNode_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.common.Meta.ChildNode getDefaultInstanceForType() {
        return org.opencord.voltha.common.Meta.ChildNode.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.common.Meta.ChildNode build() {
        org.opencord.voltha.common.Meta.ChildNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.common.Meta.ChildNode buildPartial() {
        org.opencord.voltha.common.Meta.ChildNode result = new org.opencord.voltha.common.Meta.ChildNode(this);
        result.key_ = key_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.common.Meta.ChildNode) {
          return mergeFrom((org.opencord.voltha.common.Meta.ChildNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.common.Meta.ChildNode other) {
        if (other == org.opencord.voltha.common.Meta.ChildNode.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.common.Meta.ChildNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.common.Meta.ChildNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:voltha.ChildNode)
    }

    // @@protoc_insertion_point(class_scope:voltha.ChildNode)
    private static final org.opencord.voltha.common.Meta.ChildNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.common.Meta.ChildNode();
    }

    public static org.opencord.voltha.common.Meta.ChildNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChildNode>
        PARSER = new com.google.protobuf.AbstractParser<ChildNode>() {
      @java.lang.Override
      public ChildNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChildNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChildNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChildNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.common.Meta.ChildNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int CHILD_NODE_FIELD_NUMBER = 7761772;
  /**
   * <pre>
   * If present, it indicates that this field is stored as external child node
   * or children nodes in Voltha's internal configuration tree.
   * If the field is a container field and if the option specifies a key
   * the child objects will be addressible by that key.
   * </pre>
   *
   * <code>extend .google.protobuf.FieldOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.FieldOptions,
      org.opencord.voltha.common.Meta.ChildNode> childNode = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.opencord.voltha.common.Meta.ChildNode.class,
        org.opencord.voltha.common.Meta.ChildNode.getDefaultInstance());
  public static final int ACCESS_FIELD_NUMBER = 7761773;
  /**
   * <pre>
   * This annotation can be used to indicate that a field is read-only,
   * from the perspective of NBI access. Backend plugins and system
   * internals can update the field but the update requests through the
   * NBI will ignore for instance a field that is marked as read-only (RO).
   * </pre>
   *
   * <code>extend .google.protobuf.FieldOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.FieldOptions,
      org.opencord.voltha.common.Meta.Access> access = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.opencord.voltha.common.Meta.Access.class,
        null);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_voltha_ChildNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_voltha_ChildNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030voltha_protos/meta.proto\022\006voltha\032 goog" +
      "le/protobuf/descriptor.proto\"\030\n\tChildNod" +
      "e\022\013\n\003key\030\001 \001(\t*2\n\006Access\022\n\n\006CONFIG\020\000\022\r\n\t" +
      "READ_ONLY\020\001\022\r\n\tREAL_TIME\020\002:G\n\nchild_node" +
      "\022\035.google.protobuf.FieldOptions\030\354\336\331\003 \001(\013" +
      "2\021.voltha.ChildNode:@\n\006access\022\035.google.p" +
      "rotobuf.FieldOptions\030\355\336\331\003 \001(\0162\016.voltha.A" +
      "ccessBL\n\032org.opencord.voltha.commonZ.git" +
      "hub.com/opencord/voltha-protos/v4/go/com" +
      "monb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        });
    internal_static_voltha_ChildNode_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_voltha_ChildNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_voltha_ChildNode_descriptor,
        new java.lang.String[] { "Key", });
    childNode.internalInit(descriptor.getExtensions().get(0));
    access.internalInit(descriptor.getExtensions().get(1));
    com.google.protobuf.DescriptorProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
