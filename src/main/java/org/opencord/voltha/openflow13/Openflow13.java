// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voltha_protos/openflow_13.proto

package org.opencord.voltha.openflow13;

public final class Openflow13 {
  private Openflow13() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Port numbering. Ports are numbered starting from 1. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_port_no}
   */
  public enum ofp_port_no
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPP_INVALID = 0;</code>
     */
    OFPP_INVALID(0),
    /**
     * <pre>
     * Maximum number of physical and logical switch ports. 
     * </pre>
     *
     * <code>OFPP_MAX = 2147483392;</code>
     */
    OFPP_MAX(2147483392),
    /**
     * <pre>
     * Reserved OpenFlow Port (fake output "ports"). 
     * </pre>
     *
     * <code>OFPP_IN_PORT = 2147483640;</code>
     */
    OFPP_IN_PORT(2147483640),
    /**
     * <pre>
     * Submit the packet to the first flow table
     *NB: This destination port can only be
     *used in packet-out messages. 
     * </pre>
     *
     * <code>OFPP_TABLE = 2147483641;</code>
     */
    OFPP_TABLE(2147483641),
    /**
     * <pre>
     * Forward using non-OpenFlow pipeline. 
     * </pre>
     *
     * <code>OFPP_NORMAL = 2147483642;</code>
     */
    OFPP_NORMAL(2147483642),
    /**
     * <pre>
     * Flood using non-OpenFlow pipeline. 
     * </pre>
     *
     * <code>OFPP_FLOOD = 2147483643;</code>
     */
    OFPP_FLOOD(2147483643),
    /**
     * <pre>
     * All standard ports except input port. 
     * </pre>
     *
     * <code>OFPP_ALL = 2147483644;</code>
     */
    OFPP_ALL(2147483644),
    /**
     * <pre>
     * Send to controller. 
     * </pre>
     *
     * <code>OFPP_CONTROLLER = 2147483645;</code>
     */
    OFPP_CONTROLLER(2147483645),
    /**
     * <pre>
     * Local openflow "port". 
     * </pre>
     *
     * <code>OFPP_LOCAL = 2147483646;</code>
     */
    OFPP_LOCAL(2147483646),
    /**
     * <pre>
     * Special value used in some requests when
     *no port is specified (i.e. wildcarded).
     * </pre>
     *
     * <code>OFPP_ANY = 2147483647;</code>
     */
    OFPP_ANY(2147483647),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPP_INVALID = 0;</code>
     */
    public static final int OFPP_INVALID_VALUE = 0;
    /**
     * <pre>
     * Maximum number of physical and logical switch ports. 
     * </pre>
     *
     * <code>OFPP_MAX = 2147483392;</code>
     */
    public static final int OFPP_MAX_VALUE = 2147483392;
    /**
     * <pre>
     * Reserved OpenFlow Port (fake output "ports"). 
     * </pre>
     *
     * <code>OFPP_IN_PORT = 2147483640;</code>
     */
    public static final int OFPP_IN_PORT_VALUE = 2147483640;
    /**
     * <pre>
     * Submit the packet to the first flow table
     *NB: This destination port can only be
     *used in packet-out messages. 
     * </pre>
     *
     * <code>OFPP_TABLE = 2147483641;</code>
     */
    public static final int OFPP_TABLE_VALUE = 2147483641;
    /**
     * <pre>
     * Forward using non-OpenFlow pipeline. 
     * </pre>
     *
     * <code>OFPP_NORMAL = 2147483642;</code>
     */
    public static final int OFPP_NORMAL_VALUE = 2147483642;
    /**
     * <pre>
     * Flood using non-OpenFlow pipeline. 
     * </pre>
     *
     * <code>OFPP_FLOOD = 2147483643;</code>
     */
    public static final int OFPP_FLOOD_VALUE = 2147483643;
    /**
     * <pre>
     * All standard ports except input port. 
     * </pre>
     *
     * <code>OFPP_ALL = 2147483644;</code>
     */
    public static final int OFPP_ALL_VALUE = 2147483644;
    /**
     * <pre>
     * Send to controller. 
     * </pre>
     *
     * <code>OFPP_CONTROLLER = 2147483645;</code>
     */
    public static final int OFPP_CONTROLLER_VALUE = 2147483645;
    /**
     * <pre>
     * Local openflow "port". 
     * </pre>
     *
     * <code>OFPP_LOCAL = 2147483646;</code>
     */
    public static final int OFPP_LOCAL_VALUE = 2147483646;
    /**
     * <pre>
     * Special value used in some requests when
     *no port is specified (i.e. wildcarded).
     * </pre>
     *
     * <code>OFPP_ANY = 2147483647;</code>
     */
    public static final int OFPP_ANY_VALUE = 2147483647;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_port_no valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_port_no forNumber(int value) {
      switch (value) {
        case 0: return OFPP_INVALID;
        case 2147483392: return OFPP_MAX;
        case 2147483640: return OFPP_IN_PORT;
        case 2147483641: return OFPP_TABLE;
        case 2147483642: return OFPP_NORMAL;
        case 2147483643: return OFPP_FLOOD;
        case 2147483644: return OFPP_ALL;
        case 2147483645: return OFPP_CONTROLLER;
        case 2147483646: return OFPP_LOCAL;
        case 2147483647: return OFPP_ANY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_port_no>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_port_no> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_port_no>() {
            public ofp_port_no findValueByNumber(int number) {
              return ofp_port_no.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(0);
    }

    private static final ofp_port_no[] VALUES = values();

    public static ofp_port_no valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_port_no(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_port_no)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_type}
   */
  public enum ofp_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Immutable messages. 
     * </pre>
     *
     * <code>OFPT_HELLO = 0;</code>
     */
    OFPT_HELLO(0),
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_ERROR = 1;</code>
     */
    OFPT_ERROR(1),
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_ECHO_REQUEST = 2;</code>
     */
    OFPT_ECHO_REQUEST(2),
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_ECHO_REPLY = 3;</code>
     */
    OFPT_ECHO_REPLY(3),
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_EXPERIMENTER = 4;</code>
     */
    OFPT_EXPERIMENTER(4),
    /**
     * <pre>
     * Switch configuration messages. 
     * </pre>
     *
     * <code>OFPT_FEATURES_REQUEST = 5;</code>
     */
    OFPT_FEATURES_REQUEST(5),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_FEATURES_REPLY = 6;</code>
     */
    OFPT_FEATURES_REPLY(6),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GET_CONFIG_REQUEST = 7;</code>
     */
    OFPT_GET_CONFIG_REQUEST(7),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GET_CONFIG_REPLY = 8;</code>
     */
    OFPT_GET_CONFIG_REPLY(8),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_SET_CONFIG = 9;</code>
     */
    OFPT_SET_CONFIG(9),
    /**
     * <pre>
     * Asynchronous messages. 
     * </pre>
     *
     * <code>OFPT_PACKET_IN = 10;</code>
     */
    OFPT_PACKET_IN(10),
    /**
     * <pre>
     * Async message 
     * </pre>
     *
     * <code>OFPT_FLOW_REMOVED = 11;</code>
     */
    OFPT_FLOW_REMOVED(11),
    /**
     * <pre>
     * Async message 
     * </pre>
     *
     * <code>OFPT_PORT_STATUS = 12;</code>
     */
    OFPT_PORT_STATUS(12),
    /**
     * <pre>
     * Controller command messages. 
     * </pre>
     *
     * <code>OFPT_PACKET_OUT = 13;</code>
     */
    OFPT_PACKET_OUT(13),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_FLOW_MOD = 14;</code>
     */
    OFPT_FLOW_MOD(14),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GROUP_MOD = 15;</code>
     */
    OFPT_GROUP_MOD(15),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_PORT_MOD = 16;</code>
     */
    OFPT_PORT_MOD(16),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_TABLE_MOD = 17;</code>
     */
    OFPT_TABLE_MOD(17),
    /**
     * <pre>
     * Multipart messages. 
     * </pre>
     *
     * <code>OFPT_MULTIPART_REQUEST = 18;</code>
     */
    OFPT_MULTIPART_REQUEST(18),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_MULTIPART_REPLY = 19;</code>
     */
    OFPT_MULTIPART_REPLY(19),
    /**
     * <pre>
     * Barrier messages. 
     * </pre>
     *
     * <code>OFPT_BARRIER_REQUEST = 20;</code>
     */
    OFPT_BARRIER_REQUEST(20),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_BARRIER_REPLY = 21;</code>
     */
    OFPT_BARRIER_REPLY(21),
    /**
     * <pre>
     * Queue Configuration messages. 
     * </pre>
     *
     * <code>OFPT_QUEUE_GET_CONFIG_REQUEST = 22;</code>
     */
    OFPT_QUEUE_GET_CONFIG_REQUEST(22),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_QUEUE_GET_CONFIG_REPLY = 23;</code>
     */
    OFPT_QUEUE_GET_CONFIG_REPLY(23),
    /**
     * <pre>
     * Controller role change request messages. 
     * </pre>
     *
     * <code>OFPT_ROLE_REQUEST = 24;</code>
     */
    OFPT_ROLE_REQUEST(24),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_ROLE_REPLY = 25;</code>
     */
    OFPT_ROLE_REPLY(25),
    /**
     * <pre>
     * Asynchronous message configuration. 
     * </pre>
     *
     * <code>OFPT_GET_ASYNC_REQUEST = 26;</code>
     */
    OFPT_GET_ASYNC_REQUEST(26),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GET_ASYNC_REPLY = 27;</code>
     */
    OFPT_GET_ASYNC_REPLY(27),
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_SET_ASYNC = 28;</code>
     */
    OFPT_SET_ASYNC(28),
    /**
     * <pre>
     * Meters and rate limiters configuration messages. 
     * </pre>
     *
     * <code>OFPT_METER_MOD = 29;</code>
     */
    OFPT_METER_MOD(29),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Immutable messages. 
     * </pre>
     *
     * <code>OFPT_HELLO = 0;</code>
     */
    public static final int OFPT_HELLO_VALUE = 0;
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_ERROR = 1;</code>
     */
    public static final int OFPT_ERROR_VALUE = 1;
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_ECHO_REQUEST = 2;</code>
     */
    public static final int OFPT_ECHO_REQUEST_VALUE = 2;
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_ECHO_REPLY = 3;</code>
     */
    public static final int OFPT_ECHO_REPLY_VALUE = 3;
    /**
     * <pre>
     * Symmetric message 
     * </pre>
     *
     * <code>OFPT_EXPERIMENTER = 4;</code>
     */
    public static final int OFPT_EXPERIMENTER_VALUE = 4;
    /**
     * <pre>
     * Switch configuration messages. 
     * </pre>
     *
     * <code>OFPT_FEATURES_REQUEST = 5;</code>
     */
    public static final int OFPT_FEATURES_REQUEST_VALUE = 5;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_FEATURES_REPLY = 6;</code>
     */
    public static final int OFPT_FEATURES_REPLY_VALUE = 6;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GET_CONFIG_REQUEST = 7;</code>
     */
    public static final int OFPT_GET_CONFIG_REQUEST_VALUE = 7;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GET_CONFIG_REPLY = 8;</code>
     */
    public static final int OFPT_GET_CONFIG_REPLY_VALUE = 8;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_SET_CONFIG = 9;</code>
     */
    public static final int OFPT_SET_CONFIG_VALUE = 9;
    /**
     * <pre>
     * Asynchronous messages. 
     * </pre>
     *
     * <code>OFPT_PACKET_IN = 10;</code>
     */
    public static final int OFPT_PACKET_IN_VALUE = 10;
    /**
     * <pre>
     * Async message 
     * </pre>
     *
     * <code>OFPT_FLOW_REMOVED = 11;</code>
     */
    public static final int OFPT_FLOW_REMOVED_VALUE = 11;
    /**
     * <pre>
     * Async message 
     * </pre>
     *
     * <code>OFPT_PORT_STATUS = 12;</code>
     */
    public static final int OFPT_PORT_STATUS_VALUE = 12;
    /**
     * <pre>
     * Controller command messages. 
     * </pre>
     *
     * <code>OFPT_PACKET_OUT = 13;</code>
     */
    public static final int OFPT_PACKET_OUT_VALUE = 13;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_FLOW_MOD = 14;</code>
     */
    public static final int OFPT_FLOW_MOD_VALUE = 14;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GROUP_MOD = 15;</code>
     */
    public static final int OFPT_GROUP_MOD_VALUE = 15;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_PORT_MOD = 16;</code>
     */
    public static final int OFPT_PORT_MOD_VALUE = 16;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_TABLE_MOD = 17;</code>
     */
    public static final int OFPT_TABLE_MOD_VALUE = 17;
    /**
     * <pre>
     * Multipart messages. 
     * </pre>
     *
     * <code>OFPT_MULTIPART_REQUEST = 18;</code>
     */
    public static final int OFPT_MULTIPART_REQUEST_VALUE = 18;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_MULTIPART_REPLY = 19;</code>
     */
    public static final int OFPT_MULTIPART_REPLY_VALUE = 19;
    /**
     * <pre>
     * Barrier messages. 
     * </pre>
     *
     * <code>OFPT_BARRIER_REQUEST = 20;</code>
     */
    public static final int OFPT_BARRIER_REQUEST_VALUE = 20;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_BARRIER_REPLY = 21;</code>
     */
    public static final int OFPT_BARRIER_REPLY_VALUE = 21;
    /**
     * <pre>
     * Queue Configuration messages. 
     * </pre>
     *
     * <code>OFPT_QUEUE_GET_CONFIG_REQUEST = 22;</code>
     */
    public static final int OFPT_QUEUE_GET_CONFIG_REQUEST_VALUE = 22;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_QUEUE_GET_CONFIG_REPLY = 23;</code>
     */
    public static final int OFPT_QUEUE_GET_CONFIG_REPLY_VALUE = 23;
    /**
     * <pre>
     * Controller role change request messages. 
     * </pre>
     *
     * <code>OFPT_ROLE_REQUEST = 24;</code>
     */
    public static final int OFPT_ROLE_REQUEST_VALUE = 24;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_ROLE_REPLY = 25;</code>
     */
    public static final int OFPT_ROLE_REPLY_VALUE = 25;
    /**
     * <pre>
     * Asynchronous message configuration. 
     * </pre>
     *
     * <code>OFPT_GET_ASYNC_REQUEST = 26;</code>
     */
    public static final int OFPT_GET_ASYNC_REQUEST_VALUE = 26;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_GET_ASYNC_REPLY = 27;</code>
     */
    public static final int OFPT_GET_ASYNC_REPLY_VALUE = 27;
    /**
     * <pre>
     * Controller/switch message 
     * </pre>
     *
     * <code>OFPT_SET_ASYNC = 28;</code>
     */
    public static final int OFPT_SET_ASYNC_VALUE = 28;
    /**
     * <pre>
     * Meters and rate limiters configuration messages. 
     * </pre>
     *
     * <code>OFPT_METER_MOD = 29;</code>
     */
    public static final int OFPT_METER_MOD_VALUE = 29;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_type forNumber(int value) {
      switch (value) {
        case 0: return OFPT_HELLO;
        case 1: return OFPT_ERROR;
        case 2: return OFPT_ECHO_REQUEST;
        case 3: return OFPT_ECHO_REPLY;
        case 4: return OFPT_EXPERIMENTER;
        case 5: return OFPT_FEATURES_REQUEST;
        case 6: return OFPT_FEATURES_REPLY;
        case 7: return OFPT_GET_CONFIG_REQUEST;
        case 8: return OFPT_GET_CONFIG_REPLY;
        case 9: return OFPT_SET_CONFIG;
        case 10: return OFPT_PACKET_IN;
        case 11: return OFPT_FLOW_REMOVED;
        case 12: return OFPT_PORT_STATUS;
        case 13: return OFPT_PACKET_OUT;
        case 14: return OFPT_FLOW_MOD;
        case 15: return OFPT_GROUP_MOD;
        case 16: return OFPT_PORT_MOD;
        case 17: return OFPT_TABLE_MOD;
        case 18: return OFPT_MULTIPART_REQUEST;
        case 19: return OFPT_MULTIPART_REPLY;
        case 20: return OFPT_BARRIER_REQUEST;
        case 21: return OFPT_BARRIER_REPLY;
        case 22: return OFPT_QUEUE_GET_CONFIG_REQUEST;
        case 23: return OFPT_QUEUE_GET_CONFIG_REPLY;
        case 24: return OFPT_ROLE_REQUEST;
        case 25: return OFPT_ROLE_REPLY;
        case 26: return OFPT_GET_ASYNC_REQUEST;
        case 27: return OFPT_GET_ASYNC_REPLY;
        case 28: return OFPT_SET_ASYNC;
        case 29: return OFPT_METER_MOD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_type>() {
            public ofp_type findValueByNumber(int number) {
              return ofp_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(1);
    }

    private static final ofp_type[] VALUES = values();

    public static ofp_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_type)
  }

  /**
   * <pre>
   * Hello elements types.
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_hello_elem_type}
   */
  public enum ofp_hello_elem_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPHET_INVALID = 0;</code>
     */
    OFPHET_INVALID(0),
    /**
     * <pre>
     * Bitmap of version supported. 
     * </pre>
     *
     * <code>OFPHET_VERSIONBITMAP = 1;</code>
     */
    OFPHET_VERSIONBITMAP(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPHET_INVALID = 0;</code>
     */
    public static final int OFPHET_INVALID_VALUE = 0;
    /**
     * <pre>
     * Bitmap of version supported. 
     * </pre>
     *
     * <code>OFPHET_VERSIONBITMAP = 1;</code>
     */
    public static final int OFPHET_VERSIONBITMAP_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_hello_elem_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_hello_elem_type forNumber(int value) {
      switch (value) {
        case 0: return OFPHET_INVALID;
        case 1: return OFPHET_VERSIONBITMAP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_hello_elem_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_hello_elem_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_hello_elem_type>() {
            public ofp_hello_elem_type findValueByNumber(int number) {
              return ofp_hello_elem_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(2);
    }

    private static final ofp_hello_elem_type[] VALUES = values();

    public static ofp_hello_elem_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_hello_elem_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_hello_elem_type)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_config_flags}
   */
  public enum ofp_config_flags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Handling of IP fragments. 
     * </pre>
     *
     * <code>OFPC_FRAG_NORMAL = 0;</code>
     */
    OFPC_FRAG_NORMAL(0),
    /**
     * <pre>
     * Drop fragments. 
     * </pre>
     *
     * <code>OFPC_FRAG_DROP = 1;</code>
     */
    OFPC_FRAG_DROP(1),
    /**
     * <pre>
     * Reassemble (only if OFPC_IP_REASM set). 
     * </pre>
     *
     * <code>OFPC_FRAG_REASM = 2;</code>
     */
    OFPC_FRAG_REASM(2),
    /**
     * <pre>
     * Bitmask of flags dealing with frag. 
     * </pre>
     *
     * <code>OFPC_FRAG_MASK = 3;</code>
     */
    OFPC_FRAG_MASK(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Handling of IP fragments. 
     * </pre>
     *
     * <code>OFPC_FRAG_NORMAL = 0;</code>
     */
    public static final int OFPC_FRAG_NORMAL_VALUE = 0;
    /**
     * <pre>
     * Drop fragments. 
     * </pre>
     *
     * <code>OFPC_FRAG_DROP = 1;</code>
     */
    public static final int OFPC_FRAG_DROP_VALUE = 1;
    /**
     * <pre>
     * Reassemble (only if OFPC_IP_REASM set). 
     * </pre>
     *
     * <code>OFPC_FRAG_REASM = 2;</code>
     */
    public static final int OFPC_FRAG_REASM_VALUE = 2;
    /**
     * <pre>
     * Bitmask of flags dealing with frag. 
     * </pre>
     *
     * <code>OFPC_FRAG_MASK = 3;</code>
     */
    public static final int OFPC_FRAG_MASK_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_config_flags valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_config_flags forNumber(int value) {
      switch (value) {
        case 0: return OFPC_FRAG_NORMAL;
        case 1: return OFPC_FRAG_DROP;
        case 2: return OFPC_FRAG_REASM;
        case 3: return OFPC_FRAG_MASK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_config_flags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_config_flags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_config_flags>() {
            public ofp_config_flags findValueByNumber(int number) {
              return ofp_config_flags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(3);
    }

    private static final ofp_config_flags[] VALUES = values();

    public static ofp_config_flags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_config_flags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_config_flags)
  }

  /**
   * <pre>
   * Flags to configure the table. Reserved for future use. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_table_config}
   */
  public enum ofp_table_config
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPTC_INVALID = 0;</code>
     */
    OFPTC_INVALID(0),
    /**
     * <pre>
     * Deprecated bits 
     * </pre>
     *
     * <code>OFPTC_DEPRECATED_MASK = 3;</code>
     */
    OFPTC_DEPRECATED_MASK(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPTC_INVALID = 0;</code>
     */
    public static final int OFPTC_INVALID_VALUE = 0;
    /**
     * <pre>
     * Deprecated bits 
     * </pre>
     *
     * <code>OFPTC_DEPRECATED_MASK = 3;</code>
     */
    public static final int OFPTC_DEPRECATED_MASK_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_table_config valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_table_config forNumber(int value) {
      switch (value) {
        case 0: return OFPTC_INVALID;
        case 3: return OFPTC_DEPRECATED_MASK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_table_config>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_table_config> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_table_config>() {
            public ofp_table_config findValueByNumber(int number) {
              return ofp_table_config.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(4);
    }

    private static final ofp_table_config[] VALUES = values();

    public static ofp_table_config valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_table_config(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_table_config)
  }

  /**
   * <pre>
   * Table numbering. Tables can use any number up to OFPT_MAX. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_table}
   */
  public enum ofp_table
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPTT_INVALID = 0;</code>
     */
    OFPTT_INVALID(0),
    /**
     * <pre>
     * Last usable table number. 
     * </pre>
     *
     * <code>OFPTT_MAX = 254;</code>
     */
    OFPTT_MAX(254),
    /**
     * <pre>
     * Fake tables. 
     * </pre>
     *
     * <code>OFPTT_ALL = 255;</code>
     */
    OFPTT_ALL(255),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPTT_INVALID = 0;</code>
     */
    public static final int OFPTT_INVALID_VALUE = 0;
    /**
     * <pre>
     * Last usable table number. 
     * </pre>
     *
     * <code>OFPTT_MAX = 254;</code>
     */
    public static final int OFPTT_MAX_VALUE = 254;
    /**
     * <pre>
     * Fake tables. 
     * </pre>
     *
     * <code>OFPTT_ALL = 255;</code>
     */
    public static final int OFPTT_ALL_VALUE = 255;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_table valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_table forNumber(int value) {
      switch (value) {
        case 0: return OFPTT_INVALID;
        case 254: return OFPTT_MAX;
        case 255: return OFPTT_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_table>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_table> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_table>() {
            public ofp_table findValueByNumber(int number) {
              return ofp_table.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(5);
    }

    private static final ofp_table[] VALUES = values();

    public static ofp_table valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_table(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_table)
  }

  /**
   * <pre>
   * Capabilities supported by the datapath. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_capabilities}
   */
  public enum ofp_capabilities
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPC_INVALID = 0;</code>
     */
    OFPC_INVALID(0),
    /**
     * <pre>
     * Flow statistics. 
     * </pre>
     *
     * <code>OFPC_FLOW_STATS = 1;</code>
     */
    OFPC_FLOW_STATS(1),
    /**
     * <pre>
     * Table statistics. 
     * </pre>
     *
     * <code>OFPC_TABLE_STATS = 2;</code>
     */
    OFPC_TABLE_STATS(2),
    /**
     * <pre>
     * Port statistics. 
     * </pre>
     *
     * <code>OFPC_PORT_STATS = 4;</code>
     */
    OFPC_PORT_STATS(4),
    /**
     * <pre>
     * Group statistics. 
     * </pre>
     *
     * <code>OFPC_GROUP_STATS = 8;</code>
     */
    OFPC_GROUP_STATS(8),
    /**
     * <pre>
     * Can reassemble IP fragments. 
     * </pre>
     *
     * <code>OFPC_IP_REASM = 32;</code>
     */
    OFPC_IP_REASM(32),
    /**
     * <pre>
     * Queue statistics. 
     * </pre>
     *
     * <code>OFPC_QUEUE_STATS = 64;</code>
     */
    OFPC_QUEUE_STATS(64),
    /**
     * <pre>
     * Switch will block looping ports. 
     * </pre>
     *
     * <code>OFPC_PORT_BLOCKED = 256;</code>
     */
    OFPC_PORT_BLOCKED(256),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPC_INVALID = 0;</code>
     */
    public static final int OFPC_INVALID_VALUE = 0;
    /**
     * <pre>
     * Flow statistics. 
     * </pre>
     *
     * <code>OFPC_FLOW_STATS = 1;</code>
     */
    public static final int OFPC_FLOW_STATS_VALUE = 1;
    /**
     * <pre>
     * Table statistics. 
     * </pre>
     *
     * <code>OFPC_TABLE_STATS = 2;</code>
     */
    public static final int OFPC_TABLE_STATS_VALUE = 2;
    /**
     * <pre>
     * Port statistics. 
     * </pre>
     *
     * <code>OFPC_PORT_STATS = 4;</code>
     */
    public static final int OFPC_PORT_STATS_VALUE = 4;
    /**
     * <pre>
     * Group statistics. 
     * </pre>
     *
     * <code>OFPC_GROUP_STATS = 8;</code>
     */
    public static final int OFPC_GROUP_STATS_VALUE = 8;
    /**
     * <pre>
     * Can reassemble IP fragments. 
     * </pre>
     *
     * <code>OFPC_IP_REASM = 32;</code>
     */
    public static final int OFPC_IP_REASM_VALUE = 32;
    /**
     * <pre>
     * Queue statistics. 
     * </pre>
     *
     * <code>OFPC_QUEUE_STATS = 64;</code>
     */
    public static final int OFPC_QUEUE_STATS_VALUE = 64;
    /**
     * <pre>
     * Switch will block looping ports. 
     * </pre>
     *
     * <code>OFPC_PORT_BLOCKED = 256;</code>
     */
    public static final int OFPC_PORT_BLOCKED_VALUE = 256;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_capabilities valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_capabilities forNumber(int value) {
      switch (value) {
        case 0: return OFPC_INVALID;
        case 1: return OFPC_FLOW_STATS;
        case 2: return OFPC_TABLE_STATS;
        case 4: return OFPC_PORT_STATS;
        case 8: return OFPC_GROUP_STATS;
        case 32: return OFPC_IP_REASM;
        case 64: return OFPC_QUEUE_STATS;
        case 256: return OFPC_PORT_BLOCKED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_capabilities>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_capabilities> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_capabilities>() {
            public ofp_capabilities findValueByNumber(int number) {
              return ofp_capabilities.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(6);
    }

    private static final ofp_capabilities[] VALUES = values();

    public static ofp_capabilities valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_capabilities(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_capabilities)
  }

  /**
   * <pre>
   * Flags to indicate behavior of the physical port.  These flags are
   * used in ofp_port to describe the current configuration.  They are
   * used in the ofp_port_mod message to configure the port's behavior.
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_port_config}
   */
  public enum ofp_port_config
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPPC_INVALID = 0;</code>
     */
    OFPPC_INVALID(0),
    /**
     * <pre>
     * Port is administratively down. 
     * </pre>
     *
     * <code>OFPPC_PORT_DOWN = 1;</code>
     */
    OFPPC_PORT_DOWN(1),
    /**
     * <pre>
     * Drop all packets received by port. 
     * </pre>
     *
     * <code>OFPPC_NO_RECV = 4;</code>
     */
    OFPPC_NO_RECV(4),
    /**
     * <pre>
     * Drop packets forwarded to port. 
     * </pre>
     *
     * <code>OFPPC_NO_FWD = 32;</code>
     */
    OFPPC_NO_FWD(32),
    /**
     * <pre>
     * Do not send packet-in msgs for port. 
     * </pre>
     *
     * <code>OFPPC_NO_PACKET_IN = 64;</code>
     */
    OFPPC_NO_PACKET_IN(64),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPPC_INVALID = 0;</code>
     */
    public static final int OFPPC_INVALID_VALUE = 0;
    /**
     * <pre>
     * Port is administratively down. 
     * </pre>
     *
     * <code>OFPPC_PORT_DOWN = 1;</code>
     */
    public static final int OFPPC_PORT_DOWN_VALUE = 1;
    /**
     * <pre>
     * Drop all packets received by port. 
     * </pre>
     *
     * <code>OFPPC_NO_RECV = 4;</code>
     */
    public static final int OFPPC_NO_RECV_VALUE = 4;
    /**
     * <pre>
     * Drop packets forwarded to port. 
     * </pre>
     *
     * <code>OFPPC_NO_FWD = 32;</code>
     */
    public static final int OFPPC_NO_FWD_VALUE = 32;
    /**
     * <pre>
     * Do not send packet-in msgs for port. 
     * </pre>
     *
     * <code>OFPPC_NO_PACKET_IN = 64;</code>
     */
    public static final int OFPPC_NO_PACKET_IN_VALUE = 64;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_port_config valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_port_config forNumber(int value) {
      switch (value) {
        case 0: return OFPPC_INVALID;
        case 1: return OFPPC_PORT_DOWN;
        case 4: return OFPPC_NO_RECV;
        case 32: return OFPPC_NO_FWD;
        case 64: return OFPPC_NO_PACKET_IN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_port_config>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_port_config> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_port_config>() {
            public ofp_port_config findValueByNumber(int number) {
              return ofp_port_config.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(7);
    }

    private static final ofp_port_config[] VALUES = values();

    public static ofp_port_config valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_port_config(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_port_config)
  }

  /**
   * <pre>
   * Current state of the physical port.  These are not configurable from
   * the controller.
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_port_state}
   */
  public enum ofp_port_state
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPPS_INVALID = 0;</code>
     */
    OFPPS_INVALID(0),
    /**
     * <pre>
     * No physical link present. 
     * </pre>
     *
     * <code>OFPPS_LINK_DOWN = 1;</code>
     */
    OFPPS_LINK_DOWN(1),
    /**
     * <pre>
     * Port is blocked 
     * </pre>
     *
     * <code>OFPPS_BLOCKED = 2;</code>
     */
    OFPPS_BLOCKED(2),
    /**
     * <pre>
     * Live for Fast Failover Group. 
     * </pre>
     *
     * <code>OFPPS_LIVE = 4;</code>
     */
    OFPPS_LIVE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPPS_INVALID = 0;</code>
     */
    public static final int OFPPS_INVALID_VALUE = 0;
    /**
     * <pre>
     * No physical link present. 
     * </pre>
     *
     * <code>OFPPS_LINK_DOWN = 1;</code>
     */
    public static final int OFPPS_LINK_DOWN_VALUE = 1;
    /**
     * <pre>
     * Port is blocked 
     * </pre>
     *
     * <code>OFPPS_BLOCKED = 2;</code>
     */
    public static final int OFPPS_BLOCKED_VALUE = 2;
    /**
     * <pre>
     * Live for Fast Failover Group. 
     * </pre>
     *
     * <code>OFPPS_LIVE = 4;</code>
     */
    public static final int OFPPS_LIVE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_port_state valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_port_state forNumber(int value) {
      switch (value) {
        case 0: return OFPPS_INVALID;
        case 1: return OFPPS_LINK_DOWN;
        case 2: return OFPPS_BLOCKED;
        case 4: return OFPPS_LIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_port_state>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_port_state> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_port_state>() {
            public ofp_port_state findValueByNumber(int number) {
              return ofp_port_state.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(8);
    }

    private static final ofp_port_state[] VALUES = values();

    public static ofp_port_state valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_port_state(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_port_state)
  }

  /**
   * <pre>
   * Features of ports available in a datapath. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_port_features}
   */
  public enum ofp_port_features
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPPF_INVALID = 0;</code>
     */
    OFPPF_INVALID(0),
    /**
     * <pre>
     * 10 Mb half-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_10MB_HD = 1;</code>
     */
    OFPPF_10MB_HD(1),
    /**
     * <pre>
     * 10 Mb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_10MB_FD = 2;</code>
     */
    OFPPF_10MB_FD(2),
    /**
     * <pre>
     * 100 Mb half-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_100MB_HD = 4;</code>
     */
    OFPPF_100MB_HD(4),
    /**
     * <pre>
     * 100 Mb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_100MB_FD = 8;</code>
     */
    OFPPF_100MB_FD(8),
    /**
     * <pre>
     * 1 Gb half-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_1GB_HD = 16;</code>
     */
    OFPPF_1GB_HD(16),
    /**
     * <pre>
     * 1 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_1GB_FD = 32;</code>
     */
    OFPPF_1GB_FD(32),
    /**
     * <pre>
     * 10 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_10GB_FD = 64;</code>
     */
    OFPPF_10GB_FD(64),
    /**
     * <pre>
     * 40 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_40GB_FD = 128;</code>
     */
    OFPPF_40GB_FD(128),
    /**
     * <pre>
     * 100 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_100GB_FD = 256;</code>
     */
    OFPPF_100GB_FD(256),
    /**
     * <pre>
     * 1 Tb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_1TB_FD = 512;</code>
     */
    OFPPF_1TB_FD(512),
    /**
     * <pre>
     * Other rate, not in the list. 
     * </pre>
     *
     * <code>OFPPF_OTHER = 1024;</code>
     */
    OFPPF_OTHER(1024),
    /**
     * <pre>
     * Copper medium. 
     * </pre>
     *
     * <code>OFPPF_COPPER = 2048;</code>
     */
    OFPPF_COPPER(2048),
    /**
     * <pre>
     * Fiber medium. 
     * </pre>
     *
     * <code>OFPPF_FIBER = 4096;</code>
     */
    OFPPF_FIBER(4096),
    /**
     * <pre>
     * Auto-negotiation. 
     * </pre>
     *
     * <code>OFPPF_AUTONEG = 8192;</code>
     */
    OFPPF_AUTONEG(8192),
    /**
     * <pre>
     * Pause. 
     * </pre>
     *
     * <code>OFPPF_PAUSE = 16384;</code>
     */
    OFPPF_PAUSE(16384),
    /**
     * <pre>
     * Asymmetric pause. 
     * </pre>
     *
     * <code>OFPPF_PAUSE_ASYM = 32768;</code>
     */
    OFPPF_PAUSE_ASYM(32768),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPPF_INVALID = 0;</code>
     */
    public static final int OFPPF_INVALID_VALUE = 0;
    /**
     * <pre>
     * 10 Mb half-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_10MB_HD = 1;</code>
     */
    public static final int OFPPF_10MB_HD_VALUE = 1;
    /**
     * <pre>
     * 10 Mb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_10MB_FD = 2;</code>
     */
    public static final int OFPPF_10MB_FD_VALUE = 2;
    /**
     * <pre>
     * 100 Mb half-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_100MB_HD = 4;</code>
     */
    public static final int OFPPF_100MB_HD_VALUE = 4;
    /**
     * <pre>
     * 100 Mb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_100MB_FD = 8;</code>
     */
    public static final int OFPPF_100MB_FD_VALUE = 8;
    /**
     * <pre>
     * 1 Gb half-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_1GB_HD = 16;</code>
     */
    public static final int OFPPF_1GB_HD_VALUE = 16;
    /**
     * <pre>
     * 1 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_1GB_FD = 32;</code>
     */
    public static final int OFPPF_1GB_FD_VALUE = 32;
    /**
     * <pre>
     * 10 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_10GB_FD = 64;</code>
     */
    public static final int OFPPF_10GB_FD_VALUE = 64;
    /**
     * <pre>
     * 40 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_40GB_FD = 128;</code>
     */
    public static final int OFPPF_40GB_FD_VALUE = 128;
    /**
     * <pre>
     * 100 Gb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_100GB_FD = 256;</code>
     */
    public static final int OFPPF_100GB_FD_VALUE = 256;
    /**
     * <pre>
     * 1 Tb full-duplex rate support. 
     * </pre>
     *
     * <code>OFPPF_1TB_FD = 512;</code>
     */
    public static final int OFPPF_1TB_FD_VALUE = 512;
    /**
     * <pre>
     * Other rate, not in the list. 
     * </pre>
     *
     * <code>OFPPF_OTHER = 1024;</code>
     */
    public static final int OFPPF_OTHER_VALUE = 1024;
    /**
     * <pre>
     * Copper medium. 
     * </pre>
     *
     * <code>OFPPF_COPPER = 2048;</code>
     */
    public static final int OFPPF_COPPER_VALUE = 2048;
    /**
     * <pre>
     * Fiber medium. 
     * </pre>
     *
     * <code>OFPPF_FIBER = 4096;</code>
     */
    public static final int OFPPF_FIBER_VALUE = 4096;
    /**
     * <pre>
     * Auto-negotiation. 
     * </pre>
     *
     * <code>OFPPF_AUTONEG = 8192;</code>
     */
    public static final int OFPPF_AUTONEG_VALUE = 8192;
    /**
     * <pre>
     * Pause. 
     * </pre>
     *
     * <code>OFPPF_PAUSE = 16384;</code>
     */
    public static final int OFPPF_PAUSE_VALUE = 16384;
    /**
     * <pre>
     * Asymmetric pause. 
     * </pre>
     *
     * <code>OFPPF_PAUSE_ASYM = 32768;</code>
     */
    public static final int OFPPF_PAUSE_ASYM_VALUE = 32768;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_port_features valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_port_features forNumber(int value) {
      switch (value) {
        case 0: return OFPPF_INVALID;
        case 1: return OFPPF_10MB_HD;
        case 2: return OFPPF_10MB_FD;
        case 4: return OFPPF_100MB_HD;
        case 8: return OFPPF_100MB_FD;
        case 16: return OFPPF_1GB_HD;
        case 32: return OFPPF_1GB_FD;
        case 64: return OFPPF_10GB_FD;
        case 128: return OFPPF_40GB_FD;
        case 256: return OFPPF_100GB_FD;
        case 512: return OFPPF_1TB_FD;
        case 1024: return OFPPF_OTHER;
        case 2048: return OFPPF_COPPER;
        case 4096: return OFPPF_FIBER;
        case 8192: return OFPPF_AUTONEG;
        case 16384: return OFPPF_PAUSE;
        case 32768: return OFPPF_PAUSE_ASYM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_port_features>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_port_features> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_port_features>() {
            public ofp_port_features findValueByNumber(int number) {
              return ofp_port_features.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(9);
    }

    private static final ofp_port_features[] VALUES = values();

    public static ofp_port_features valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_port_features(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_port_features)
  }

  /**
   * <pre>
   * What changed about the physical port 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_port_reason}
   */
  public enum ofp_port_reason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The port was added. 
     * </pre>
     *
     * <code>OFPPR_ADD = 0;</code>
     */
    OFPPR_ADD(0),
    /**
     * <pre>
     * The port was removed. 
     * </pre>
     *
     * <code>OFPPR_DELETE = 1;</code>
     */
    OFPPR_DELETE(1),
    /**
     * <pre>
     * Some attribute of the port has changed. 
     * </pre>
     *
     * <code>OFPPR_MODIFY = 2;</code>
     */
    OFPPR_MODIFY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The port was added. 
     * </pre>
     *
     * <code>OFPPR_ADD = 0;</code>
     */
    public static final int OFPPR_ADD_VALUE = 0;
    /**
     * <pre>
     * The port was removed. 
     * </pre>
     *
     * <code>OFPPR_DELETE = 1;</code>
     */
    public static final int OFPPR_DELETE_VALUE = 1;
    /**
     * <pre>
     * Some attribute of the port has changed. 
     * </pre>
     *
     * <code>OFPPR_MODIFY = 2;</code>
     */
    public static final int OFPPR_MODIFY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_port_reason valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_port_reason forNumber(int value) {
      switch (value) {
        case 0: return OFPPR_ADD;
        case 1: return OFPPR_DELETE;
        case 2: return OFPPR_MODIFY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_port_reason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_port_reason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_port_reason>() {
            public ofp_port_reason findValueByNumber(int number) {
              return ofp_port_reason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(10);
    }

    private static final ofp_port_reason[] VALUES = values();

    public static ofp_port_reason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_port_reason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_port_reason)
  }

  /**
   * <pre>
   * The match type indicates the match structure (set of fields that compose the
   * match) in use. The match type is placed in the type field at the beginning
   * of all match structures. The "OpenFlow Extensible Match" type corresponds
   * to OXM TLV format described below and must be supported by all OpenFlow
   * switches. Extensions that define other match types may be published on the
   * ONF wiki. Support for extensions is optional.
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_match_type}
   */
  public enum ofp_match_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Deprecated. 
     * </pre>
     *
     * <code>OFPMT_STANDARD = 0;</code>
     */
    OFPMT_STANDARD(0),
    /**
     * <pre>
     * OpenFlow Extensible Match 
     * </pre>
     *
     * <code>OFPMT_OXM = 1;</code>
     */
    OFPMT_OXM(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Deprecated. 
     * </pre>
     *
     * <code>OFPMT_STANDARD = 0;</code>
     */
    public static final int OFPMT_STANDARD_VALUE = 0;
    /**
     * <pre>
     * OpenFlow Extensible Match 
     * </pre>
     *
     * <code>OFPMT_OXM = 1;</code>
     */
    public static final int OFPMT_OXM_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_match_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_match_type forNumber(int value) {
      switch (value) {
        case 0: return OFPMT_STANDARD;
        case 1: return OFPMT_OXM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_match_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_match_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_match_type>() {
            public ofp_match_type findValueByNumber(int number) {
              return ofp_match_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(11);
    }

    private static final ofp_match_type[] VALUES = values();

    public static ofp_match_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_match_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_match_type)
  }

  /**
   * <pre>
   * OXM Class IDs.
   * The high order bit differentiate reserved classes from member classes.
   * Classes 0x0000 to 0x7FFF are member classes, allocated by ONF.
   * Classes 0x8000 to 0xFFFE are reserved classes, reserved for standardisation.
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_oxm_class}
   */
  public enum ofp_oxm_class
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Backward compatibility with NXM 
     * </pre>
     *
     * <code>OFPXMC_NXM_0 = 0;</code>
     */
    OFPXMC_NXM_0(0),
    /**
     * <pre>
     * Backward compatibility with NXM 
     * </pre>
     *
     * <code>OFPXMC_NXM_1 = 1;</code>
     */
    OFPXMC_NXM_1(1),
    /**
     * <pre>
     * Basic class for OpenFlow 
     * </pre>
     *
     * <code>OFPXMC_OPENFLOW_BASIC = 32768;</code>
     */
    OFPXMC_OPENFLOW_BASIC(32768),
    /**
     * <pre>
     * Experimenter class 
     * </pre>
     *
     * <code>OFPXMC_EXPERIMENTER = 65535;</code>
     */
    OFPXMC_EXPERIMENTER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Backward compatibility with NXM 
     * </pre>
     *
     * <code>OFPXMC_NXM_0 = 0;</code>
     */
    public static final int OFPXMC_NXM_0_VALUE = 0;
    /**
     * <pre>
     * Backward compatibility with NXM 
     * </pre>
     *
     * <code>OFPXMC_NXM_1 = 1;</code>
     */
    public static final int OFPXMC_NXM_1_VALUE = 1;
    /**
     * <pre>
     * Basic class for OpenFlow 
     * </pre>
     *
     * <code>OFPXMC_OPENFLOW_BASIC = 32768;</code>
     */
    public static final int OFPXMC_OPENFLOW_BASIC_VALUE = 32768;
    /**
     * <pre>
     * Experimenter class 
     * </pre>
     *
     * <code>OFPXMC_EXPERIMENTER = 65535;</code>
     */
    public static final int OFPXMC_EXPERIMENTER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_oxm_class valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_oxm_class forNumber(int value) {
      switch (value) {
        case 0: return OFPXMC_NXM_0;
        case 1: return OFPXMC_NXM_1;
        case 32768: return OFPXMC_OPENFLOW_BASIC;
        case 65535: return OFPXMC_EXPERIMENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_oxm_class>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_oxm_class> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_oxm_class>() {
            public ofp_oxm_class findValueByNumber(int number) {
              return ofp_oxm_class.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(12);
    }

    private static final ofp_oxm_class[] VALUES = values();

    public static ofp_oxm_class valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_oxm_class(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_oxm_class)
  }

  /**
   * <pre>
   * OXM Flow field types for OpenFlow basic class. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.oxm_ofb_field_types}
   */
  public enum oxm_ofb_field_types
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Switch input port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IN_PORT = 0;</code>
     */
    OFPXMT_OFB_IN_PORT(0),
    /**
     * <pre>
     * Switch physical input port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IN_PHY_PORT = 1;</code>
     */
    OFPXMT_OFB_IN_PHY_PORT(1),
    /**
     * <pre>
     * Metadata passed between tables. 
     * </pre>
     *
     * <code>OFPXMT_OFB_METADATA = 2;</code>
     */
    OFPXMT_OFB_METADATA(2),
    /**
     * <pre>
     * Ethernet destination address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ETH_DST = 3;</code>
     */
    OFPXMT_OFB_ETH_DST(3),
    /**
     * <pre>
     * Ethernet source address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ETH_SRC = 4;</code>
     */
    OFPXMT_OFB_ETH_SRC(4),
    /**
     * <pre>
     * Ethernet frame type. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ETH_TYPE = 5;</code>
     */
    OFPXMT_OFB_ETH_TYPE(5),
    /**
     * <pre>
     * VLAN id. 
     * </pre>
     *
     * <code>OFPXMT_OFB_VLAN_VID = 6;</code>
     */
    OFPXMT_OFB_VLAN_VID(6),
    /**
     * <pre>
     * VLAN priority. 
     * </pre>
     *
     * <code>OFPXMT_OFB_VLAN_PCP = 7;</code>
     */
    OFPXMT_OFB_VLAN_PCP(7),
    /**
     * <pre>
     * IP DSCP (6 bits in ToS field). 
     * </pre>
     *
     * <code>OFPXMT_OFB_IP_DSCP = 8;</code>
     */
    OFPXMT_OFB_IP_DSCP(8),
    /**
     * <pre>
     * IP ECN (2 bits in ToS field). 
     * </pre>
     *
     * <code>OFPXMT_OFB_IP_ECN = 9;</code>
     */
    OFPXMT_OFB_IP_ECN(9),
    /**
     * <pre>
     * IP protocol. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IP_PROTO = 10;</code>
     */
    OFPXMT_OFB_IP_PROTO(10),
    /**
     * <pre>
     * IPv4 source address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV4_SRC = 11;</code>
     */
    OFPXMT_OFB_IPV4_SRC(11),
    /**
     * <pre>
     * IPv4 destination address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV4_DST = 12;</code>
     */
    OFPXMT_OFB_IPV4_DST(12),
    /**
     * <pre>
     * TCP source port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_TCP_SRC = 13;</code>
     */
    OFPXMT_OFB_TCP_SRC(13),
    /**
     * <pre>
     * TCP destination port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_TCP_DST = 14;</code>
     */
    OFPXMT_OFB_TCP_DST(14),
    /**
     * <pre>
     * UDP source port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_UDP_SRC = 15;</code>
     */
    OFPXMT_OFB_UDP_SRC(15),
    /**
     * <pre>
     * UDP destination port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_UDP_DST = 16;</code>
     */
    OFPXMT_OFB_UDP_DST(16),
    /**
     * <pre>
     * SCTP source port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_SCTP_SRC = 17;</code>
     */
    OFPXMT_OFB_SCTP_SRC(17),
    /**
     * <pre>
     * SCTP destination port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_SCTP_DST = 18;</code>
     */
    OFPXMT_OFB_SCTP_DST(18),
    /**
     * <pre>
     * ICMP type. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV4_TYPE = 19;</code>
     */
    OFPXMT_OFB_ICMPV4_TYPE(19),
    /**
     * <pre>
     * ICMP code. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV4_CODE = 20;</code>
     */
    OFPXMT_OFB_ICMPV4_CODE(20),
    /**
     * <pre>
     * ARP opcode. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_OP = 21;</code>
     */
    OFPXMT_OFB_ARP_OP(21),
    /**
     * <pre>
     * ARP source IPv4 address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_SPA = 22;</code>
     */
    OFPXMT_OFB_ARP_SPA(22),
    /**
     * <pre>
     * ARP target IPv4 address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_TPA = 23;</code>
     */
    OFPXMT_OFB_ARP_TPA(23),
    /**
     * <pre>
     * ARP source hardware address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_SHA = 24;</code>
     */
    OFPXMT_OFB_ARP_SHA(24),
    /**
     * <pre>
     * ARP target hardware address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_THA = 25;</code>
     */
    OFPXMT_OFB_ARP_THA(25),
    /**
     * <pre>
     * IPv6 source address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_SRC = 26;</code>
     */
    OFPXMT_OFB_IPV6_SRC(26),
    /**
     * <pre>
     * IPv6 destination address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_DST = 27;</code>
     */
    OFPXMT_OFB_IPV6_DST(27),
    /**
     * <pre>
     * IPv6 Flow Label 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_FLABEL = 28;</code>
     */
    OFPXMT_OFB_IPV6_FLABEL(28),
    /**
     * <pre>
     * ICMPv6 type. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV6_TYPE = 29;</code>
     */
    OFPXMT_OFB_ICMPV6_TYPE(29),
    /**
     * <pre>
     * ICMPv6 code. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV6_CODE = 30;</code>
     */
    OFPXMT_OFB_ICMPV6_CODE(30),
    /**
     * <pre>
     * Target address for ND. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_ND_TARGET = 31;</code>
     */
    OFPXMT_OFB_IPV6_ND_TARGET(31),
    /**
     * <pre>
     * Source link-layer for ND. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_ND_SLL = 32;</code>
     */
    OFPXMT_OFB_IPV6_ND_SLL(32),
    /**
     * <pre>
     * Target link-layer for ND. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_ND_TLL = 33;</code>
     */
    OFPXMT_OFB_IPV6_ND_TLL(33),
    /**
     * <pre>
     * MPLS label. 
     * </pre>
     *
     * <code>OFPXMT_OFB_MPLS_LABEL = 34;</code>
     */
    OFPXMT_OFB_MPLS_LABEL(34),
    /**
     * <pre>
     * MPLS TC. 
     * </pre>
     *
     * <code>OFPXMT_OFB_MPLS_TC = 35;</code>
     */
    OFPXMT_OFB_MPLS_TC(35),
    /**
     * <pre>
     * MPLS BoS bit. 
     * </pre>
     *
     * <code>OFPXMT_OFB_MPLS_BOS = 36;</code>
     */
    OFPXMT_OFB_MPLS_BOS(36),
    /**
     * <pre>
     * PBB I-SID. 
     * </pre>
     *
     * <code>OFPXMT_OFB_PBB_ISID = 37;</code>
     */
    OFPXMT_OFB_PBB_ISID(37),
    /**
     * <pre>
     * Logical Port Metadata. 
     * </pre>
     *
     * <code>OFPXMT_OFB_TUNNEL_ID = 38;</code>
     */
    OFPXMT_OFB_TUNNEL_ID(38),
    /**
     * <pre>
     * IPv6 Extension Header pseudo-field 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_EXTHDR = 39;</code>
     */
    OFPXMT_OFB_IPV6_EXTHDR(39),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Switch input port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IN_PORT = 0;</code>
     */
    public static final int OFPXMT_OFB_IN_PORT_VALUE = 0;
    /**
     * <pre>
     * Switch physical input port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IN_PHY_PORT = 1;</code>
     */
    public static final int OFPXMT_OFB_IN_PHY_PORT_VALUE = 1;
    /**
     * <pre>
     * Metadata passed between tables. 
     * </pre>
     *
     * <code>OFPXMT_OFB_METADATA = 2;</code>
     */
    public static final int OFPXMT_OFB_METADATA_VALUE = 2;
    /**
     * <pre>
     * Ethernet destination address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ETH_DST = 3;</code>
     */
    public static final int OFPXMT_OFB_ETH_DST_VALUE = 3;
    /**
     * <pre>
     * Ethernet source address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ETH_SRC = 4;</code>
     */
    public static final int OFPXMT_OFB_ETH_SRC_VALUE = 4;
    /**
     * <pre>
     * Ethernet frame type. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ETH_TYPE = 5;</code>
     */
    public static final int OFPXMT_OFB_ETH_TYPE_VALUE = 5;
    /**
     * <pre>
     * VLAN id. 
     * </pre>
     *
     * <code>OFPXMT_OFB_VLAN_VID = 6;</code>
     */
    public static final int OFPXMT_OFB_VLAN_VID_VALUE = 6;
    /**
     * <pre>
     * VLAN priority. 
     * </pre>
     *
     * <code>OFPXMT_OFB_VLAN_PCP = 7;</code>
     */
    public static final int OFPXMT_OFB_VLAN_PCP_VALUE = 7;
    /**
     * <pre>
     * IP DSCP (6 bits in ToS field). 
     * </pre>
     *
     * <code>OFPXMT_OFB_IP_DSCP = 8;</code>
     */
    public static final int OFPXMT_OFB_IP_DSCP_VALUE = 8;
    /**
     * <pre>
     * IP ECN (2 bits in ToS field). 
     * </pre>
     *
     * <code>OFPXMT_OFB_IP_ECN = 9;</code>
     */
    public static final int OFPXMT_OFB_IP_ECN_VALUE = 9;
    /**
     * <pre>
     * IP protocol. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IP_PROTO = 10;</code>
     */
    public static final int OFPXMT_OFB_IP_PROTO_VALUE = 10;
    /**
     * <pre>
     * IPv4 source address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV4_SRC = 11;</code>
     */
    public static final int OFPXMT_OFB_IPV4_SRC_VALUE = 11;
    /**
     * <pre>
     * IPv4 destination address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV4_DST = 12;</code>
     */
    public static final int OFPXMT_OFB_IPV4_DST_VALUE = 12;
    /**
     * <pre>
     * TCP source port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_TCP_SRC = 13;</code>
     */
    public static final int OFPXMT_OFB_TCP_SRC_VALUE = 13;
    /**
     * <pre>
     * TCP destination port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_TCP_DST = 14;</code>
     */
    public static final int OFPXMT_OFB_TCP_DST_VALUE = 14;
    /**
     * <pre>
     * UDP source port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_UDP_SRC = 15;</code>
     */
    public static final int OFPXMT_OFB_UDP_SRC_VALUE = 15;
    /**
     * <pre>
     * UDP destination port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_UDP_DST = 16;</code>
     */
    public static final int OFPXMT_OFB_UDP_DST_VALUE = 16;
    /**
     * <pre>
     * SCTP source port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_SCTP_SRC = 17;</code>
     */
    public static final int OFPXMT_OFB_SCTP_SRC_VALUE = 17;
    /**
     * <pre>
     * SCTP destination port. 
     * </pre>
     *
     * <code>OFPXMT_OFB_SCTP_DST = 18;</code>
     */
    public static final int OFPXMT_OFB_SCTP_DST_VALUE = 18;
    /**
     * <pre>
     * ICMP type. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV4_TYPE = 19;</code>
     */
    public static final int OFPXMT_OFB_ICMPV4_TYPE_VALUE = 19;
    /**
     * <pre>
     * ICMP code. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV4_CODE = 20;</code>
     */
    public static final int OFPXMT_OFB_ICMPV4_CODE_VALUE = 20;
    /**
     * <pre>
     * ARP opcode. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_OP = 21;</code>
     */
    public static final int OFPXMT_OFB_ARP_OP_VALUE = 21;
    /**
     * <pre>
     * ARP source IPv4 address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_SPA = 22;</code>
     */
    public static final int OFPXMT_OFB_ARP_SPA_VALUE = 22;
    /**
     * <pre>
     * ARP target IPv4 address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_TPA = 23;</code>
     */
    public static final int OFPXMT_OFB_ARP_TPA_VALUE = 23;
    /**
     * <pre>
     * ARP source hardware address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_SHA = 24;</code>
     */
    public static final int OFPXMT_OFB_ARP_SHA_VALUE = 24;
    /**
     * <pre>
     * ARP target hardware address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ARP_THA = 25;</code>
     */
    public static final int OFPXMT_OFB_ARP_THA_VALUE = 25;
    /**
     * <pre>
     * IPv6 source address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_SRC = 26;</code>
     */
    public static final int OFPXMT_OFB_IPV6_SRC_VALUE = 26;
    /**
     * <pre>
     * IPv6 destination address. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_DST = 27;</code>
     */
    public static final int OFPXMT_OFB_IPV6_DST_VALUE = 27;
    /**
     * <pre>
     * IPv6 Flow Label 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_FLABEL = 28;</code>
     */
    public static final int OFPXMT_OFB_IPV6_FLABEL_VALUE = 28;
    /**
     * <pre>
     * ICMPv6 type. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV6_TYPE = 29;</code>
     */
    public static final int OFPXMT_OFB_ICMPV6_TYPE_VALUE = 29;
    /**
     * <pre>
     * ICMPv6 code. 
     * </pre>
     *
     * <code>OFPXMT_OFB_ICMPV6_CODE = 30;</code>
     */
    public static final int OFPXMT_OFB_ICMPV6_CODE_VALUE = 30;
    /**
     * <pre>
     * Target address for ND. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_ND_TARGET = 31;</code>
     */
    public static final int OFPXMT_OFB_IPV6_ND_TARGET_VALUE = 31;
    /**
     * <pre>
     * Source link-layer for ND. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_ND_SLL = 32;</code>
     */
    public static final int OFPXMT_OFB_IPV6_ND_SLL_VALUE = 32;
    /**
     * <pre>
     * Target link-layer for ND. 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_ND_TLL = 33;</code>
     */
    public static final int OFPXMT_OFB_IPV6_ND_TLL_VALUE = 33;
    /**
     * <pre>
     * MPLS label. 
     * </pre>
     *
     * <code>OFPXMT_OFB_MPLS_LABEL = 34;</code>
     */
    public static final int OFPXMT_OFB_MPLS_LABEL_VALUE = 34;
    /**
     * <pre>
     * MPLS TC. 
     * </pre>
     *
     * <code>OFPXMT_OFB_MPLS_TC = 35;</code>
     */
    public static final int OFPXMT_OFB_MPLS_TC_VALUE = 35;
    /**
     * <pre>
     * MPLS BoS bit. 
     * </pre>
     *
     * <code>OFPXMT_OFB_MPLS_BOS = 36;</code>
     */
    public static final int OFPXMT_OFB_MPLS_BOS_VALUE = 36;
    /**
     * <pre>
     * PBB I-SID. 
     * </pre>
     *
     * <code>OFPXMT_OFB_PBB_ISID = 37;</code>
     */
    public static final int OFPXMT_OFB_PBB_ISID_VALUE = 37;
    /**
     * <pre>
     * Logical Port Metadata. 
     * </pre>
     *
     * <code>OFPXMT_OFB_TUNNEL_ID = 38;</code>
     */
    public static final int OFPXMT_OFB_TUNNEL_ID_VALUE = 38;
    /**
     * <pre>
     * IPv6 Extension Header pseudo-field 
     * </pre>
     *
     * <code>OFPXMT_OFB_IPV6_EXTHDR = 39;</code>
     */
    public static final int OFPXMT_OFB_IPV6_EXTHDR_VALUE = 39;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static oxm_ofb_field_types valueOf(int value) {
      return forNumber(value);
    }

    public static oxm_ofb_field_types forNumber(int value) {
      switch (value) {
        case 0: return OFPXMT_OFB_IN_PORT;
        case 1: return OFPXMT_OFB_IN_PHY_PORT;
        case 2: return OFPXMT_OFB_METADATA;
        case 3: return OFPXMT_OFB_ETH_DST;
        case 4: return OFPXMT_OFB_ETH_SRC;
        case 5: return OFPXMT_OFB_ETH_TYPE;
        case 6: return OFPXMT_OFB_VLAN_VID;
        case 7: return OFPXMT_OFB_VLAN_PCP;
        case 8: return OFPXMT_OFB_IP_DSCP;
        case 9: return OFPXMT_OFB_IP_ECN;
        case 10: return OFPXMT_OFB_IP_PROTO;
        case 11: return OFPXMT_OFB_IPV4_SRC;
        case 12: return OFPXMT_OFB_IPV4_DST;
        case 13: return OFPXMT_OFB_TCP_SRC;
        case 14: return OFPXMT_OFB_TCP_DST;
        case 15: return OFPXMT_OFB_UDP_SRC;
        case 16: return OFPXMT_OFB_UDP_DST;
        case 17: return OFPXMT_OFB_SCTP_SRC;
        case 18: return OFPXMT_OFB_SCTP_DST;
        case 19: return OFPXMT_OFB_ICMPV4_TYPE;
        case 20: return OFPXMT_OFB_ICMPV4_CODE;
        case 21: return OFPXMT_OFB_ARP_OP;
        case 22: return OFPXMT_OFB_ARP_SPA;
        case 23: return OFPXMT_OFB_ARP_TPA;
        case 24: return OFPXMT_OFB_ARP_SHA;
        case 25: return OFPXMT_OFB_ARP_THA;
        case 26: return OFPXMT_OFB_IPV6_SRC;
        case 27: return OFPXMT_OFB_IPV6_DST;
        case 28: return OFPXMT_OFB_IPV6_FLABEL;
        case 29: return OFPXMT_OFB_ICMPV6_TYPE;
        case 30: return OFPXMT_OFB_ICMPV6_CODE;
        case 31: return OFPXMT_OFB_IPV6_ND_TARGET;
        case 32: return OFPXMT_OFB_IPV6_ND_SLL;
        case 33: return OFPXMT_OFB_IPV6_ND_TLL;
        case 34: return OFPXMT_OFB_MPLS_LABEL;
        case 35: return OFPXMT_OFB_MPLS_TC;
        case 36: return OFPXMT_OFB_MPLS_BOS;
        case 37: return OFPXMT_OFB_PBB_ISID;
        case 38: return OFPXMT_OFB_TUNNEL_ID;
        case 39: return OFPXMT_OFB_IPV6_EXTHDR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<oxm_ofb_field_types>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        oxm_ofb_field_types> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<oxm_ofb_field_types>() {
            public oxm_ofb_field_types findValueByNumber(int number) {
              return oxm_ofb_field_types.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(13);
    }

    private static final oxm_ofb_field_types[] VALUES = values();

    public static oxm_ofb_field_types valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private oxm_ofb_field_types(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.oxm_ofb_field_types)
  }

  /**
   * <pre>
   * The VLAN id is 12-bits, so we can use the entire 16 bits to indicate
   * special conditions.
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_vlan_id}
   */
  public enum ofp_vlan_id
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No VLAN id was set. 
     * </pre>
     *
     * <code>OFPVID_NONE = 0;</code>
     */
    OFPVID_NONE(0),
    /**
     * <pre>
     * Bit that indicate that a VLAN id is set 
     * </pre>
     *
     * <code>OFPVID_PRESENT = 4096;</code>
     */
    OFPVID_PRESENT(4096),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No VLAN id was set. 
     * </pre>
     *
     * <code>OFPVID_NONE = 0;</code>
     */
    public static final int OFPVID_NONE_VALUE = 0;
    /**
     * <pre>
     * Bit that indicate that a VLAN id is set 
     * </pre>
     *
     * <code>OFPVID_PRESENT = 4096;</code>
     */
    public static final int OFPVID_PRESENT_VALUE = 4096;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_vlan_id valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_vlan_id forNumber(int value) {
      switch (value) {
        case 0: return OFPVID_NONE;
        case 4096: return OFPVID_PRESENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_vlan_id>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_vlan_id> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_vlan_id>() {
            public ofp_vlan_id findValueByNumber(int number) {
              return ofp_vlan_id.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(14);
    }

    private static final ofp_vlan_id[] VALUES = values();

    public static ofp_vlan_id valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_vlan_id(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_vlan_id)
  }

  /**
   * <pre>
   * Bit definitions for IPv6 Extension Header pseudo-field. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_ipv6exthdr_flags}
   */
  public enum ofp_ipv6exthdr_flags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPIEH_INVALID = 0;</code>
     */
    OFPIEH_INVALID(0),
    /**
     * <pre>
     * "No next header" encountered. 
     * </pre>
     *
     * <code>OFPIEH_NONEXT = 1;</code>
     */
    OFPIEH_NONEXT(1),
    /**
     * <pre>
     * Encrypted Sec Payload header present. 
     * </pre>
     *
     * <code>OFPIEH_ESP = 2;</code>
     */
    OFPIEH_ESP(2),
    /**
     * <pre>
     * Authentication header present. 
     * </pre>
     *
     * <code>OFPIEH_AUTH = 4;</code>
     */
    OFPIEH_AUTH(4),
    /**
     * <pre>
     * 1 or 2 dest headers present. 
     * </pre>
     *
     * <code>OFPIEH_DEST = 8;</code>
     */
    OFPIEH_DEST(8),
    /**
     * <pre>
     * Fragment header present. 
     * </pre>
     *
     * <code>OFPIEH_FRAG = 16;</code>
     */
    OFPIEH_FRAG(16),
    /**
     * <pre>
     * Router header present. 
     * </pre>
     *
     * <code>OFPIEH_ROUTER = 32;</code>
     */
    OFPIEH_ROUTER(32),
    /**
     * <pre>
     * Hop-by-hop header present. 
     * </pre>
     *
     * <code>OFPIEH_HOP = 64;</code>
     */
    OFPIEH_HOP(64),
    /**
     * <pre>
     * Unexpected repeats encountered. 
     * </pre>
     *
     * <code>OFPIEH_UNREP = 128;</code>
     */
    OFPIEH_UNREP(128),
    /**
     * <pre>
     * Unexpected sequencing encountered. 
     * </pre>
     *
     * <code>OFPIEH_UNSEQ = 256;</code>
     */
    OFPIEH_UNSEQ(256),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPIEH_INVALID = 0;</code>
     */
    public static final int OFPIEH_INVALID_VALUE = 0;
    /**
     * <pre>
     * "No next header" encountered. 
     * </pre>
     *
     * <code>OFPIEH_NONEXT = 1;</code>
     */
    public static final int OFPIEH_NONEXT_VALUE = 1;
    /**
     * <pre>
     * Encrypted Sec Payload header present. 
     * </pre>
     *
     * <code>OFPIEH_ESP = 2;</code>
     */
    public static final int OFPIEH_ESP_VALUE = 2;
    /**
     * <pre>
     * Authentication header present. 
     * </pre>
     *
     * <code>OFPIEH_AUTH = 4;</code>
     */
    public static final int OFPIEH_AUTH_VALUE = 4;
    /**
     * <pre>
     * 1 or 2 dest headers present. 
     * </pre>
     *
     * <code>OFPIEH_DEST = 8;</code>
     */
    public static final int OFPIEH_DEST_VALUE = 8;
    /**
     * <pre>
     * Fragment header present. 
     * </pre>
     *
     * <code>OFPIEH_FRAG = 16;</code>
     */
    public static final int OFPIEH_FRAG_VALUE = 16;
    /**
     * <pre>
     * Router header present. 
     * </pre>
     *
     * <code>OFPIEH_ROUTER = 32;</code>
     */
    public static final int OFPIEH_ROUTER_VALUE = 32;
    /**
     * <pre>
     * Hop-by-hop header present. 
     * </pre>
     *
     * <code>OFPIEH_HOP = 64;</code>
     */
    public static final int OFPIEH_HOP_VALUE = 64;
    /**
     * <pre>
     * Unexpected repeats encountered. 
     * </pre>
     *
     * <code>OFPIEH_UNREP = 128;</code>
     */
    public static final int OFPIEH_UNREP_VALUE = 128;
    /**
     * <pre>
     * Unexpected sequencing encountered. 
     * </pre>
     *
     * <code>OFPIEH_UNSEQ = 256;</code>
     */
    public static final int OFPIEH_UNSEQ_VALUE = 256;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_ipv6exthdr_flags valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_ipv6exthdr_flags forNumber(int value) {
      switch (value) {
        case 0: return OFPIEH_INVALID;
        case 1: return OFPIEH_NONEXT;
        case 2: return OFPIEH_ESP;
        case 4: return OFPIEH_AUTH;
        case 8: return OFPIEH_DEST;
        case 16: return OFPIEH_FRAG;
        case 32: return OFPIEH_ROUTER;
        case 64: return OFPIEH_HOP;
        case 128: return OFPIEH_UNREP;
        case 256: return OFPIEH_UNSEQ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_ipv6exthdr_flags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_ipv6exthdr_flags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_ipv6exthdr_flags>() {
            public ofp_ipv6exthdr_flags findValueByNumber(int number) {
              return ofp_ipv6exthdr_flags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(15);
    }

    private static final ofp_ipv6exthdr_flags[] VALUES = values();

    public static ofp_ipv6exthdr_flags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_ipv6exthdr_flags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_ipv6exthdr_flags)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_action_type}
   */
  public enum ofp_action_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Output to switch port. 
     * </pre>
     *
     * <code>OFPAT_OUTPUT = 0;</code>
     */
    OFPAT_OUTPUT(0),
    /**
     * <pre>
     * Copy TTL "outwards" -- from next-to-outermost
     *to outermost 
     * </pre>
     *
     * <code>OFPAT_COPY_TTL_OUT = 11;</code>
     */
    OFPAT_COPY_TTL_OUT(11),
    /**
     * <pre>
     * Copy TTL "inwards" -- from outermost to
     *next-to-outermost 
     * </pre>
     *
     * <code>OFPAT_COPY_TTL_IN = 12;</code>
     */
    OFPAT_COPY_TTL_IN(12),
    /**
     * <pre>
     * MPLS TTL 
     * </pre>
     *
     * <code>OFPAT_SET_MPLS_TTL = 15;</code>
     */
    OFPAT_SET_MPLS_TTL(15),
    /**
     * <pre>
     * Decrement MPLS TTL 
     * </pre>
     *
     * <code>OFPAT_DEC_MPLS_TTL = 16;</code>
     */
    OFPAT_DEC_MPLS_TTL(16),
    /**
     * <pre>
     * Push a new VLAN tag 
     * </pre>
     *
     * <code>OFPAT_PUSH_VLAN = 17;</code>
     */
    OFPAT_PUSH_VLAN(17),
    /**
     * <pre>
     * Pop the outer VLAN tag 
     * </pre>
     *
     * <code>OFPAT_POP_VLAN = 18;</code>
     */
    OFPAT_POP_VLAN(18),
    /**
     * <pre>
     * Push a new MPLS tag 
     * </pre>
     *
     * <code>OFPAT_PUSH_MPLS = 19;</code>
     */
    OFPAT_PUSH_MPLS(19),
    /**
     * <pre>
     * Pop the outer MPLS tag 
     * </pre>
     *
     * <code>OFPAT_POP_MPLS = 20;</code>
     */
    OFPAT_POP_MPLS(20),
    /**
     * <pre>
     * Set queue id when outputting to a port 
     * </pre>
     *
     * <code>OFPAT_SET_QUEUE = 21;</code>
     */
    OFPAT_SET_QUEUE(21),
    /**
     * <pre>
     * Apply group. 
     * </pre>
     *
     * <code>OFPAT_GROUP = 22;</code>
     */
    OFPAT_GROUP(22),
    /**
     * <pre>
     * IP TTL. 
     * </pre>
     *
     * <code>OFPAT_SET_NW_TTL = 23;</code>
     */
    OFPAT_SET_NW_TTL(23),
    /**
     * <pre>
     * Decrement IP TTL. 
     * </pre>
     *
     * <code>OFPAT_DEC_NW_TTL = 24;</code>
     */
    OFPAT_DEC_NW_TTL(24),
    /**
     * <pre>
     * Set a header field using OXM TLV format. 
     * </pre>
     *
     * <code>OFPAT_SET_FIELD = 25;</code>
     */
    OFPAT_SET_FIELD(25),
    /**
     * <pre>
     * Push a new PBB service tag (I-TAG) 
     * </pre>
     *
     * <code>OFPAT_PUSH_PBB = 26;</code>
     */
    OFPAT_PUSH_PBB(26),
    /**
     * <pre>
     * Pop the outer PBB service tag (I-TAG) 
     * </pre>
     *
     * <code>OFPAT_POP_PBB = 27;</code>
     */
    OFPAT_POP_PBB(27),
    /**
     * <code>OFPAT_EXPERIMENTER = 65535;</code>
     */
    OFPAT_EXPERIMENTER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Output to switch port. 
     * </pre>
     *
     * <code>OFPAT_OUTPUT = 0;</code>
     */
    public static final int OFPAT_OUTPUT_VALUE = 0;
    /**
     * <pre>
     * Copy TTL "outwards" -- from next-to-outermost
     *to outermost 
     * </pre>
     *
     * <code>OFPAT_COPY_TTL_OUT = 11;</code>
     */
    public static final int OFPAT_COPY_TTL_OUT_VALUE = 11;
    /**
     * <pre>
     * Copy TTL "inwards" -- from outermost to
     *next-to-outermost 
     * </pre>
     *
     * <code>OFPAT_COPY_TTL_IN = 12;</code>
     */
    public static final int OFPAT_COPY_TTL_IN_VALUE = 12;
    /**
     * <pre>
     * MPLS TTL 
     * </pre>
     *
     * <code>OFPAT_SET_MPLS_TTL = 15;</code>
     */
    public static final int OFPAT_SET_MPLS_TTL_VALUE = 15;
    /**
     * <pre>
     * Decrement MPLS TTL 
     * </pre>
     *
     * <code>OFPAT_DEC_MPLS_TTL = 16;</code>
     */
    public static final int OFPAT_DEC_MPLS_TTL_VALUE = 16;
    /**
     * <pre>
     * Push a new VLAN tag 
     * </pre>
     *
     * <code>OFPAT_PUSH_VLAN = 17;</code>
     */
    public static final int OFPAT_PUSH_VLAN_VALUE = 17;
    /**
     * <pre>
     * Pop the outer VLAN tag 
     * </pre>
     *
     * <code>OFPAT_POP_VLAN = 18;</code>
     */
    public static final int OFPAT_POP_VLAN_VALUE = 18;
    /**
     * <pre>
     * Push a new MPLS tag 
     * </pre>
     *
     * <code>OFPAT_PUSH_MPLS = 19;</code>
     */
    public static final int OFPAT_PUSH_MPLS_VALUE = 19;
    /**
     * <pre>
     * Pop the outer MPLS tag 
     * </pre>
     *
     * <code>OFPAT_POP_MPLS = 20;</code>
     */
    public static final int OFPAT_POP_MPLS_VALUE = 20;
    /**
     * <pre>
     * Set queue id when outputting to a port 
     * </pre>
     *
     * <code>OFPAT_SET_QUEUE = 21;</code>
     */
    public static final int OFPAT_SET_QUEUE_VALUE = 21;
    /**
     * <pre>
     * Apply group. 
     * </pre>
     *
     * <code>OFPAT_GROUP = 22;</code>
     */
    public static final int OFPAT_GROUP_VALUE = 22;
    /**
     * <pre>
     * IP TTL. 
     * </pre>
     *
     * <code>OFPAT_SET_NW_TTL = 23;</code>
     */
    public static final int OFPAT_SET_NW_TTL_VALUE = 23;
    /**
     * <pre>
     * Decrement IP TTL. 
     * </pre>
     *
     * <code>OFPAT_DEC_NW_TTL = 24;</code>
     */
    public static final int OFPAT_DEC_NW_TTL_VALUE = 24;
    /**
     * <pre>
     * Set a header field using OXM TLV format. 
     * </pre>
     *
     * <code>OFPAT_SET_FIELD = 25;</code>
     */
    public static final int OFPAT_SET_FIELD_VALUE = 25;
    /**
     * <pre>
     * Push a new PBB service tag (I-TAG) 
     * </pre>
     *
     * <code>OFPAT_PUSH_PBB = 26;</code>
     */
    public static final int OFPAT_PUSH_PBB_VALUE = 26;
    /**
     * <pre>
     * Pop the outer PBB service tag (I-TAG) 
     * </pre>
     *
     * <code>OFPAT_POP_PBB = 27;</code>
     */
    public static final int OFPAT_POP_PBB_VALUE = 27;
    /**
     * <code>OFPAT_EXPERIMENTER = 65535;</code>
     */
    public static final int OFPAT_EXPERIMENTER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_action_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_action_type forNumber(int value) {
      switch (value) {
        case 0: return OFPAT_OUTPUT;
        case 11: return OFPAT_COPY_TTL_OUT;
        case 12: return OFPAT_COPY_TTL_IN;
        case 15: return OFPAT_SET_MPLS_TTL;
        case 16: return OFPAT_DEC_MPLS_TTL;
        case 17: return OFPAT_PUSH_VLAN;
        case 18: return OFPAT_POP_VLAN;
        case 19: return OFPAT_PUSH_MPLS;
        case 20: return OFPAT_POP_MPLS;
        case 21: return OFPAT_SET_QUEUE;
        case 22: return OFPAT_GROUP;
        case 23: return OFPAT_SET_NW_TTL;
        case 24: return OFPAT_DEC_NW_TTL;
        case 25: return OFPAT_SET_FIELD;
        case 26: return OFPAT_PUSH_PBB;
        case 27: return OFPAT_POP_PBB;
        case 65535: return OFPAT_EXPERIMENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_action_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_action_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_action_type>() {
            public ofp_action_type findValueByNumber(int number) {
              return ofp_action_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(16);
    }

    private static final ofp_action_type[] VALUES = values();

    public static ofp_action_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_action_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_action_type)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_controller_max_len}
   */
  public enum ofp_controller_max_len
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPCML_INVALID = 0;</code>
     */
    OFPCML_INVALID(0),
    /**
     * <pre>
     * maximum max_len value which can be used
     *to request a specific byte length. 
     * </pre>
     *
     * <code>OFPCML_MAX = 65509;</code>
     */
    OFPCML_MAX(65509),
    /**
     * <pre>
     * indicates that no buffering should be
     *applied and the whole packet is to be
     *sent to the controller. 
     * </pre>
     *
     * <code>OFPCML_NO_BUFFER = 65535;</code>
     */
    OFPCML_NO_BUFFER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPCML_INVALID = 0;</code>
     */
    public static final int OFPCML_INVALID_VALUE = 0;
    /**
     * <pre>
     * maximum max_len value which can be used
     *to request a specific byte length. 
     * </pre>
     *
     * <code>OFPCML_MAX = 65509;</code>
     */
    public static final int OFPCML_MAX_VALUE = 65509;
    /**
     * <pre>
     * indicates that no buffering should be
     *applied and the whole packet is to be
     *sent to the controller. 
     * </pre>
     *
     * <code>OFPCML_NO_BUFFER = 65535;</code>
     */
    public static final int OFPCML_NO_BUFFER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_controller_max_len valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_controller_max_len forNumber(int value) {
      switch (value) {
        case 0: return OFPCML_INVALID;
        case 65509: return OFPCML_MAX;
        case 65535: return OFPCML_NO_BUFFER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_controller_max_len>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_controller_max_len> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_controller_max_len>() {
            public ofp_controller_max_len findValueByNumber(int number) {
              return ofp_controller_max_len.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(17);
    }

    private static final ofp_controller_max_len[] VALUES = values();

    public static ofp_controller_max_len valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_controller_max_len(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_controller_max_len)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_instruction_type}
   */
  public enum ofp_instruction_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPIT_INVALID = 0;</code>
     */
    OFPIT_INVALID(0),
    /**
     * <pre>
     * Setup the next table in the lookup
     *pipeline 
     * </pre>
     *
     * <code>OFPIT_GOTO_TABLE = 1;</code>
     */
    OFPIT_GOTO_TABLE(1),
    /**
     * <pre>
     * Setup the metadata field for use later in
     *pipeline 
     * </pre>
     *
     * <code>OFPIT_WRITE_METADATA = 2;</code>
     */
    OFPIT_WRITE_METADATA(2),
    /**
     * <pre>
     * Write the action(s) onto the datapath action
     *set 
     * </pre>
     *
     * <code>OFPIT_WRITE_ACTIONS = 3;</code>
     */
    OFPIT_WRITE_ACTIONS(3),
    /**
     * <pre>
     * Applies the action(s) immediately 
     * </pre>
     *
     * <code>OFPIT_APPLY_ACTIONS = 4;</code>
     */
    OFPIT_APPLY_ACTIONS(4),
    /**
     * <pre>
     * Clears all actions from the datapath
     *action set 
     * </pre>
     *
     * <code>OFPIT_CLEAR_ACTIONS = 5;</code>
     */
    OFPIT_CLEAR_ACTIONS(5),
    /**
     * <pre>
     * Apply meter (rate limiter) 
     * </pre>
     *
     * <code>OFPIT_METER = 6;</code>
     */
    OFPIT_METER(6),
    /**
     * <pre>
     * Experimenter instruction 
     * </pre>
     *
     * <code>OFPIT_EXPERIMENTER = 65535;</code>
     */
    OFPIT_EXPERIMENTER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPIT_INVALID = 0;</code>
     */
    public static final int OFPIT_INVALID_VALUE = 0;
    /**
     * <pre>
     * Setup the next table in the lookup
     *pipeline 
     * </pre>
     *
     * <code>OFPIT_GOTO_TABLE = 1;</code>
     */
    public static final int OFPIT_GOTO_TABLE_VALUE = 1;
    /**
     * <pre>
     * Setup the metadata field for use later in
     *pipeline 
     * </pre>
     *
     * <code>OFPIT_WRITE_METADATA = 2;</code>
     */
    public static final int OFPIT_WRITE_METADATA_VALUE = 2;
    /**
     * <pre>
     * Write the action(s) onto the datapath action
     *set 
     * </pre>
     *
     * <code>OFPIT_WRITE_ACTIONS = 3;</code>
     */
    public static final int OFPIT_WRITE_ACTIONS_VALUE = 3;
    /**
     * <pre>
     * Applies the action(s) immediately 
     * </pre>
     *
     * <code>OFPIT_APPLY_ACTIONS = 4;</code>
     */
    public static final int OFPIT_APPLY_ACTIONS_VALUE = 4;
    /**
     * <pre>
     * Clears all actions from the datapath
     *action set 
     * </pre>
     *
     * <code>OFPIT_CLEAR_ACTIONS = 5;</code>
     */
    public static final int OFPIT_CLEAR_ACTIONS_VALUE = 5;
    /**
     * <pre>
     * Apply meter (rate limiter) 
     * </pre>
     *
     * <code>OFPIT_METER = 6;</code>
     */
    public static final int OFPIT_METER_VALUE = 6;
    /**
     * <pre>
     * Experimenter instruction 
     * </pre>
     *
     * <code>OFPIT_EXPERIMENTER = 65535;</code>
     */
    public static final int OFPIT_EXPERIMENTER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_instruction_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_instruction_type forNumber(int value) {
      switch (value) {
        case 0: return OFPIT_INVALID;
        case 1: return OFPIT_GOTO_TABLE;
        case 2: return OFPIT_WRITE_METADATA;
        case 3: return OFPIT_WRITE_ACTIONS;
        case 4: return OFPIT_APPLY_ACTIONS;
        case 5: return OFPIT_CLEAR_ACTIONS;
        case 6: return OFPIT_METER;
        case 65535: return OFPIT_EXPERIMENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_instruction_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_instruction_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_instruction_type>() {
            public ofp_instruction_type findValueByNumber(int number) {
              return ofp_instruction_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(18);
    }

    private static final ofp_instruction_type[] VALUES = values();

    public static ofp_instruction_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_instruction_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_instruction_type)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_flow_mod_command}
   */
  public enum ofp_flow_mod_command
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * New flow. 
     * </pre>
     *
     * <code>OFPFC_ADD = 0;</code>
     */
    OFPFC_ADD(0),
    /**
     * <pre>
     * Modify all matching flows. 
     * </pre>
     *
     * <code>OFPFC_MODIFY = 1;</code>
     */
    OFPFC_MODIFY(1),
    /**
     * <pre>
     * Modify entry strictly matching wildcards and
     *priority. 
     * </pre>
     *
     * <code>OFPFC_MODIFY_STRICT = 2;</code>
     */
    OFPFC_MODIFY_STRICT(2),
    /**
     * <pre>
     * Delete all matching flows. 
     * </pre>
     *
     * <code>OFPFC_DELETE = 3;</code>
     */
    OFPFC_DELETE(3),
    /**
     * <pre>
     * Delete entry strictly matching wildcards and
     *priority. 
     * </pre>
     *
     * <code>OFPFC_DELETE_STRICT = 4;</code>
     */
    OFPFC_DELETE_STRICT(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * New flow. 
     * </pre>
     *
     * <code>OFPFC_ADD = 0;</code>
     */
    public static final int OFPFC_ADD_VALUE = 0;
    /**
     * <pre>
     * Modify all matching flows. 
     * </pre>
     *
     * <code>OFPFC_MODIFY = 1;</code>
     */
    public static final int OFPFC_MODIFY_VALUE = 1;
    /**
     * <pre>
     * Modify entry strictly matching wildcards and
     *priority. 
     * </pre>
     *
     * <code>OFPFC_MODIFY_STRICT = 2;</code>
     */
    public static final int OFPFC_MODIFY_STRICT_VALUE = 2;
    /**
     * <pre>
     * Delete all matching flows. 
     * </pre>
     *
     * <code>OFPFC_DELETE = 3;</code>
     */
    public static final int OFPFC_DELETE_VALUE = 3;
    /**
     * <pre>
     * Delete entry strictly matching wildcards and
     *priority. 
     * </pre>
     *
     * <code>OFPFC_DELETE_STRICT = 4;</code>
     */
    public static final int OFPFC_DELETE_STRICT_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_flow_mod_command valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_flow_mod_command forNumber(int value) {
      switch (value) {
        case 0: return OFPFC_ADD;
        case 1: return OFPFC_MODIFY;
        case 2: return OFPFC_MODIFY_STRICT;
        case 3: return OFPFC_DELETE;
        case 4: return OFPFC_DELETE_STRICT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_flow_mod_command>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_flow_mod_command> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_flow_mod_command>() {
            public ofp_flow_mod_command findValueByNumber(int number) {
              return ofp_flow_mod_command.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(19);
    }

    private static final ofp_flow_mod_command[] VALUES = values();

    public static ofp_flow_mod_command valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_flow_mod_command(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_flow_mod_command)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_flow_mod_flags}
   */
  public enum ofp_flow_mod_flags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPFF_INVALID = 0;</code>
     */
    OFPFF_INVALID(0),
    /**
     * <pre>
     * Send flow removed message when flow
     * expires or is deleted. 
     * </pre>
     *
     * <code>OFPFF_SEND_FLOW_REM = 1;</code>
     */
    OFPFF_SEND_FLOW_REM(1),
    /**
     * <pre>
     * Check for overlapping entries first. 
     * </pre>
     *
     * <code>OFPFF_CHECK_OVERLAP = 2;</code>
     */
    OFPFF_CHECK_OVERLAP(2),
    /**
     * <pre>
     * Reset flow packet and byte counts. 
     * </pre>
     *
     * <code>OFPFF_RESET_COUNTS = 4;</code>
     */
    OFPFF_RESET_COUNTS(4),
    /**
     * <pre>
     * Don't keep track of packet count. 
     * </pre>
     *
     * <code>OFPFF_NO_PKT_COUNTS = 8;</code>
     */
    OFPFF_NO_PKT_COUNTS(8),
    /**
     * <pre>
     * Don't keep track of byte count. 
     * </pre>
     *
     * <code>OFPFF_NO_BYT_COUNTS = 16;</code>
     */
    OFPFF_NO_BYT_COUNTS(16),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPFF_INVALID = 0;</code>
     */
    public static final int OFPFF_INVALID_VALUE = 0;
    /**
     * <pre>
     * Send flow removed message when flow
     * expires or is deleted. 
     * </pre>
     *
     * <code>OFPFF_SEND_FLOW_REM = 1;</code>
     */
    public static final int OFPFF_SEND_FLOW_REM_VALUE = 1;
    /**
     * <pre>
     * Check for overlapping entries first. 
     * </pre>
     *
     * <code>OFPFF_CHECK_OVERLAP = 2;</code>
     */
    public static final int OFPFF_CHECK_OVERLAP_VALUE = 2;
    /**
     * <pre>
     * Reset flow packet and byte counts. 
     * </pre>
     *
     * <code>OFPFF_RESET_COUNTS = 4;</code>
     */
    public static final int OFPFF_RESET_COUNTS_VALUE = 4;
    /**
     * <pre>
     * Don't keep track of packet count. 
     * </pre>
     *
     * <code>OFPFF_NO_PKT_COUNTS = 8;</code>
     */
    public static final int OFPFF_NO_PKT_COUNTS_VALUE = 8;
    /**
     * <pre>
     * Don't keep track of byte count. 
     * </pre>
     *
     * <code>OFPFF_NO_BYT_COUNTS = 16;</code>
     */
    public static final int OFPFF_NO_BYT_COUNTS_VALUE = 16;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_flow_mod_flags valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_flow_mod_flags forNumber(int value) {
      switch (value) {
        case 0: return OFPFF_INVALID;
        case 1: return OFPFF_SEND_FLOW_REM;
        case 2: return OFPFF_CHECK_OVERLAP;
        case 4: return OFPFF_RESET_COUNTS;
        case 8: return OFPFF_NO_PKT_COUNTS;
        case 16: return OFPFF_NO_BYT_COUNTS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_flow_mod_flags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_flow_mod_flags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_flow_mod_flags>() {
            public ofp_flow_mod_flags findValueByNumber(int number) {
              return ofp_flow_mod_flags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(20);
    }

    private static final ofp_flow_mod_flags[] VALUES = values();

    public static ofp_flow_mod_flags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_flow_mod_flags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_flow_mod_flags)
  }

  /**
   * <pre>
   * Group numbering. Groups can use any number up to OFPG_MAX. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_group}
   */
  public enum ofp_group
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPG_INVALID = 0;</code>
     */
    OFPG_INVALID(0),
    /**
     * <pre>
     * Last usable group number. 
     * </pre>
     *
     * <code>OFPG_MAX = 2147483392;</code>
     */
    OFPG_MAX(2147483392),
    /**
     * <pre>
     * Fake groups. 
     * </pre>
     *
     * <code>OFPG_ALL = 2147483644;</code>
     */
    OFPG_ALL(2147483644),
    /**
     * <pre>
     * Special wildcard: no group specified. 
     * </pre>
     *
     * <code>OFPG_ANY = 2147483647;</code>
     */
    OFPG_ANY(2147483647),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPG_INVALID = 0;</code>
     */
    public static final int OFPG_INVALID_VALUE = 0;
    /**
     * <pre>
     * Last usable group number. 
     * </pre>
     *
     * <code>OFPG_MAX = 2147483392;</code>
     */
    public static final int OFPG_MAX_VALUE = 2147483392;
    /**
     * <pre>
     * Fake groups. 
     * </pre>
     *
     * <code>OFPG_ALL = 2147483644;</code>
     */
    public static final int OFPG_ALL_VALUE = 2147483644;
    /**
     * <pre>
     * Special wildcard: no group specified. 
     * </pre>
     *
     * <code>OFPG_ANY = 2147483647;</code>
     */
    public static final int OFPG_ANY_VALUE = 2147483647;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_group valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_group forNumber(int value) {
      switch (value) {
        case 0: return OFPG_INVALID;
        case 2147483392: return OFPG_MAX;
        case 2147483644: return OFPG_ALL;
        case 2147483647: return OFPG_ANY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_group>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_group> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_group>() {
            public ofp_group findValueByNumber(int number) {
              return ofp_group.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(21);
    }

    private static final ofp_group[] VALUES = values();

    public static ofp_group valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_group(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_group)
  }

  /**
   * <pre>
   * Group commands 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_group_mod_command}
   */
  public enum ofp_group_mod_command
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * New group. 
     * </pre>
     *
     * <code>OFPGC_ADD = 0;</code>
     */
    OFPGC_ADD(0),
    /**
     * <pre>
     * Modify all matching groups. 
     * </pre>
     *
     * <code>OFPGC_MODIFY = 1;</code>
     */
    OFPGC_MODIFY(1),
    /**
     * <pre>
     * Delete all matching groups. 
     * </pre>
     *
     * <code>OFPGC_DELETE = 2;</code>
     */
    OFPGC_DELETE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * New group. 
     * </pre>
     *
     * <code>OFPGC_ADD = 0;</code>
     */
    public static final int OFPGC_ADD_VALUE = 0;
    /**
     * <pre>
     * Modify all matching groups. 
     * </pre>
     *
     * <code>OFPGC_MODIFY = 1;</code>
     */
    public static final int OFPGC_MODIFY_VALUE = 1;
    /**
     * <pre>
     * Delete all matching groups. 
     * </pre>
     *
     * <code>OFPGC_DELETE = 2;</code>
     */
    public static final int OFPGC_DELETE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_group_mod_command valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_group_mod_command forNumber(int value) {
      switch (value) {
        case 0: return OFPGC_ADD;
        case 1: return OFPGC_MODIFY;
        case 2: return OFPGC_DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_group_mod_command>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_group_mod_command> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_group_mod_command>() {
            public ofp_group_mod_command findValueByNumber(int number) {
              return ofp_group_mod_command.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(22);
    }

    private static final ofp_group_mod_command[] VALUES = values();

    public static ofp_group_mod_command valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_group_mod_command(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_group_mod_command)
  }

  /**
   * <pre>
   * Group types.  Values in the range [128; 255] are reserved for experimental
   * use. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_group_type}
   */
  public enum ofp_group_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * All (multicast/broadcast) group.  
     * </pre>
     *
     * <code>OFPGT_ALL = 0;</code>
     */
    OFPGT_ALL(0),
    /**
     * <pre>
     * Select group. 
     * </pre>
     *
     * <code>OFPGT_SELECT = 1;</code>
     */
    OFPGT_SELECT(1),
    /**
     * <pre>
     * Indirect group. 
     * </pre>
     *
     * <code>OFPGT_INDIRECT = 2;</code>
     */
    OFPGT_INDIRECT(2),
    /**
     * <pre>
     * Fast failover group. 
     * </pre>
     *
     * <code>OFPGT_FF = 3;</code>
     */
    OFPGT_FF(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * All (multicast/broadcast) group.  
     * </pre>
     *
     * <code>OFPGT_ALL = 0;</code>
     */
    public static final int OFPGT_ALL_VALUE = 0;
    /**
     * <pre>
     * Select group. 
     * </pre>
     *
     * <code>OFPGT_SELECT = 1;</code>
     */
    public static final int OFPGT_SELECT_VALUE = 1;
    /**
     * <pre>
     * Indirect group. 
     * </pre>
     *
     * <code>OFPGT_INDIRECT = 2;</code>
     */
    public static final int OFPGT_INDIRECT_VALUE = 2;
    /**
     * <pre>
     * Fast failover group. 
     * </pre>
     *
     * <code>OFPGT_FF = 3;</code>
     */
    public static final int OFPGT_FF_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_group_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_group_type forNumber(int value) {
      switch (value) {
        case 0: return OFPGT_ALL;
        case 1: return OFPGT_SELECT;
        case 2: return OFPGT_INDIRECT;
        case 3: return OFPGT_FF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_group_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_group_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_group_type>() {
            public ofp_group_type findValueByNumber(int number) {
              return ofp_group_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(23);
    }

    private static final ofp_group_type[] VALUES = values();

    public static ofp_group_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_group_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_group_type)
  }

  /**
   * <pre>
   * Why is this packet being sent to the controller? 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_packet_in_reason}
   */
  public enum ofp_packet_in_reason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No matching flow (table-miss flow entry). 
     * </pre>
     *
     * <code>OFPR_NO_MATCH = 0;</code>
     */
    OFPR_NO_MATCH(0),
    /**
     * <pre>
     * Action explicitly output to controller. 
     * </pre>
     *
     * <code>OFPR_ACTION = 1;</code>
     */
    OFPR_ACTION(1),
    /**
     * <pre>
     * Packet has invalid TTL 
     * </pre>
     *
     * <code>OFPR_INVALID_TTL = 2;</code>
     */
    OFPR_INVALID_TTL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No matching flow (table-miss flow entry). 
     * </pre>
     *
     * <code>OFPR_NO_MATCH = 0;</code>
     */
    public static final int OFPR_NO_MATCH_VALUE = 0;
    /**
     * <pre>
     * Action explicitly output to controller. 
     * </pre>
     *
     * <code>OFPR_ACTION = 1;</code>
     */
    public static final int OFPR_ACTION_VALUE = 1;
    /**
     * <pre>
     * Packet has invalid TTL 
     * </pre>
     *
     * <code>OFPR_INVALID_TTL = 2;</code>
     */
    public static final int OFPR_INVALID_TTL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_packet_in_reason valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_packet_in_reason forNumber(int value) {
      switch (value) {
        case 0: return OFPR_NO_MATCH;
        case 1: return OFPR_ACTION;
        case 2: return OFPR_INVALID_TTL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_packet_in_reason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_packet_in_reason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_packet_in_reason>() {
            public ofp_packet_in_reason findValueByNumber(int number) {
              return ofp_packet_in_reason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(24);
    }

    private static final ofp_packet_in_reason[] VALUES = values();

    public static ofp_packet_in_reason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_packet_in_reason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_packet_in_reason)
  }

  /**
   * <pre>
   * Why was this flow removed? 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_flow_removed_reason}
   */
  public enum ofp_flow_removed_reason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Flow idle time exceeded idle_timeout. 
     * </pre>
     *
     * <code>OFPRR_IDLE_TIMEOUT = 0;</code>
     */
    OFPRR_IDLE_TIMEOUT(0),
    /**
     * <pre>
     * Time exceeded hard_timeout. 
     * </pre>
     *
     * <code>OFPRR_HARD_TIMEOUT = 1;</code>
     */
    OFPRR_HARD_TIMEOUT(1),
    /**
     * <pre>
     * Evicted by a DELETE flow mod. 
     * </pre>
     *
     * <code>OFPRR_DELETE = 2;</code>
     */
    OFPRR_DELETE(2),
    /**
     * <pre>
     * Group was removed. 
     * </pre>
     *
     * <code>OFPRR_GROUP_DELETE = 3;</code>
     */
    OFPRR_GROUP_DELETE(3),
    /**
     * <pre>
     * Meter was removed 
     * </pre>
     *
     * <code>OFPRR_METER_DELETE = 4;</code>
     */
    OFPRR_METER_DELETE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Flow idle time exceeded idle_timeout. 
     * </pre>
     *
     * <code>OFPRR_IDLE_TIMEOUT = 0;</code>
     */
    public static final int OFPRR_IDLE_TIMEOUT_VALUE = 0;
    /**
     * <pre>
     * Time exceeded hard_timeout. 
     * </pre>
     *
     * <code>OFPRR_HARD_TIMEOUT = 1;</code>
     */
    public static final int OFPRR_HARD_TIMEOUT_VALUE = 1;
    /**
     * <pre>
     * Evicted by a DELETE flow mod. 
     * </pre>
     *
     * <code>OFPRR_DELETE = 2;</code>
     */
    public static final int OFPRR_DELETE_VALUE = 2;
    /**
     * <pre>
     * Group was removed. 
     * </pre>
     *
     * <code>OFPRR_GROUP_DELETE = 3;</code>
     */
    public static final int OFPRR_GROUP_DELETE_VALUE = 3;
    /**
     * <pre>
     * Meter was removed 
     * </pre>
     *
     * <code>OFPRR_METER_DELETE = 4;</code>
     */
    public static final int OFPRR_METER_DELETE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_flow_removed_reason valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_flow_removed_reason forNumber(int value) {
      switch (value) {
        case 0: return OFPRR_IDLE_TIMEOUT;
        case 1: return OFPRR_HARD_TIMEOUT;
        case 2: return OFPRR_DELETE;
        case 3: return OFPRR_GROUP_DELETE;
        case 4: return OFPRR_METER_DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_flow_removed_reason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_flow_removed_reason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_flow_removed_reason>() {
            public ofp_flow_removed_reason findValueByNumber(int number) {
              return ofp_flow_removed_reason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(25);
    }

    private static final ofp_flow_removed_reason[] VALUES = values();

    public static ofp_flow_removed_reason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_flow_removed_reason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_flow_removed_reason)
  }

  /**
   * <pre>
   * Meter numbering. Flow meters can use any number up to OFPM_MAX. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_meter}
   */
  public enum ofp_meter
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPM_ZERO = 0;</code>
     */
    OFPM_ZERO(0),
    /**
     * <pre>
     * Last usable meter. 
     * </pre>
     *
     * <code>OFPM_MAX = 2147418112;</code>
     */
    OFPM_MAX(2147418112),
    /**
     * <pre>
     * Virtual meters. 
     * </pre>
     *
     * <code>OFPM_SLOWPATH = 2147483645;</code>
     */
    OFPM_SLOWPATH(2147483645),
    /**
     * <pre>
     * Meter for controller connection. 
     * </pre>
     *
     * <code>OFPM_CONTROLLER = 2147483646;</code>
     */
    OFPM_CONTROLLER(2147483646),
    /**
     * <pre>
     * Represents all meters for stat requests
     *commands. 
     * </pre>
     *
     * <code>OFPM_ALL = 2147483647;</code>
     */
    OFPM_ALL(2147483647),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPM_ZERO = 0;</code>
     */
    public static final int OFPM_ZERO_VALUE = 0;
    /**
     * <pre>
     * Last usable meter. 
     * </pre>
     *
     * <code>OFPM_MAX = 2147418112;</code>
     */
    public static final int OFPM_MAX_VALUE = 2147418112;
    /**
     * <pre>
     * Virtual meters. 
     * </pre>
     *
     * <code>OFPM_SLOWPATH = 2147483645;</code>
     */
    public static final int OFPM_SLOWPATH_VALUE = 2147483645;
    /**
     * <pre>
     * Meter for controller connection. 
     * </pre>
     *
     * <code>OFPM_CONTROLLER = 2147483646;</code>
     */
    public static final int OFPM_CONTROLLER_VALUE = 2147483646;
    /**
     * <pre>
     * Represents all meters for stat requests
     *commands. 
     * </pre>
     *
     * <code>OFPM_ALL = 2147483647;</code>
     */
    public static final int OFPM_ALL_VALUE = 2147483647;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_meter valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_meter forNumber(int value) {
      switch (value) {
        case 0: return OFPM_ZERO;
        case 2147418112: return OFPM_MAX;
        case 2147483645: return OFPM_SLOWPATH;
        case 2147483646: return OFPM_CONTROLLER;
        case 2147483647: return OFPM_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_meter>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_meter> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_meter>() {
            public ofp_meter findValueByNumber(int number) {
              return ofp_meter.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(26);
    }

    private static final ofp_meter[] VALUES = values();

    public static ofp_meter valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_meter(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_meter)
  }

  /**
   * <pre>
   * Meter band types 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_meter_band_type}
   */
  public enum ofp_meter_band_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPMBT_INVALID = 0;</code>
     */
    OFPMBT_INVALID(0),
    /**
     * <pre>
     * Drop packet. 
     * </pre>
     *
     * <code>OFPMBT_DROP = 1;</code>
     */
    OFPMBT_DROP(1),
    /**
     * <pre>
     * Remark DSCP in the IP header. 
     * </pre>
     *
     * <code>OFPMBT_DSCP_REMARK = 2;</code>
     */
    OFPMBT_DSCP_REMARK(2),
    /**
     * <pre>
     * Experimenter meter band. 
     * </pre>
     *
     * <code>OFPMBT_EXPERIMENTER = 65535;</code>
     */
    OFPMBT_EXPERIMENTER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPMBT_INVALID = 0;</code>
     */
    public static final int OFPMBT_INVALID_VALUE = 0;
    /**
     * <pre>
     * Drop packet. 
     * </pre>
     *
     * <code>OFPMBT_DROP = 1;</code>
     */
    public static final int OFPMBT_DROP_VALUE = 1;
    /**
     * <pre>
     * Remark DSCP in the IP header. 
     * </pre>
     *
     * <code>OFPMBT_DSCP_REMARK = 2;</code>
     */
    public static final int OFPMBT_DSCP_REMARK_VALUE = 2;
    /**
     * <pre>
     * Experimenter meter band. 
     * </pre>
     *
     * <code>OFPMBT_EXPERIMENTER = 65535;</code>
     */
    public static final int OFPMBT_EXPERIMENTER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_meter_band_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_meter_band_type forNumber(int value) {
      switch (value) {
        case 0: return OFPMBT_INVALID;
        case 1: return OFPMBT_DROP;
        case 2: return OFPMBT_DSCP_REMARK;
        case 65535: return OFPMBT_EXPERIMENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_meter_band_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_meter_band_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_meter_band_type>() {
            public ofp_meter_band_type findValueByNumber(int number) {
              return ofp_meter_band_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(27);
    }

    private static final ofp_meter_band_type[] VALUES = values();

    public static ofp_meter_band_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_meter_band_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_meter_band_type)
  }

  /**
   * <pre>
   * Meter commands 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_meter_mod_command}
   */
  public enum ofp_meter_mod_command
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * New meter. 
     * </pre>
     *
     * <code>OFPMC_ADD = 0;</code>
     */
    OFPMC_ADD(0),
    /**
     * <pre>
     * Modify specified meter. 
     * </pre>
     *
     * <code>OFPMC_MODIFY = 1;</code>
     */
    OFPMC_MODIFY(1),
    /**
     * <pre>
     * Delete specified meter. 
     * </pre>
     *
     * <code>OFPMC_DELETE = 2;</code>
     */
    OFPMC_DELETE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * New meter. 
     * </pre>
     *
     * <code>OFPMC_ADD = 0;</code>
     */
    public static final int OFPMC_ADD_VALUE = 0;
    /**
     * <pre>
     * Modify specified meter. 
     * </pre>
     *
     * <code>OFPMC_MODIFY = 1;</code>
     */
    public static final int OFPMC_MODIFY_VALUE = 1;
    /**
     * <pre>
     * Delete specified meter. 
     * </pre>
     *
     * <code>OFPMC_DELETE = 2;</code>
     */
    public static final int OFPMC_DELETE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_meter_mod_command valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_meter_mod_command forNumber(int value) {
      switch (value) {
        case 0: return OFPMC_ADD;
        case 1: return OFPMC_MODIFY;
        case 2: return OFPMC_DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_meter_mod_command>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_meter_mod_command> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_meter_mod_command>() {
            public ofp_meter_mod_command findValueByNumber(int number) {
              return ofp_meter_mod_command.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(28);
    }

    private static final ofp_meter_mod_command[] VALUES = values();

    public static ofp_meter_mod_command valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_meter_mod_command(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_meter_mod_command)
  }

  /**
   * <pre>
   * Meter configuration flags 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_meter_flags}
   */
  public enum ofp_meter_flags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPMF_INVALID = 0;</code>
     */
    OFPMF_INVALID(0),
    /**
     * <pre>
     * Rate value in kb/s (kilo-bit per second). 
     * </pre>
     *
     * <code>OFPMF_KBPS = 1;</code>
     */
    OFPMF_KBPS(1),
    /**
     * <pre>
     * Rate value in packet/sec. 
     * </pre>
     *
     * <code>OFPMF_PKTPS = 2;</code>
     */
    OFPMF_PKTPS(2),
    /**
     * <pre>
     * Do burst size. 
     * </pre>
     *
     * <code>OFPMF_BURST = 4;</code>
     */
    OFPMF_BURST(4),
    /**
     * <pre>
     * Collect statistics. 
     * </pre>
     *
     * <code>OFPMF_STATS = 8;</code>
     */
    OFPMF_STATS(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPMF_INVALID = 0;</code>
     */
    public static final int OFPMF_INVALID_VALUE = 0;
    /**
     * <pre>
     * Rate value in kb/s (kilo-bit per second). 
     * </pre>
     *
     * <code>OFPMF_KBPS = 1;</code>
     */
    public static final int OFPMF_KBPS_VALUE = 1;
    /**
     * <pre>
     * Rate value in packet/sec. 
     * </pre>
     *
     * <code>OFPMF_PKTPS = 2;</code>
     */
    public static final int OFPMF_PKTPS_VALUE = 2;
    /**
     * <pre>
     * Do burst size. 
     * </pre>
     *
     * <code>OFPMF_BURST = 4;</code>
     */
    public static final int OFPMF_BURST_VALUE = 4;
    /**
     * <pre>
     * Collect statistics. 
     * </pre>
     *
     * <code>OFPMF_STATS = 8;</code>
     */
    public static final int OFPMF_STATS_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_meter_flags valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_meter_flags forNumber(int value) {
      switch (value) {
        case 0: return OFPMF_INVALID;
        case 1: return OFPMF_KBPS;
        case 2: return OFPMF_PKTPS;
        case 4: return OFPMF_BURST;
        case 8: return OFPMF_STATS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_meter_flags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_meter_flags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_meter_flags>() {
            public ofp_meter_flags findValueByNumber(int number) {
              return ofp_meter_flags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(29);
    }

    private static final ofp_meter_flags[] VALUES = values();

    public static ofp_meter_flags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_meter_flags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_meter_flags)
  }

  /**
   * <pre>
   * Values for 'type' in ofp_error_message.  These values are immutable: they
   * will not change in future versions of the protocol (although new values may
   * be added). 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_error_type}
   */
  public enum ofp_error_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Hello protocol failed. 
     * </pre>
     *
     * <code>OFPET_HELLO_FAILED = 0;</code>
     */
    OFPET_HELLO_FAILED(0),
    /**
     * <pre>
     * Request was not understood. 
     * </pre>
     *
     * <code>OFPET_BAD_REQUEST = 1;</code>
     */
    OFPET_BAD_REQUEST(1),
    /**
     * <pre>
     * Error in action description. 
     * </pre>
     *
     * <code>OFPET_BAD_ACTION = 2;</code>
     */
    OFPET_BAD_ACTION(2),
    /**
     * <pre>
     * Error in instruction list. 
     * </pre>
     *
     * <code>OFPET_BAD_INSTRUCTION = 3;</code>
     */
    OFPET_BAD_INSTRUCTION(3),
    /**
     * <pre>
     * Error in match. 
     * </pre>
     *
     * <code>OFPET_BAD_MATCH = 4;</code>
     */
    OFPET_BAD_MATCH(4),
    /**
     * <pre>
     * Problem modifying flow entry. 
     * </pre>
     *
     * <code>OFPET_FLOW_MOD_FAILED = 5;</code>
     */
    OFPET_FLOW_MOD_FAILED(5),
    /**
     * <pre>
     * Problem modifying group entry. 
     * </pre>
     *
     * <code>OFPET_GROUP_MOD_FAILED = 6;</code>
     */
    OFPET_GROUP_MOD_FAILED(6),
    /**
     * <pre>
     * Port mod request failed. 
     * </pre>
     *
     * <code>OFPET_PORT_MOD_FAILED = 7;</code>
     */
    OFPET_PORT_MOD_FAILED(7),
    /**
     * <pre>
     * Table mod request failed. 
     * </pre>
     *
     * <code>OFPET_TABLE_MOD_FAILED = 8;</code>
     */
    OFPET_TABLE_MOD_FAILED(8),
    /**
     * <pre>
     * Queue operation failed. 
     * </pre>
     *
     * <code>OFPET_QUEUE_OP_FAILED = 9;</code>
     */
    OFPET_QUEUE_OP_FAILED(9),
    /**
     * <pre>
     * Switch config request failed. 
     * </pre>
     *
     * <code>OFPET_SWITCH_CONFIG_FAILED = 10;</code>
     */
    OFPET_SWITCH_CONFIG_FAILED(10),
    /**
     * <pre>
     * Controller Role request failed. 
     * </pre>
     *
     * <code>OFPET_ROLE_REQUEST_FAILED = 11;</code>
     */
    OFPET_ROLE_REQUEST_FAILED(11),
    /**
     * <pre>
     * Error in meter. 
     * </pre>
     *
     * <code>OFPET_METER_MOD_FAILED = 12;</code>
     */
    OFPET_METER_MOD_FAILED(12),
    /**
     * <pre>
     * Setting table features failed. 
     * </pre>
     *
     * <code>OFPET_TABLE_FEATURES_FAILED = 13;</code>
     */
    OFPET_TABLE_FEATURES_FAILED(13),
    /**
     * <pre>
     * Experimenter error messages. 
     * </pre>
     *
     * <code>OFPET_EXPERIMENTER = 65535;</code>
     */
    OFPET_EXPERIMENTER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Hello protocol failed. 
     * </pre>
     *
     * <code>OFPET_HELLO_FAILED = 0;</code>
     */
    public static final int OFPET_HELLO_FAILED_VALUE = 0;
    /**
     * <pre>
     * Request was not understood. 
     * </pre>
     *
     * <code>OFPET_BAD_REQUEST = 1;</code>
     */
    public static final int OFPET_BAD_REQUEST_VALUE = 1;
    /**
     * <pre>
     * Error in action description. 
     * </pre>
     *
     * <code>OFPET_BAD_ACTION = 2;</code>
     */
    public static final int OFPET_BAD_ACTION_VALUE = 2;
    /**
     * <pre>
     * Error in instruction list. 
     * </pre>
     *
     * <code>OFPET_BAD_INSTRUCTION = 3;</code>
     */
    public static final int OFPET_BAD_INSTRUCTION_VALUE = 3;
    /**
     * <pre>
     * Error in match. 
     * </pre>
     *
     * <code>OFPET_BAD_MATCH = 4;</code>
     */
    public static final int OFPET_BAD_MATCH_VALUE = 4;
    /**
     * <pre>
     * Problem modifying flow entry. 
     * </pre>
     *
     * <code>OFPET_FLOW_MOD_FAILED = 5;</code>
     */
    public static final int OFPET_FLOW_MOD_FAILED_VALUE = 5;
    /**
     * <pre>
     * Problem modifying group entry. 
     * </pre>
     *
     * <code>OFPET_GROUP_MOD_FAILED = 6;</code>
     */
    public static final int OFPET_GROUP_MOD_FAILED_VALUE = 6;
    /**
     * <pre>
     * Port mod request failed. 
     * </pre>
     *
     * <code>OFPET_PORT_MOD_FAILED = 7;</code>
     */
    public static final int OFPET_PORT_MOD_FAILED_VALUE = 7;
    /**
     * <pre>
     * Table mod request failed. 
     * </pre>
     *
     * <code>OFPET_TABLE_MOD_FAILED = 8;</code>
     */
    public static final int OFPET_TABLE_MOD_FAILED_VALUE = 8;
    /**
     * <pre>
     * Queue operation failed. 
     * </pre>
     *
     * <code>OFPET_QUEUE_OP_FAILED = 9;</code>
     */
    public static final int OFPET_QUEUE_OP_FAILED_VALUE = 9;
    /**
     * <pre>
     * Switch config request failed. 
     * </pre>
     *
     * <code>OFPET_SWITCH_CONFIG_FAILED = 10;</code>
     */
    public static final int OFPET_SWITCH_CONFIG_FAILED_VALUE = 10;
    /**
     * <pre>
     * Controller Role request failed. 
     * </pre>
     *
     * <code>OFPET_ROLE_REQUEST_FAILED = 11;</code>
     */
    public static final int OFPET_ROLE_REQUEST_FAILED_VALUE = 11;
    /**
     * <pre>
     * Error in meter. 
     * </pre>
     *
     * <code>OFPET_METER_MOD_FAILED = 12;</code>
     */
    public static final int OFPET_METER_MOD_FAILED_VALUE = 12;
    /**
     * <pre>
     * Setting table features failed. 
     * </pre>
     *
     * <code>OFPET_TABLE_FEATURES_FAILED = 13;</code>
     */
    public static final int OFPET_TABLE_FEATURES_FAILED_VALUE = 13;
    /**
     * <pre>
     * Experimenter error messages. 
     * </pre>
     *
     * <code>OFPET_EXPERIMENTER = 65535;</code>
     */
    public static final int OFPET_EXPERIMENTER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_error_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_error_type forNumber(int value) {
      switch (value) {
        case 0: return OFPET_HELLO_FAILED;
        case 1: return OFPET_BAD_REQUEST;
        case 2: return OFPET_BAD_ACTION;
        case 3: return OFPET_BAD_INSTRUCTION;
        case 4: return OFPET_BAD_MATCH;
        case 5: return OFPET_FLOW_MOD_FAILED;
        case 6: return OFPET_GROUP_MOD_FAILED;
        case 7: return OFPET_PORT_MOD_FAILED;
        case 8: return OFPET_TABLE_MOD_FAILED;
        case 9: return OFPET_QUEUE_OP_FAILED;
        case 10: return OFPET_SWITCH_CONFIG_FAILED;
        case 11: return OFPET_ROLE_REQUEST_FAILED;
        case 12: return OFPET_METER_MOD_FAILED;
        case 13: return OFPET_TABLE_FEATURES_FAILED;
        case 65535: return OFPET_EXPERIMENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_error_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_error_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_error_type>() {
            public ofp_error_type findValueByNumber(int number) {
              return ofp_error_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(30);
    }

    private static final ofp_error_type[] VALUES = values();

    public static ofp_error_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_error_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_error_type)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_HELLO_FAILED.  'data' contains an
   * ASCII text string that may give failure details. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_hello_failed_code}
   */
  public enum ofp_hello_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No compatible version. 
     * </pre>
     *
     * <code>OFPHFC_INCOMPATIBLE = 0;</code>
     */
    OFPHFC_INCOMPATIBLE(0),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPHFC_EPERM = 1;</code>
     */
    OFPHFC_EPERM(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No compatible version. 
     * </pre>
     *
     * <code>OFPHFC_INCOMPATIBLE = 0;</code>
     */
    public static final int OFPHFC_INCOMPATIBLE_VALUE = 0;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPHFC_EPERM = 1;</code>
     */
    public static final int OFPHFC_EPERM_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_hello_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_hello_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPHFC_INCOMPATIBLE;
        case 1: return OFPHFC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_hello_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_hello_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_hello_failed_code>() {
            public ofp_hello_failed_code findValueByNumber(int number) {
              return ofp_hello_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(31);
    }

    private static final ofp_hello_failed_code[] VALUES = values();

    public static ofp_hello_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_hello_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_hello_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_BAD_REQUEST.  'data' contains at least
   * the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_bad_request_code}
   */
  public enum ofp_bad_request_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * ofp_header.version not supported. 
     * </pre>
     *
     * <code>OFPBRC_BAD_VERSION = 0;</code>
     */
    OFPBRC_BAD_VERSION(0),
    /**
     * <pre>
     * ofp_header.type not supported. 
     * </pre>
     *
     * <code>OFPBRC_BAD_TYPE = 1;</code>
     */
    OFPBRC_BAD_TYPE(1),
    /**
     * <pre>
     * ofp_multipart_request.type not supported.
     * </pre>
     *
     * <code>OFPBRC_BAD_MULTIPART = 2;</code>
     */
    OFPBRC_BAD_MULTIPART(2),
    /**
     * <pre>
     * Experimenter id not supported
     * (in ofp_experimenter_header or
     * ofp_multipart_request or
     * ofp_multipart_reply). 
     * </pre>
     *
     * <code>OFPBRC_BAD_EXPERIMENTER = 3;</code>
     */
    OFPBRC_BAD_EXPERIMENTER(3),
    /**
     * <pre>
     * Experimenter type not supported. 
     * </pre>
     *
     * <code>OFPBRC_BAD_EXP_TYPE = 4;</code>
     */
    OFPBRC_BAD_EXP_TYPE(4),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBRC_EPERM = 5;</code>
     */
    OFPBRC_EPERM(5),
    /**
     * <pre>
     * Wrong request length for type. 
     * </pre>
     *
     * <code>OFPBRC_BAD_LEN = 6;</code>
     */
    OFPBRC_BAD_LEN(6),
    /**
     * <pre>
     * Specified buffer has already been used. 
     * </pre>
     *
     * <code>OFPBRC_BUFFER_EMPTY = 7;</code>
     */
    OFPBRC_BUFFER_EMPTY(7),
    /**
     * <pre>
     * Specified buffer does not exist. 
     * </pre>
     *
     * <code>OFPBRC_BUFFER_UNKNOWN = 8;</code>
     */
    OFPBRC_BUFFER_UNKNOWN(8),
    /**
     * <pre>
     * Specified table-id invalid or does not
     * exist. 
     * </pre>
     *
     * <code>OFPBRC_BAD_TABLE_ID = 9;</code>
     */
    OFPBRC_BAD_TABLE_ID(9),
    /**
     * <pre>
     * Denied because controller is slave. 
     * </pre>
     *
     * <code>OFPBRC_IS_SLAVE = 10;</code>
     */
    OFPBRC_IS_SLAVE(10),
    /**
     * <pre>
     * Invalid port. 
     * </pre>
     *
     * <code>OFPBRC_BAD_PORT = 11;</code>
     */
    OFPBRC_BAD_PORT(11),
    /**
     * <pre>
     * Invalid packet in packet-out. 
     * </pre>
     *
     * <code>OFPBRC_BAD_PACKET = 12;</code>
     */
    OFPBRC_BAD_PACKET(12),
    /**
     * <pre>
     * ofp_multipart_request
     *overflowed the assigned buffer. 
     * </pre>
     *
     * <code>OFPBRC_MULTIPART_BUFFER_OVERFLOW = 13;</code>
     */
    OFPBRC_MULTIPART_BUFFER_OVERFLOW(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * ofp_header.version not supported. 
     * </pre>
     *
     * <code>OFPBRC_BAD_VERSION = 0;</code>
     */
    public static final int OFPBRC_BAD_VERSION_VALUE = 0;
    /**
     * <pre>
     * ofp_header.type not supported. 
     * </pre>
     *
     * <code>OFPBRC_BAD_TYPE = 1;</code>
     */
    public static final int OFPBRC_BAD_TYPE_VALUE = 1;
    /**
     * <pre>
     * ofp_multipart_request.type not supported.
     * </pre>
     *
     * <code>OFPBRC_BAD_MULTIPART = 2;</code>
     */
    public static final int OFPBRC_BAD_MULTIPART_VALUE = 2;
    /**
     * <pre>
     * Experimenter id not supported
     * (in ofp_experimenter_header or
     * ofp_multipart_request or
     * ofp_multipart_reply). 
     * </pre>
     *
     * <code>OFPBRC_BAD_EXPERIMENTER = 3;</code>
     */
    public static final int OFPBRC_BAD_EXPERIMENTER_VALUE = 3;
    /**
     * <pre>
     * Experimenter type not supported. 
     * </pre>
     *
     * <code>OFPBRC_BAD_EXP_TYPE = 4;</code>
     */
    public static final int OFPBRC_BAD_EXP_TYPE_VALUE = 4;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBRC_EPERM = 5;</code>
     */
    public static final int OFPBRC_EPERM_VALUE = 5;
    /**
     * <pre>
     * Wrong request length for type. 
     * </pre>
     *
     * <code>OFPBRC_BAD_LEN = 6;</code>
     */
    public static final int OFPBRC_BAD_LEN_VALUE = 6;
    /**
     * <pre>
     * Specified buffer has already been used. 
     * </pre>
     *
     * <code>OFPBRC_BUFFER_EMPTY = 7;</code>
     */
    public static final int OFPBRC_BUFFER_EMPTY_VALUE = 7;
    /**
     * <pre>
     * Specified buffer does not exist. 
     * </pre>
     *
     * <code>OFPBRC_BUFFER_UNKNOWN = 8;</code>
     */
    public static final int OFPBRC_BUFFER_UNKNOWN_VALUE = 8;
    /**
     * <pre>
     * Specified table-id invalid or does not
     * exist. 
     * </pre>
     *
     * <code>OFPBRC_BAD_TABLE_ID = 9;</code>
     */
    public static final int OFPBRC_BAD_TABLE_ID_VALUE = 9;
    /**
     * <pre>
     * Denied because controller is slave. 
     * </pre>
     *
     * <code>OFPBRC_IS_SLAVE = 10;</code>
     */
    public static final int OFPBRC_IS_SLAVE_VALUE = 10;
    /**
     * <pre>
     * Invalid port. 
     * </pre>
     *
     * <code>OFPBRC_BAD_PORT = 11;</code>
     */
    public static final int OFPBRC_BAD_PORT_VALUE = 11;
    /**
     * <pre>
     * Invalid packet in packet-out. 
     * </pre>
     *
     * <code>OFPBRC_BAD_PACKET = 12;</code>
     */
    public static final int OFPBRC_BAD_PACKET_VALUE = 12;
    /**
     * <pre>
     * ofp_multipart_request
     *overflowed the assigned buffer. 
     * </pre>
     *
     * <code>OFPBRC_MULTIPART_BUFFER_OVERFLOW = 13;</code>
     */
    public static final int OFPBRC_MULTIPART_BUFFER_OVERFLOW_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_bad_request_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_bad_request_code forNumber(int value) {
      switch (value) {
        case 0: return OFPBRC_BAD_VERSION;
        case 1: return OFPBRC_BAD_TYPE;
        case 2: return OFPBRC_BAD_MULTIPART;
        case 3: return OFPBRC_BAD_EXPERIMENTER;
        case 4: return OFPBRC_BAD_EXP_TYPE;
        case 5: return OFPBRC_EPERM;
        case 6: return OFPBRC_BAD_LEN;
        case 7: return OFPBRC_BUFFER_EMPTY;
        case 8: return OFPBRC_BUFFER_UNKNOWN;
        case 9: return OFPBRC_BAD_TABLE_ID;
        case 10: return OFPBRC_IS_SLAVE;
        case 11: return OFPBRC_BAD_PORT;
        case 12: return OFPBRC_BAD_PACKET;
        case 13: return OFPBRC_MULTIPART_BUFFER_OVERFLOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_bad_request_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_bad_request_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_bad_request_code>() {
            public ofp_bad_request_code findValueByNumber(int number) {
              return ofp_bad_request_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(32);
    }

    private static final ofp_bad_request_code[] VALUES = values();

    public static ofp_bad_request_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_bad_request_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_bad_request_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_BAD_ACTION.  'data' contains at least
   * the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_bad_action_code}
   */
  public enum ofp_bad_action_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown or unsupported action type. 
     * </pre>
     *
     * <code>OFPBAC_BAD_TYPE = 0;</code>
     */
    OFPBAC_BAD_TYPE(0),
    /**
     * <pre>
     * Length problem in actions. 
     * </pre>
     *
     * <code>OFPBAC_BAD_LEN = 1;</code>
     */
    OFPBAC_BAD_LEN(1),
    /**
     * <pre>
     * Unknown experimenter id specified. 
     * </pre>
     *
     * <code>OFPBAC_BAD_EXPERIMENTER = 2;</code>
     */
    OFPBAC_BAD_EXPERIMENTER(2),
    /**
     * <pre>
     * Unknown action for experimenter id. 
     * </pre>
     *
     * <code>OFPBAC_BAD_EXP_TYPE = 3;</code>
     */
    OFPBAC_BAD_EXP_TYPE(3),
    /**
     * <pre>
     * Problem validating output port. 
     * </pre>
     *
     * <code>OFPBAC_BAD_OUT_PORT = 4;</code>
     */
    OFPBAC_BAD_OUT_PORT(4),
    /**
     * <pre>
     * Bad action argument. 
     * </pre>
     *
     * <code>OFPBAC_BAD_ARGUMENT = 5;</code>
     */
    OFPBAC_BAD_ARGUMENT(5),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBAC_EPERM = 6;</code>
     */
    OFPBAC_EPERM(6),
    /**
     * <pre>
     * Can't handle this many actions. 
     * </pre>
     *
     * <code>OFPBAC_TOO_MANY = 7;</code>
     */
    OFPBAC_TOO_MANY(7),
    /**
     * <pre>
     * Problem validating output queue. 
     * </pre>
     *
     * <code>OFPBAC_BAD_QUEUE = 8;</code>
     */
    OFPBAC_BAD_QUEUE(8),
    /**
     * <pre>
     * Invalid group id in forward action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_OUT_GROUP = 9;</code>
     */
    OFPBAC_BAD_OUT_GROUP(9),
    /**
     * <pre>
     * Action can't apply for this match,
     *or Set-Field missing prerequisite. 
     * </pre>
     *
     * <code>OFPBAC_MATCH_INCONSISTENT = 10;</code>
     */
    OFPBAC_MATCH_INCONSISTENT(10),
    /**
     * <pre>
     * Action order is unsupported for the
     *action list in an Apply-Actions instruction 
     * </pre>
     *
     * <code>OFPBAC_UNSUPPORTED_ORDER = 11;</code>
     */
    OFPBAC_UNSUPPORTED_ORDER(11),
    /**
     * <pre>
     * Actions uses an unsupported
     *tag/encap. 
     * </pre>
     *
     * <code>OFPBAC_BAD_TAG = 12;</code>
     */
    OFPBAC_BAD_TAG(12),
    /**
     * <pre>
     * Unsupported type in SET_FIELD action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_SET_TYPE = 13;</code>
     */
    OFPBAC_BAD_SET_TYPE(13),
    /**
     * <pre>
     * Length problem in SET_FIELD action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_SET_LEN = 14;</code>
     */
    OFPBAC_BAD_SET_LEN(14),
    /**
     * <pre>
     * Bad argument in SET_FIELD action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_SET_ARGUMENT = 15;</code>
     */
    OFPBAC_BAD_SET_ARGUMENT(15),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown or unsupported action type. 
     * </pre>
     *
     * <code>OFPBAC_BAD_TYPE = 0;</code>
     */
    public static final int OFPBAC_BAD_TYPE_VALUE = 0;
    /**
     * <pre>
     * Length problem in actions. 
     * </pre>
     *
     * <code>OFPBAC_BAD_LEN = 1;</code>
     */
    public static final int OFPBAC_BAD_LEN_VALUE = 1;
    /**
     * <pre>
     * Unknown experimenter id specified. 
     * </pre>
     *
     * <code>OFPBAC_BAD_EXPERIMENTER = 2;</code>
     */
    public static final int OFPBAC_BAD_EXPERIMENTER_VALUE = 2;
    /**
     * <pre>
     * Unknown action for experimenter id. 
     * </pre>
     *
     * <code>OFPBAC_BAD_EXP_TYPE = 3;</code>
     */
    public static final int OFPBAC_BAD_EXP_TYPE_VALUE = 3;
    /**
     * <pre>
     * Problem validating output port. 
     * </pre>
     *
     * <code>OFPBAC_BAD_OUT_PORT = 4;</code>
     */
    public static final int OFPBAC_BAD_OUT_PORT_VALUE = 4;
    /**
     * <pre>
     * Bad action argument. 
     * </pre>
     *
     * <code>OFPBAC_BAD_ARGUMENT = 5;</code>
     */
    public static final int OFPBAC_BAD_ARGUMENT_VALUE = 5;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBAC_EPERM = 6;</code>
     */
    public static final int OFPBAC_EPERM_VALUE = 6;
    /**
     * <pre>
     * Can't handle this many actions. 
     * </pre>
     *
     * <code>OFPBAC_TOO_MANY = 7;</code>
     */
    public static final int OFPBAC_TOO_MANY_VALUE = 7;
    /**
     * <pre>
     * Problem validating output queue. 
     * </pre>
     *
     * <code>OFPBAC_BAD_QUEUE = 8;</code>
     */
    public static final int OFPBAC_BAD_QUEUE_VALUE = 8;
    /**
     * <pre>
     * Invalid group id in forward action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_OUT_GROUP = 9;</code>
     */
    public static final int OFPBAC_BAD_OUT_GROUP_VALUE = 9;
    /**
     * <pre>
     * Action can't apply for this match,
     *or Set-Field missing prerequisite. 
     * </pre>
     *
     * <code>OFPBAC_MATCH_INCONSISTENT = 10;</code>
     */
    public static final int OFPBAC_MATCH_INCONSISTENT_VALUE = 10;
    /**
     * <pre>
     * Action order is unsupported for the
     *action list in an Apply-Actions instruction 
     * </pre>
     *
     * <code>OFPBAC_UNSUPPORTED_ORDER = 11;</code>
     */
    public static final int OFPBAC_UNSUPPORTED_ORDER_VALUE = 11;
    /**
     * <pre>
     * Actions uses an unsupported
     *tag/encap. 
     * </pre>
     *
     * <code>OFPBAC_BAD_TAG = 12;</code>
     */
    public static final int OFPBAC_BAD_TAG_VALUE = 12;
    /**
     * <pre>
     * Unsupported type in SET_FIELD action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_SET_TYPE = 13;</code>
     */
    public static final int OFPBAC_BAD_SET_TYPE_VALUE = 13;
    /**
     * <pre>
     * Length problem in SET_FIELD action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_SET_LEN = 14;</code>
     */
    public static final int OFPBAC_BAD_SET_LEN_VALUE = 14;
    /**
     * <pre>
     * Bad argument in SET_FIELD action. 
     * </pre>
     *
     * <code>OFPBAC_BAD_SET_ARGUMENT = 15;</code>
     */
    public static final int OFPBAC_BAD_SET_ARGUMENT_VALUE = 15;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_bad_action_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_bad_action_code forNumber(int value) {
      switch (value) {
        case 0: return OFPBAC_BAD_TYPE;
        case 1: return OFPBAC_BAD_LEN;
        case 2: return OFPBAC_BAD_EXPERIMENTER;
        case 3: return OFPBAC_BAD_EXP_TYPE;
        case 4: return OFPBAC_BAD_OUT_PORT;
        case 5: return OFPBAC_BAD_ARGUMENT;
        case 6: return OFPBAC_EPERM;
        case 7: return OFPBAC_TOO_MANY;
        case 8: return OFPBAC_BAD_QUEUE;
        case 9: return OFPBAC_BAD_OUT_GROUP;
        case 10: return OFPBAC_MATCH_INCONSISTENT;
        case 11: return OFPBAC_UNSUPPORTED_ORDER;
        case 12: return OFPBAC_BAD_TAG;
        case 13: return OFPBAC_BAD_SET_TYPE;
        case 14: return OFPBAC_BAD_SET_LEN;
        case 15: return OFPBAC_BAD_SET_ARGUMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_bad_action_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_bad_action_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_bad_action_code>() {
            public ofp_bad_action_code findValueByNumber(int number) {
              return ofp_bad_action_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(33);
    }

    private static final ofp_bad_action_code[] VALUES = values();

    public static ofp_bad_action_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_bad_action_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_bad_action_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_BAD_INSTRUCTION.  'data' contains at
   * least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_bad_instruction_code}
   */
  public enum ofp_bad_instruction_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown instruction. 
     * </pre>
     *
     * <code>OFPBIC_UNKNOWN_INST = 0;</code>
     */
    OFPBIC_UNKNOWN_INST(0),
    /**
     * <pre>
     * Switch or table does not support the
     *instruction. 
     * </pre>
     *
     * <code>OFPBIC_UNSUP_INST = 1;</code>
     */
    OFPBIC_UNSUP_INST(1),
    /**
     * <pre>
     * Invalid Table-ID specified. 
     * </pre>
     *
     * <code>OFPBIC_BAD_TABLE_ID = 2;</code>
     */
    OFPBIC_BAD_TABLE_ID(2),
    /**
     * <pre>
     * Metadata value unsupported by datapath. 
     * </pre>
     *
     * <code>OFPBIC_UNSUP_METADATA = 3;</code>
     */
    OFPBIC_UNSUP_METADATA(3),
    /**
     * <pre>
     * Metadata mask value unsupported by
     *datapath. 
     * </pre>
     *
     * <code>OFPBIC_UNSUP_METADATA_MASK = 4;</code>
     */
    OFPBIC_UNSUP_METADATA_MASK(4),
    /**
     * <pre>
     * Unknown experimenter id specified. 
     * </pre>
     *
     * <code>OFPBIC_BAD_EXPERIMENTER = 5;</code>
     */
    OFPBIC_BAD_EXPERIMENTER(5),
    /**
     * <pre>
     * Unknown instruction for experimenter id. 
     * </pre>
     *
     * <code>OFPBIC_BAD_EXP_TYPE = 6;</code>
     */
    OFPBIC_BAD_EXP_TYPE(6),
    /**
     * <pre>
     * Length problem in instructions. 
     * </pre>
     *
     * <code>OFPBIC_BAD_LEN = 7;</code>
     */
    OFPBIC_BAD_LEN(7),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBIC_EPERM = 8;</code>
     */
    OFPBIC_EPERM(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown instruction. 
     * </pre>
     *
     * <code>OFPBIC_UNKNOWN_INST = 0;</code>
     */
    public static final int OFPBIC_UNKNOWN_INST_VALUE = 0;
    /**
     * <pre>
     * Switch or table does not support the
     *instruction. 
     * </pre>
     *
     * <code>OFPBIC_UNSUP_INST = 1;</code>
     */
    public static final int OFPBIC_UNSUP_INST_VALUE = 1;
    /**
     * <pre>
     * Invalid Table-ID specified. 
     * </pre>
     *
     * <code>OFPBIC_BAD_TABLE_ID = 2;</code>
     */
    public static final int OFPBIC_BAD_TABLE_ID_VALUE = 2;
    /**
     * <pre>
     * Metadata value unsupported by datapath. 
     * </pre>
     *
     * <code>OFPBIC_UNSUP_METADATA = 3;</code>
     */
    public static final int OFPBIC_UNSUP_METADATA_VALUE = 3;
    /**
     * <pre>
     * Metadata mask value unsupported by
     *datapath. 
     * </pre>
     *
     * <code>OFPBIC_UNSUP_METADATA_MASK = 4;</code>
     */
    public static final int OFPBIC_UNSUP_METADATA_MASK_VALUE = 4;
    /**
     * <pre>
     * Unknown experimenter id specified. 
     * </pre>
     *
     * <code>OFPBIC_BAD_EXPERIMENTER = 5;</code>
     */
    public static final int OFPBIC_BAD_EXPERIMENTER_VALUE = 5;
    /**
     * <pre>
     * Unknown instruction for experimenter id. 
     * </pre>
     *
     * <code>OFPBIC_BAD_EXP_TYPE = 6;</code>
     */
    public static final int OFPBIC_BAD_EXP_TYPE_VALUE = 6;
    /**
     * <pre>
     * Length problem in instructions. 
     * </pre>
     *
     * <code>OFPBIC_BAD_LEN = 7;</code>
     */
    public static final int OFPBIC_BAD_LEN_VALUE = 7;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBIC_EPERM = 8;</code>
     */
    public static final int OFPBIC_EPERM_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_bad_instruction_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_bad_instruction_code forNumber(int value) {
      switch (value) {
        case 0: return OFPBIC_UNKNOWN_INST;
        case 1: return OFPBIC_UNSUP_INST;
        case 2: return OFPBIC_BAD_TABLE_ID;
        case 3: return OFPBIC_UNSUP_METADATA;
        case 4: return OFPBIC_UNSUP_METADATA_MASK;
        case 5: return OFPBIC_BAD_EXPERIMENTER;
        case 6: return OFPBIC_BAD_EXP_TYPE;
        case 7: return OFPBIC_BAD_LEN;
        case 8: return OFPBIC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_bad_instruction_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_bad_instruction_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_bad_instruction_code>() {
            public ofp_bad_instruction_code findValueByNumber(int number) {
              return ofp_bad_instruction_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(34);
    }

    private static final ofp_bad_instruction_code[] VALUES = values();

    public static ofp_bad_instruction_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_bad_instruction_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_bad_instruction_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_BAD_MATCH.  'data' contains at least
   * the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_bad_match_code}
   */
  public enum ofp_bad_match_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unsupported match type specified by the
     *match 
     * </pre>
     *
     * <code>OFPBMC_BAD_TYPE = 0;</code>
     */
    OFPBMC_BAD_TYPE(0),
    /**
     * <pre>
     * Length problem in match. 
     * </pre>
     *
     * <code>OFPBMC_BAD_LEN = 1;</code>
     */
    OFPBMC_BAD_LEN(1),
    /**
     * <pre>
     * Match uses an unsupported tag/encap. 
     * </pre>
     *
     * <code>OFPBMC_BAD_TAG = 2;</code>
     */
    OFPBMC_BAD_TAG(2),
    /**
     * <pre>
     * Unsupported datalink addr mask - switch
     *does not support arbitrary datalink
     *address mask. 
     * </pre>
     *
     * <code>OFPBMC_BAD_DL_ADDR_MASK = 3;</code>
     */
    OFPBMC_BAD_DL_ADDR_MASK(3),
    /**
     * <pre>
     * Unsupported network addr mask - switch
     *does not support arbitrary network
     *address mask. 
     * </pre>
     *
     * <code>OFPBMC_BAD_NW_ADDR_MASK = 4;</code>
     */
    OFPBMC_BAD_NW_ADDR_MASK(4),
    /**
     * <pre>
     * Unsupported combination of fields masked
     *or omitted in the match. 
     * </pre>
     *
     * <code>OFPBMC_BAD_WILDCARDS = 5;</code>
     */
    OFPBMC_BAD_WILDCARDS(5),
    /**
     * <pre>
     * Unsupported field type in the match. 
     * </pre>
     *
     * <code>OFPBMC_BAD_FIELD = 6;</code>
     */
    OFPBMC_BAD_FIELD(6),
    /**
     * <pre>
     * Unsupported value in a match field. 
     * </pre>
     *
     * <code>OFPBMC_BAD_VALUE = 7;</code>
     */
    OFPBMC_BAD_VALUE(7),
    /**
     * <pre>
     * Unsupported mask specified in the match,
     *field is not dl-address or nw-address. 
     * </pre>
     *
     * <code>OFPBMC_BAD_MASK = 8;</code>
     */
    OFPBMC_BAD_MASK(8),
    /**
     * <pre>
     * A prerequisite was not met. 
     * </pre>
     *
     * <code>OFPBMC_BAD_PREREQ = 9;</code>
     */
    OFPBMC_BAD_PREREQ(9),
    /**
     * <pre>
     * A field type was duplicated. 
     * </pre>
     *
     * <code>OFPBMC_DUP_FIELD = 10;</code>
     */
    OFPBMC_DUP_FIELD(10),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBMC_EPERM = 11;</code>
     */
    OFPBMC_EPERM(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unsupported match type specified by the
     *match 
     * </pre>
     *
     * <code>OFPBMC_BAD_TYPE = 0;</code>
     */
    public static final int OFPBMC_BAD_TYPE_VALUE = 0;
    /**
     * <pre>
     * Length problem in match. 
     * </pre>
     *
     * <code>OFPBMC_BAD_LEN = 1;</code>
     */
    public static final int OFPBMC_BAD_LEN_VALUE = 1;
    /**
     * <pre>
     * Match uses an unsupported tag/encap. 
     * </pre>
     *
     * <code>OFPBMC_BAD_TAG = 2;</code>
     */
    public static final int OFPBMC_BAD_TAG_VALUE = 2;
    /**
     * <pre>
     * Unsupported datalink addr mask - switch
     *does not support arbitrary datalink
     *address mask. 
     * </pre>
     *
     * <code>OFPBMC_BAD_DL_ADDR_MASK = 3;</code>
     */
    public static final int OFPBMC_BAD_DL_ADDR_MASK_VALUE = 3;
    /**
     * <pre>
     * Unsupported network addr mask - switch
     *does not support arbitrary network
     *address mask. 
     * </pre>
     *
     * <code>OFPBMC_BAD_NW_ADDR_MASK = 4;</code>
     */
    public static final int OFPBMC_BAD_NW_ADDR_MASK_VALUE = 4;
    /**
     * <pre>
     * Unsupported combination of fields masked
     *or omitted in the match. 
     * </pre>
     *
     * <code>OFPBMC_BAD_WILDCARDS = 5;</code>
     */
    public static final int OFPBMC_BAD_WILDCARDS_VALUE = 5;
    /**
     * <pre>
     * Unsupported field type in the match. 
     * </pre>
     *
     * <code>OFPBMC_BAD_FIELD = 6;</code>
     */
    public static final int OFPBMC_BAD_FIELD_VALUE = 6;
    /**
     * <pre>
     * Unsupported value in a match field. 
     * </pre>
     *
     * <code>OFPBMC_BAD_VALUE = 7;</code>
     */
    public static final int OFPBMC_BAD_VALUE_VALUE = 7;
    /**
     * <pre>
     * Unsupported mask specified in the match,
     *field is not dl-address or nw-address. 
     * </pre>
     *
     * <code>OFPBMC_BAD_MASK = 8;</code>
     */
    public static final int OFPBMC_BAD_MASK_VALUE = 8;
    /**
     * <pre>
     * A prerequisite was not met. 
     * </pre>
     *
     * <code>OFPBMC_BAD_PREREQ = 9;</code>
     */
    public static final int OFPBMC_BAD_PREREQ_VALUE = 9;
    /**
     * <pre>
     * A field type was duplicated. 
     * </pre>
     *
     * <code>OFPBMC_DUP_FIELD = 10;</code>
     */
    public static final int OFPBMC_DUP_FIELD_VALUE = 10;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPBMC_EPERM = 11;</code>
     */
    public static final int OFPBMC_EPERM_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_bad_match_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_bad_match_code forNumber(int value) {
      switch (value) {
        case 0: return OFPBMC_BAD_TYPE;
        case 1: return OFPBMC_BAD_LEN;
        case 2: return OFPBMC_BAD_TAG;
        case 3: return OFPBMC_BAD_DL_ADDR_MASK;
        case 4: return OFPBMC_BAD_NW_ADDR_MASK;
        case 5: return OFPBMC_BAD_WILDCARDS;
        case 6: return OFPBMC_BAD_FIELD;
        case 7: return OFPBMC_BAD_VALUE;
        case 8: return OFPBMC_BAD_MASK;
        case 9: return OFPBMC_BAD_PREREQ;
        case 10: return OFPBMC_DUP_FIELD;
        case 11: return OFPBMC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_bad_match_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_bad_match_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_bad_match_code>() {
            public ofp_bad_match_code findValueByNumber(int number) {
              return ofp_bad_match_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(35);
    }

    private static final ofp_bad_match_code[] VALUES = values();

    public static ofp_bad_match_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_bad_match_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_bad_match_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_FLOW_MOD_FAILED.  'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_flow_mod_failed_code}
   */
  public enum ofp_flow_mod_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unspecified error. 
     * </pre>
     *
     * <code>OFPFMFC_UNKNOWN = 0;</code>
     */
    OFPFMFC_UNKNOWN(0),
    /**
     * <pre>
     * Flow not added because table was full. 
     * </pre>
     *
     * <code>OFPFMFC_TABLE_FULL = 1;</code>
     */
    OFPFMFC_TABLE_FULL(1),
    /**
     * <pre>
     * Table does not exist 
     * </pre>
     *
     * <code>OFPFMFC_BAD_TABLE_ID = 2;</code>
     */
    OFPFMFC_BAD_TABLE_ID(2),
    /**
     * <pre>
     * Attempted to add overlapping flow with
     *CHECK_OVERLAP flag set. 
     * </pre>
     *
     * <code>OFPFMFC_OVERLAP = 3;</code>
     */
    OFPFMFC_OVERLAP(3),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPFMFC_EPERM = 4;</code>
     */
    OFPFMFC_EPERM(4),
    /**
     * <pre>
     * Flow not added because of unsupported
     *idle/hard timeout. 
     * </pre>
     *
     * <code>OFPFMFC_BAD_TIMEOUT = 5;</code>
     */
    OFPFMFC_BAD_TIMEOUT(5),
    /**
     * <pre>
     * Unsupported or unknown command. 
     * </pre>
     *
     * <code>OFPFMFC_BAD_COMMAND = 6;</code>
     */
    OFPFMFC_BAD_COMMAND(6),
    /**
     * <pre>
     * Unsupported or unknown flags. 
     * </pre>
     *
     * <code>OFPFMFC_BAD_FLAGS = 7;</code>
     */
    OFPFMFC_BAD_FLAGS(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unspecified error. 
     * </pre>
     *
     * <code>OFPFMFC_UNKNOWN = 0;</code>
     */
    public static final int OFPFMFC_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Flow not added because table was full. 
     * </pre>
     *
     * <code>OFPFMFC_TABLE_FULL = 1;</code>
     */
    public static final int OFPFMFC_TABLE_FULL_VALUE = 1;
    /**
     * <pre>
     * Table does not exist 
     * </pre>
     *
     * <code>OFPFMFC_BAD_TABLE_ID = 2;</code>
     */
    public static final int OFPFMFC_BAD_TABLE_ID_VALUE = 2;
    /**
     * <pre>
     * Attempted to add overlapping flow with
     *CHECK_OVERLAP flag set. 
     * </pre>
     *
     * <code>OFPFMFC_OVERLAP = 3;</code>
     */
    public static final int OFPFMFC_OVERLAP_VALUE = 3;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPFMFC_EPERM = 4;</code>
     */
    public static final int OFPFMFC_EPERM_VALUE = 4;
    /**
     * <pre>
     * Flow not added because of unsupported
     *idle/hard timeout. 
     * </pre>
     *
     * <code>OFPFMFC_BAD_TIMEOUT = 5;</code>
     */
    public static final int OFPFMFC_BAD_TIMEOUT_VALUE = 5;
    /**
     * <pre>
     * Unsupported or unknown command. 
     * </pre>
     *
     * <code>OFPFMFC_BAD_COMMAND = 6;</code>
     */
    public static final int OFPFMFC_BAD_COMMAND_VALUE = 6;
    /**
     * <pre>
     * Unsupported or unknown flags. 
     * </pre>
     *
     * <code>OFPFMFC_BAD_FLAGS = 7;</code>
     */
    public static final int OFPFMFC_BAD_FLAGS_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_flow_mod_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_flow_mod_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPFMFC_UNKNOWN;
        case 1: return OFPFMFC_TABLE_FULL;
        case 2: return OFPFMFC_BAD_TABLE_ID;
        case 3: return OFPFMFC_OVERLAP;
        case 4: return OFPFMFC_EPERM;
        case 5: return OFPFMFC_BAD_TIMEOUT;
        case 6: return OFPFMFC_BAD_COMMAND;
        case 7: return OFPFMFC_BAD_FLAGS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_flow_mod_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_flow_mod_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_flow_mod_failed_code>() {
            public ofp_flow_mod_failed_code findValueByNumber(int number) {
              return ofp_flow_mod_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(36);
    }

    private static final ofp_flow_mod_failed_code[] VALUES = values();

    public static ofp_flow_mod_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_flow_mod_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_flow_mod_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_GROUP_MOD_FAILED.  'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_group_mod_failed_code}
   */
  public enum ofp_group_mod_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Group not added because a group ADD
     *attempted to replace an
     *already-present group. 
     * </pre>
     *
     * <code>OFPGMFC_GROUP_EXISTS = 0;</code>
     */
    OFPGMFC_GROUP_EXISTS(0),
    /**
     * <pre>
     * Group not added because Group
     *specified is invalid. 
     * </pre>
     *
     * <code>OFPGMFC_INVALID_GROUP = 1;</code>
     */
    OFPGMFC_INVALID_GROUP(1),
    /**
     * <pre>
     * Switch does not support unequal load
     *sharing with select groups. 
     * </pre>
     *
     * <code>OFPGMFC_WEIGHT_UNSUPPORTED = 2;</code>
     */
    OFPGMFC_WEIGHT_UNSUPPORTED(2),
    /**
     * <pre>
     * The group table is full. 
     * </pre>
     *
     * <code>OFPGMFC_OUT_OF_GROUPS = 3;</code>
     */
    OFPGMFC_OUT_OF_GROUPS(3),
    /**
     * <pre>
     * The maximum number of action buckets
     *for a group has been exceeded. 
     * </pre>
     *
     * <code>OFPGMFC_OUT_OF_BUCKETS = 4;</code>
     */
    OFPGMFC_OUT_OF_BUCKETS(4),
    /**
     * <pre>
     * Switch does not support groups that
     *forward to groups. 
     * </pre>
     *
     * <code>OFPGMFC_CHAINING_UNSUPPORTED = 5;</code>
     */
    OFPGMFC_CHAINING_UNSUPPORTED(5),
    /**
     * <pre>
     * This group cannot watch the
     *watch_port or watch_group specified.
     * </pre>
     *
     * <code>OFPGMFC_WATCH_UNSUPPORTED = 6;</code>
     */
    OFPGMFC_WATCH_UNSUPPORTED(6),
    /**
     * <pre>
     * Group entry would cause a loop. 
     * </pre>
     *
     * <code>OFPGMFC_LOOP = 7;</code>
     */
    OFPGMFC_LOOP(7),
    /**
     * <pre>
     * Group not modified because a group
     *MODIFY attempted to modify a
     *non-existent group. 
     * </pre>
     *
     * <code>OFPGMFC_UNKNOWN_GROUP = 8;</code>
     */
    OFPGMFC_UNKNOWN_GROUP(8),
    /**
     * <pre>
     * Group not deleted because another
     *group is forwarding to it. 
     * </pre>
     *
     * <code>OFPGMFC_CHAINED_GROUP = 9;</code>
     */
    OFPGMFC_CHAINED_GROUP(9),
    /**
     * <pre>
     * Unsupported or unknown group type. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_TYPE = 10;</code>
     */
    OFPGMFC_BAD_TYPE(10),
    /**
     * <pre>
     * Unsupported or unknown command. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_COMMAND = 11;</code>
     */
    OFPGMFC_BAD_COMMAND(11),
    /**
     * <pre>
     * Error in bucket. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_BUCKET = 12;</code>
     */
    OFPGMFC_BAD_BUCKET(12),
    /**
     * <pre>
     * Error in watch port/group. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_WATCH = 13;</code>
     */
    OFPGMFC_BAD_WATCH(13),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPGMFC_EPERM = 14;</code>
     */
    OFPGMFC_EPERM(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Group not added because a group ADD
     *attempted to replace an
     *already-present group. 
     * </pre>
     *
     * <code>OFPGMFC_GROUP_EXISTS = 0;</code>
     */
    public static final int OFPGMFC_GROUP_EXISTS_VALUE = 0;
    /**
     * <pre>
     * Group not added because Group
     *specified is invalid. 
     * </pre>
     *
     * <code>OFPGMFC_INVALID_GROUP = 1;</code>
     */
    public static final int OFPGMFC_INVALID_GROUP_VALUE = 1;
    /**
     * <pre>
     * Switch does not support unequal load
     *sharing with select groups. 
     * </pre>
     *
     * <code>OFPGMFC_WEIGHT_UNSUPPORTED = 2;</code>
     */
    public static final int OFPGMFC_WEIGHT_UNSUPPORTED_VALUE = 2;
    /**
     * <pre>
     * The group table is full. 
     * </pre>
     *
     * <code>OFPGMFC_OUT_OF_GROUPS = 3;</code>
     */
    public static final int OFPGMFC_OUT_OF_GROUPS_VALUE = 3;
    /**
     * <pre>
     * The maximum number of action buckets
     *for a group has been exceeded. 
     * </pre>
     *
     * <code>OFPGMFC_OUT_OF_BUCKETS = 4;</code>
     */
    public static final int OFPGMFC_OUT_OF_BUCKETS_VALUE = 4;
    /**
     * <pre>
     * Switch does not support groups that
     *forward to groups. 
     * </pre>
     *
     * <code>OFPGMFC_CHAINING_UNSUPPORTED = 5;</code>
     */
    public static final int OFPGMFC_CHAINING_UNSUPPORTED_VALUE = 5;
    /**
     * <pre>
     * This group cannot watch the
     *watch_port or watch_group specified.
     * </pre>
     *
     * <code>OFPGMFC_WATCH_UNSUPPORTED = 6;</code>
     */
    public static final int OFPGMFC_WATCH_UNSUPPORTED_VALUE = 6;
    /**
     * <pre>
     * Group entry would cause a loop. 
     * </pre>
     *
     * <code>OFPGMFC_LOOP = 7;</code>
     */
    public static final int OFPGMFC_LOOP_VALUE = 7;
    /**
     * <pre>
     * Group not modified because a group
     *MODIFY attempted to modify a
     *non-existent group. 
     * </pre>
     *
     * <code>OFPGMFC_UNKNOWN_GROUP = 8;</code>
     */
    public static final int OFPGMFC_UNKNOWN_GROUP_VALUE = 8;
    /**
     * <pre>
     * Group not deleted because another
     *group is forwarding to it. 
     * </pre>
     *
     * <code>OFPGMFC_CHAINED_GROUP = 9;</code>
     */
    public static final int OFPGMFC_CHAINED_GROUP_VALUE = 9;
    /**
     * <pre>
     * Unsupported or unknown group type. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_TYPE = 10;</code>
     */
    public static final int OFPGMFC_BAD_TYPE_VALUE = 10;
    /**
     * <pre>
     * Unsupported or unknown command. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_COMMAND = 11;</code>
     */
    public static final int OFPGMFC_BAD_COMMAND_VALUE = 11;
    /**
     * <pre>
     * Error in bucket. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_BUCKET = 12;</code>
     */
    public static final int OFPGMFC_BAD_BUCKET_VALUE = 12;
    /**
     * <pre>
     * Error in watch port/group. 
     * </pre>
     *
     * <code>OFPGMFC_BAD_WATCH = 13;</code>
     */
    public static final int OFPGMFC_BAD_WATCH_VALUE = 13;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPGMFC_EPERM = 14;</code>
     */
    public static final int OFPGMFC_EPERM_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_group_mod_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_group_mod_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPGMFC_GROUP_EXISTS;
        case 1: return OFPGMFC_INVALID_GROUP;
        case 2: return OFPGMFC_WEIGHT_UNSUPPORTED;
        case 3: return OFPGMFC_OUT_OF_GROUPS;
        case 4: return OFPGMFC_OUT_OF_BUCKETS;
        case 5: return OFPGMFC_CHAINING_UNSUPPORTED;
        case 6: return OFPGMFC_WATCH_UNSUPPORTED;
        case 7: return OFPGMFC_LOOP;
        case 8: return OFPGMFC_UNKNOWN_GROUP;
        case 9: return OFPGMFC_CHAINED_GROUP;
        case 10: return OFPGMFC_BAD_TYPE;
        case 11: return OFPGMFC_BAD_COMMAND;
        case 12: return OFPGMFC_BAD_BUCKET;
        case 13: return OFPGMFC_BAD_WATCH;
        case 14: return OFPGMFC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_group_mod_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_group_mod_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_group_mod_failed_code>() {
            public ofp_group_mod_failed_code findValueByNumber(int number) {
              return ofp_group_mod_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(37);
    }

    private static final ofp_group_mod_failed_code[] VALUES = values();

    public static ofp_group_mod_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_group_mod_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_group_mod_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_PORT_MOD_FAILED.  'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_port_mod_failed_code}
   */
  public enum ofp_port_mod_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Specified port number does not exist. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_PORT = 0;</code>
     */
    OFPPMFC_BAD_PORT(0),
    /**
     * <pre>
     * Specified hardware address does not
     * match the port number. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_HW_ADDR = 1;</code>
     */
    OFPPMFC_BAD_HW_ADDR(1),
    /**
     * <pre>
     * Specified config is invalid. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_CONFIG = 2;</code>
     */
    OFPPMFC_BAD_CONFIG(2),
    /**
     * <pre>
     * Specified advertise is invalid. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_ADVERTISE = 3;</code>
     */
    OFPPMFC_BAD_ADVERTISE(3),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPPMFC_EPERM = 4;</code>
     */
    OFPPMFC_EPERM(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Specified port number does not exist. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_PORT = 0;</code>
     */
    public static final int OFPPMFC_BAD_PORT_VALUE = 0;
    /**
     * <pre>
     * Specified hardware address does not
     * match the port number. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_HW_ADDR = 1;</code>
     */
    public static final int OFPPMFC_BAD_HW_ADDR_VALUE = 1;
    /**
     * <pre>
     * Specified config is invalid. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_CONFIG = 2;</code>
     */
    public static final int OFPPMFC_BAD_CONFIG_VALUE = 2;
    /**
     * <pre>
     * Specified advertise is invalid. 
     * </pre>
     *
     * <code>OFPPMFC_BAD_ADVERTISE = 3;</code>
     */
    public static final int OFPPMFC_BAD_ADVERTISE_VALUE = 3;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPPMFC_EPERM = 4;</code>
     */
    public static final int OFPPMFC_EPERM_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_port_mod_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_port_mod_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPPMFC_BAD_PORT;
        case 1: return OFPPMFC_BAD_HW_ADDR;
        case 2: return OFPPMFC_BAD_CONFIG;
        case 3: return OFPPMFC_BAD_ADVERTISE;
        case 4: return OFPPMFC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_port_mod_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_port_mod_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_port_mod_failed_code>() {
            public ofp_port_mod_failed_code findValueByNumber(int number) {
              return ofp_port_mod_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(38);
    }

    private static final ofp_port_mod_failed_code[] VALUES = values();

    public static ofp_port_mod_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_port_mod_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_port_mod_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_TABLE_MOD_FAILED.  'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_table_mod_failed_code}
   */
  public enum ofp_table_mod_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Specified table does not exist. 
     * </pre>
     *
     * <code>OFPTMFC_BAD_TABLE = 0;</code>
     */
    OFPTMFC_BAD_TABLE(0),
    /**
     * <pre>
     * Specified config is invalid. 
     * </pre>
     *
     * <code>OFPTMFC_BAD_CONFIG = 1;</code>
     */
    OFPTMFC_BAD_CONFIG(1),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPTMFC_EPERM = 2;</code>
     */
    OFPTMFC_EPERM(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Specified table does not exist. 
     * </pre>
     *
     * <code>OFPTMFC_BAD_TABLE = 0;</code>
     */
    public static final int OFPTMFC_BAD_TABLE_VALUE = 0;
    /**
     * <pre>
     * Specified config is invalid. 
     * </pre>
     *
     * <code>OFPTMFC_BAD_CONFIG = 1;</code>
     */
    public static final int OFPTMFC_BAD_CONFIG_VALUE = 1;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPTMFC_EPERM = 2;</code>
     */
    public static final int OFPTMFC_EPERM_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_table_mod_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_table_mod_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPTMFC_BAD_TABLE;
        case 1: return OFPTMFC_BAD_CONFIG;
        case 2: return OFPTMFC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_table_mod_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_table_mod_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_table_mod_failed_code>() {
            public ofp_table_mod_failed_code findValueByNumber(int number) {
              return ofp_table_mod_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(39);
    }

    private static final ofp_table_mod_failed_code[] VALUES = values();

    public static ofp_table_mod_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_table_mod_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_table_mod_failed_code)
  }

  /**
   * <pre>
   * ofp_error msg 'code' values for OFPET_QUEUE_OP_FAILED. 'data' contains
   * at least the first 64 bytes of the failed request 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_queue_op_failed_code}
   */
  public enum ofp_queue_op_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Invalid port (or port does not exist). 
     * </pre>
     *
     * <code>OFPQOFC_BAD_PORT = 0;</code>
     */
    OFPQOFC_BAD_PORT(0),
    /**
     * <pre>
     * Queue does not exist. 
     * </pre>
     *
     * <code>OFPQOFC_BAD_QUEUE = 1;</code>
     */
    OFPQOFC_BAD_QUEUE(1),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPQOFC_EPERM = 2;</code>
     */
    OFPQOFC_EPERM(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Invalid port (or port does not exist). 
     * </pre>
     *
     * <code>OFPQOFC_BAD_PORT = 0;</code>
     */
    public static final int OFPQOFC_BAD_PORT_VALUE = 0;
    /**
     * <pre>
     * Queue does not exist. 
     * </pre>
     *
     * <code>OFPQOFC_BAD_QUEUE = 1;</code>
     */
    public static final int OFPQOFC_BAD_QUEUE_VALUE = 1;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPQOFC_EPERM = 2;</code>
     */
    public static final int OFPQOFC_EPERM_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_queue_op_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_queue_op_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPQOFC_BAD_PORT;
        case 1: return OFPQOFC_BAD_QUEUE;
        case 2: return OFPQOFC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_queue_op_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_queue_op_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_queue_op_failed_code>() {
            public ofp_queue_op_failed_code findValueByNumber(int number) {
              return ofp_queue_op_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(40);
    }

    private static final ofp_queue_op_failed_code[] VALUES = values();

    public static ofp_queue_op_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_queue_op_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_queue_op_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_SWITCH_CONFIG_FAILED. 'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_switch_config_failed_code}
   */
  public enum ofp_switch_config_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Specified flags is invalid. 
     * </pre>
     *
     * <code>OFPSCFC_BAD_FLAGS = 0;</code>
     */
    OFPSCFC_BAD_FLAGS(0),
    /**
     * <pre>
     * Specified len is invalid. 
     * </pre>
     *
     * <code>OFPSCFC_BAD_LEN = 1;</code>
     */
    OFPSCFC_BAD_LEN(1),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPSCFC_EPERM = 2;</code>
     */
    OFPSCFC_EPERM(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Specified flags is invalid. 
     * </pre>
     *
     * <code>OFPSCFC_BAD_FLAGS = 0;</code>
     */
    public static final int OFPSCFC_BAD_FLAGS_VALUE = 0;
    /**
     * <pre>
     * Specified len is invalid. 
     * </pre>
     *
     * <code>OFPSCFC_BAD_LEN = 1;</code>
     */
    public static final int OFPSCFC_BAD_LEN_VALUE = 1;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPSCFC_EPERM = 2;</code>
     */
    public static final int OFPSCFC_EPERM_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_switch_config_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_switch_config_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPSCFC_BAD_FLAGS;
        case 1: return OFPSCFC_BAD_LEN;
        case 2: return OFPSCFC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_switch_config_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_switch_config_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_switch_config_failed_code>() {
            public ofp_switch_config_failed_code findValueByNumber(int number) {
              return ofp_switch_config_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(41);
    }

    private static final ofp_switch_config_failed_code[] VALUES = values();

    public static ofp_switch_config_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_switch_config_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_switch_config_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_ROLE_REQUEST_FAILED. 'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_role_request_failed_code}
   */
  public enum ofp_role_request_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Stale Message: old generation_id. 
     * </pre>
     *
     * <code>OFPRRFC_STALE = 0;</code>
     */
    OFPRRFC_STALE(0),
    /**
     * <pre>
     * Controller role change unsupported. 
     * </pre>
     *
     * <code>OFPRRFC_UNSUP = 1;</code>
     */
    OFPRRFC_UNSUP(1),
    /**
     * <pre>
     * Invalid role. 
     * </pre>
     *
     * <code>OFPRRFC_BAD_ROLE = 2;</code>
     */
    OFPRRFC_BAD_ROLE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Stale Message: old generation_id. 
     * </pre>
     *
     * <code>OFPRRFC_STALE = 0;</code>
     */
    public static final int OFPRRFC_STALE_VALUE = 0;
    /**
     * <pre>
     * Controller role change unsupported. 
     * </pre>
     *
     * <code>OFPRRFC_UNSUP = 1;</code>
     */
    public static final int OFPRRFC_UNSUP_VALUE = 1;
    /**
     * <pre>
     * Invalid role. 
     * </pre>
     *
     * <code>OFPRRFC_BAD_ROLE = 2;</code>
     */
    public static final int OFPRRFC_BAD_ROLE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_role_request_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_role_request_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPRRFC_STALE;
        case 1: return OFPRRFC_UNSUP;
        case 2: return OFPRRFC_BAD_ROLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_role_request_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_role_request_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_role_request_failed_code>() {
            public ofp_role_request_failed_code findValueByNumber(int number) {
              return ofp_role_request_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(42);
    }

    private static final ofp_role_request_failed_code[] VALUES = values();

    public static ofp_role_request_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_role_request_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_role_request_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_METER_MOD_FAILED.  'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_meter_mod_failed_code}
   */
  public enum ofp_meter_mod_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unspecified error. 
     * </pre>
     *
     * <code>OFPMMFC_UNKNOWN = 0;</code>
     */
    OFPMMFC_UNKNOWN(0),
    /**
     * <pre>
     * Meter not added because a Meter ADD
     * attempted to replace an existing Meter. 
     * </pre>
     *
     * <code>OFPMMFC_METER_EXISTS = 1;</code>
     */
    OFPMMFC_METER_EXISTS(1),
    /**
     * <pre>
     * Meter not added because Meter specified
     * is invalid,
     * or invalid meter in meter action. 
     * </pre>
     *
     * <code>OFPMMFC_INVALID_METER = 2;</code>
     */
    OFPMMFC_INVALID_METER(2),
    /**
     * <pre>
     * Meter not modified because a Meter MODIFY
     * attempted to modify a non-existent Meter,
     * or bad meter in meter action. 
     * </pre>
     *
     * <code>OFPMMFC_UNKNOWN_METER = 3;</code>
     */
    OFPMMFC_UNKNOWN_METER(3),
    /**
     * <pre>
     * Unsupported or unknown command. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_COMMAND = 4;</code>
     */
    OFPMMFC_BAD_COMMAND(4),
    /**
     * <pre>
     * Flag configuration unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_FLAGS = 5;</code>
     */
    OFPMMFC_BAD_FLAGS(5),
    /**
     * <pre>
     * Rate unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_RATE = 6;</code>
     */
    OFPMMFC_BAD_RATE(6),
    /**
     * <pre>
     * Burst size unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_BURST = 7;</code>
     */
    OFPMMFC_BAD_BURST(7),
    /**
     * <pre>
     * Band unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_BAND = 8;</code>
     */
    OFPMMFC_BAD_BAND(8),
    /**
     * <pre>
     * Band value unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_BAND_DETAIL = 9;</code>
     */
    OFPMMFC_BAD_BAND_DETAIL(9),
    /**
     * <pre>
     * No more meters available. 
     * </pre>
     *
     * <code>OFPMMFC_OUT_OF_METERS = 10;</code>
     */
    OFPMMFC_OUT_OF_METERS(10),
    /**
     * <pre>
     * The maximum number of properties
     * for a meter has been exceeded. 
     * </pre>
     *
     * <code>OFPMMFC_OUT_OF_BANDS = 11;</code>
     */
    OFPMMFC_OUT_OF_BANDS(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unspecified error. 
     * </pre>
     *
     * <code>OFPMMFC_UNKNOWN = 0;</code>
     */
    public static final int OFPMMFC_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Meter not added because a Meter ADD
     * attempted to replace an existing Meter. 
     * </pre>
     *
     * <code>OFPMMFC_METER_EXISTS = 1;</code>
     */
    public static final int OFPMMFC_METER_EXISTS_VALUE = 1;
    /**
     * <pre>
     * Meter not added because Meter specified
     * is invalid,
     * or invalid meter in meter action. 
     * </pre>
     *
     * <code>OFPMMFC_INVALID_METER = 2;</code>
     */
    public static final int OFPMMFC_INVALID_METER_VALUE = 2;
    /**
     * <pre>
     * Meter not modified because a Meter MODIFY
     * attempted to modify a non-existent Meter,
     * or bad meter in meter action. 
     * </pre>
     *
     * <code>OFPMMFC_UNKNOWN_METER = 3;</code>
     */
    public static final int OFPMMFC_UNKNOWN_METER_VALUE = 3;
    /**
     * <pre>
     * Unsupported or unknown command. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_COMMAND = 4;</code>
     */
    public static final int OFPMMFC_BAD_COMMAND_VALUE = 4;
    /**
     * <pre>
     * Flag configuration unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_FLAGS = 5;</code>
     */
    public static final int OFPMMFC_BAD_FLAGS_VALUE = 5;
    /**
     * <pre>
     * Rate unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_RATE = 6;</code>
     */
    public static final int OFPMMFC_BAD_RATE_VALUE = 6;
    /**
     * <pre>
     * Burst size unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_BURST = 7;</code>
     */
    public static final int OFPMMFC_BAD_BURST_VALUE = 7;
    /**
     * <pre>
     * Band unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_BAND = 8;</code>
     */
    public static final int OFPMMFC_BAD_BAND_VALUE = 8;
    /**
     * <pre>
     * Band value unsupported. 
     * </pre>
     *
     * <code>OFPMMFC_BAD_BAND_DETAIL = 9;</code>
     */
    public static final int OFPMMFC_BAD_BAND_DETAIL_VALUE = 9;
    /**
     * <pre>
     * No more meters available. 
     * </pre>
     *
     * <code>OFPMMFC_OUT_OF_METERS = 10;</code>
     */
    public static final int OFPMMFC_OUT_OF_METERS_VALUE = 10;
    /**
     * <pre>
     * The maximum number of properties
     * for a meter has been exceeded. 
     * </pre>
     *
     * <code>OFPMMFC_OUT_OF_BANDS = 11;</code>
     */
    public static final int OFPMMFC_OUT_OF_BANDS_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_meter_mod_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_meter_mod_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPMMFC_UNKNOWN;
        case 1: return OFPMMFC_METER_EXISTS;
        case 2: return OFPMMFC_INVALID_METER;
        case 3: return OFPMMFC_UNKNOWN_METER;
        case 4: return OFPMMFC_BAD_COMMAND;
        case 5: return OFPMMFC_BAD_FLAGS;
        case 6: return OFPMMFC_BAD_RATE;
        case 7: return OFPMMFC_BAD_BURST;
        case 8: return OFPMMFC_BAD_BAND;
        case 9: return OFPMMFC_BAD_BAND_DETAIL;
        case 10: return OFPMMFC_OUT_OF_METERS;
        case 11: return OFPMMFC_OUT_OF_BANDS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_meter_mod_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_meter_mod_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_meter_mod_failed_code>() {
            public ofp_meter_mod_failed_code findValueByNumber(int number) {
              return ofp_meter_mod_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(43);
    }

    private static final ofp_meter_mod_failed_code[] VALUES = values();

    public static ofp_meter_mod_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_meter_mod_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_meter_mod_failed_code)
  }

  /**
   * <pre>
   * ofp_error_msg 'code' values for OFPET_TABLE_FEATURES_FAILED. 'data' contains
   * at least the first 64 bytes of the failed request. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_table_features_failed_code}
   */
  public enum ofp_table_features_failed_code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Specified table does not exist. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_TABLE = 0;</code>
     */
    OFPTFFC_BAD_TABLE(0),
    /**
     * <pre>
     * Invalid metadata mask. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_METADATA = 1;</code>
     */
    OFPTFFC_BAD_METADATA(1),
    /**
     * <pre>
     * Unknown property type. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_TYPE = 2;</code>
     */
    OFPTFFC_BAD_TYPE(2),
    /**
     * <pre>
     * Length problem in properties. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_LEN = 3;</code>
     */
    OFPTFFC_BAD_LEN(3),
    /**
     * <pre>
     * Unsupported property value. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_ARGUMENT = 4;</code>
     */
    OFPTFFC_BAD_ARGUMENT(4),
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPTFFC_EPERM = 5;</code>
     */
    OFPTFFC_EPERM(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Specified table does not exist. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_TABLE = 0;</code>
     */
    public static final int OFPTFFC_BAD_TABLE_VALUE = 0;
    /**
     * <pre>
     * Invalid metadata mask. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_METADATA = 1;</code>
     */
    public static final int OFPTFFC_BAD_METADATA_VALUE = 1;
    /**
     * <pre>
     * Unknown property type. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_TYPE = 2;</code>
     */
    public static final int OFPTFFC_BAD_TYPE_VALUE = 2;
    /**
     * <pre>
     * Length problem in properties. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_LEN = 3;</code>
     */
    public static final int OFPTFFC_BAD_LEN_VALUE = 3;
    /**
     * <pre>
     * Unsupported property value. 
     * </pre>
     *
     * <code>OFPTFFC_BAD_ARGUMENT = 4;</code>
     */
    public static final int OFPTFFC_BAD_ARGUMENT_VALUE = 4;
    /**
     * <pre>
     * Permissions error. 
     * </pre>
     *
     * <code>OFPTFFC_EPERM = 5;</code>
     */
    public static final int OFPTFFC_EPERM_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_table_features_failed_code valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_table_features_failed_code forNumber(int value) {
      switch (value) {
        case 0: return OFPTFFC_BAD_TABLE;
        case 1: return OFPTFFC_BAD_METADATA;
        case 2: return OFPTFFC_BAD_TYPE;
        case 3: return OFPTFFC_BAD_LEN;
        case 4: return OFPTFFC_BAD_ARGUMENT;
        case 5: return OFPTFFC_EPERM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_table_features_failed_code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_table_features_failed_code> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_table_features_failed_code>() {
            public ofp_table_features_failed_code findValueByNumber(int number) {
              return ofp_table_features_failed_code.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(44);
    }

    private static final ofp_table_features_failed_code[] VALUES = values();

    public static ofp_table_features_failed_code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_table_features_failed_code(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_table_features_failed_code)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_multipart_type}
   */
  public enum ofp_multipart_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Description of this OpenFlow switch.
     * The request body is empty.
     * The reply body is struct ofp_desc. 
     * </pre>
     *
     * <code>OFPMP_DESC = 0;</code>
     */
    OFPMP_DESC(0),
    /**
     * <pre>
     * Individual flow statistics.
     * The request body is struct ofp_flow_stats_request.
     * The reply body is an array of struct ofp_flow_stats. 
     * </pre>
     *
     * <code>OFPMP_FLOW = 1;</code>
     */
    OFPMP_FLOW(1),
    /**
     * <pre>
     * Aggregate flow statistics.
     * The request body is struct ofp_aggregate_stats_request.
     * The reply body is struct ofp_aggregate_stats_reply. 
     * </pre>
     *
     * <code>OFPMP_AGGREGATE = 2;</code>
     */
    OFPMP_AGGREGATE(2),
    /**
     * <pre>
     * Flow table statistics.
     * The request body is empty.
     * The reply body is an array of struct ofp_table_stats. 
     * </pre>
     *
     * <code>OFPMP_TABLE = 3;</code>
     */
    OFPMP_TABLE(3),
    /**
     * <pre>
     * Port statistics.
     * The request body is struct ofp_port_stats_request.
     * The reply body is an array of struct ofp_port_stats. 
     * </pre>
     *
     * <code>OFPMP_PORT_STATS = 4;</code>
     */
    OFPMP_PORT_STATS(4),
    /**
     * <pre>
     * Queue statistics for a port
     * The request body is struct ofp_queue_stats_request.
     * The reply body is an array of struct ofp_queue_stats 
     * </pre>
     *
     * <code>OFPMP_QUEUE = 5;</code>
     */
    OFPMP_QUEUE(5),
    /**
     * <pre>
     * Group counter statistics.
     * The request body is struct ofp_group_stats_request.
     * The reply is an array of struct ofp_group_stats. 
     * </pre>
     *
     * <code>OFPMP_GROUP = 6;</code>
     */
    OFPMP_GROUP(6),
    /**
     * <pre>
     * Group description.
     * The request body is empty.
     * The reply body is an array of struct ofp_group_desc. 
     * </pre>
     *
     * <code>OFPMP_GROUP_DESC = 7;</code>
     */
    OFPMP_GROUP_DESC(7),
    /**
     * <pre>
     * Group features.
     * The request body is empty.
     * The reply body is struct ofp_group_features. 
     * </pre>
     *
     * <code>OFPMP_GROUP_FEATURES = 8;</code>
     */
    OFPMP_GROUP_FEATURES(8),
    /**
     * <pre>
     * Meter statistics.
     * The request body is struct ofp_meter_multipart_requests.
     * The reply body is an array of struct ofp_meter_stats. 
     * </pre>
     *
     * <code>OFPMP_METER = 9;</code>
     */
    OFPMP_METER(9),
    /**
     * <pre>
     * Meter configuration.
     * The request body is struct ofp_meter_multipart_requests.
     * The reply body is an array of struct ofp_meter_config. 
     * </pre>
     *
     * <code>OFPMP_METER_CONFIG = 10;</code>
     */
    OFPMP_METER_CONFIG(10),
    /**
     * <pre>
     * Meter features.
     * The request body is empty.
     * The reply body is struct ofp_meter_features. 
     * </pre>
     *
     * <code>OFPMP_METER_FEATURES = 11;</code>
     */
    OFPMP_METER_FEATURES(11),
    /**
     * <pre>
     * Table features.
     * The request body is either empty or contains an array of
     * struct ofp_table_features containing the controller's
     * desired view of the switch. If the switch is unable to
     * set the specified view an error is returned.
     * The reply body is an array of struct ofp_table_features. 
     * </pre>
     *
     * <code>OFPMP_TABLE_FEATURES = 12;</code>
     */
    OFPMP_TABLE_FEATURES(12),
    /**
     * <pre>
     * Port description.
     * The request body is empty.
     * The reply body is an array of struct ofp_port. 
     * </pre>
     *
     * <code>OFPMP_PORT_DESC = 13;</code>
     */
    OFPMP_PORT_DESC(13),
    /**
     * <pre>
     * Experimenter extension.
     * The request and reply bodies begin with
     * struct ofp_experimenter_multipart_header.
     * The request and reply bodies are otherwise experimenter-defined. 
     * </pre>
     *
     * <code>OFPMP_EXPERIMENTER = 65535;</code>
     */
    OFPMP_EXPERIMENTER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Description of this OpenFlow switch.
     * The request body is empty.
     * The reply body is struct ofp_desc. 
     * </pre>
     *
     * <code>OFPMP_DESC = 0;</code>
     */
    public static final int OFPMP_DESC_VALUE = 0;
    /**
     * <pre>
     * Individual flow statistics.
     * The request body is struct ofp_flow_stats_request.
     * The reply body is an array of struct ofp_flow_stats. 
     * </pre>
     *
     * <code>OFPMP_FLOW = 1;</code>
     */
    public static final int OFPMP_FLOW_VALUE = 1;
    /**
     * <pre>
     * Aggregate flow statistics.
     * The request body is struct ofp_aggregate_stats_request.
     * The reply body is struct ofp_aggregate_stats_reply. 
     * </pre>
     *
     * <code>OFPMP_AGGREGATE = 2;</code>
     */
    public static final int OFPMP_AGGREGATE_VALUE = 2;
    /**
     * <pre>
     * Flow table statistics.
     * The request body is empty.
     * The reply body is an array of struct ofp_table_stats. 
     * </pre>
     *
     * <code>OFPMP_TABLE = 3;</code>
     */
    public static final int OFPMP_TABLE_VALUE = 3;
    /**
     * <pre>
     * Port statistics.
     * The request body is struct ofp_port_stats_request.
     * The reply body is an array of struct ofp_port_stats. 
     * </pre>
     *
     * <code>OFPMP_PORT_STATS = 4;</code>
     */
    public static final int OFPMP_PORT_STATS_VALUE = 4;
    /**
     * <pre>
     * Queue statistics for a port
     * The request body is struct ofp_queue_stats_request.
     * The reply body is an array of struct ofp_queue_stats 
     * </pre>
     *
     * <code>OFPMP_QUEUE = 5;</code>
     */
    public static final int OFPMP_QUEUE_VALUE = 5;
    /**
     * <pre>
     * Group counter statistics.
     * The request body is struct ofp_group_stats_request.
     * The reply is an array of struct ofp_group_stats. 
     * </pre>
     *
     * <code>OFPMP_GROUP = 6;</code>
     */
    public static final int OFPMP_GROUP_VALUE = 6;
    /**
     * <pre>
     * Group description.
     * The request body is empty.
     * The reply body is an array of struct ofp_group_desc. 
     * </pre>
     *
     * <code>OFPMP_GROUP_DESC = 7;</code>
     */
    public static final int OFPMP_GROUP_DESC_VALUE = 7;
    /**
     * <pre>
     * Group features.
     * The request body is empty.
     * The reply body is struct ofp_group_features. 
     * </pre>
     *
     * <code>OFPMP_GROUP_FEATURES = 8;</code>
     */
    public static final int OFPMP_GROUP_FEATURES_VALUE = 8;
    /**
     * <pre>
     * Meter statistics.
     * The request body is struct ofp_meter_multipart_requests.
     * The reply body is an array of struct ofp_meter_stats. 
     * </pre>
     *
     * <code>OFPMP_METER = 9;</code>
     */
    public static final int OFPMP_METER_VALUE = 9;
    /**
     * <pre>
     * Meter configuration.
     * The request body is struct ofp_meter_multipart_requests.
     * The reply body is an array of struct ofp_meter_config. 
     * </pre>
     *
     * <code>OFPMP_METER_CONFIG = 10;</code>
     */
    public static final int OFPMP_METER_CONFIG_VALUE = 10;
    /**
     * <pre>
     * Meter features.
     * The request body is empty.
     * The reply body is struct ofp_meter_features. 
     * </pre>
     *
     * <code>OFPMP_METER_FEATURES = 11;</code>
     */
    public static final int OFPMP_METER_FEATURES_VALUE = 11;
    /**
     * <pre>
     * Table features.
     * The request body is either empty or contains an array of
     * struct ofp_table_features containing the controller's
     * desired view of the switch. If the switch is unable to
     * set the specified view an error is returned.
     * The reply body is an array of struct ofp_table_features. 
     * </pre>
     *
     * <code>OFPMP_TABLE_FEATURES = 12;</code>
     */
    public static final int OFPMP_TABLE_FEATURES_VALUE = 12;
    /**
     * <pre>
     * Port description.
     * The request body is empty.
     * The reply body is an array of struct ofp_port. 
     * </pre>
     *
     * <code>OFPMP_PORT_DESC = 13;</code>
     */
    public static final int OFPMP_PORT_DESC_VALUE = 13;
    /**
     * <pre>
     * Experimenter extension.
     * The request and reply bodies begin with
     * struct ofp_experimenter_multipart_header.
     * The request and reply bodies are otherwise experimenter-defined. 
     * </pre>
     *
     * <code>OFPMP_EXPERIMENTER = 65535;</code>
     */
    public static final int OFPMP_EXPERIMENTER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_multipart_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_multipart_type forNumber(int value) {
      switch (value) {
        case 0: return OFPMP_DESC;
        case 1: return OFPMP_FLOW;
        case 2: return OFPMP_AGGREGATE;
        case 3: return OFPMP_TABLE;
        case 4: return OFPMP_PORT_STATS;
        case 5: return OFPMP_QUEUE;
        case 6: return OFPMP_GROUP;
        case 7: return OFPMP_GROUP_DESC;
        case 8: return OFPMP_GROUP_FEATURES;
        case 9: return OFPMP_METER;
        case 10: return OFPMP_METER_CONFIG;
        case 11: return OFPMP_METER_FEATURES;
        case 12: return OFPMP_TABLE_FEATURES;
        case 13: return OFPMP_PORT_DESC;
        case 65535: return OFPMP_EXPERIMENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_multipart_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_multipart_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_multipart_type>() {
            public ofp_multipart_type findValueByNumber(int number) {
              return ofp_multipart_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(45);
    }

    private static final ofp_multipart_type[] VALUES = values();

    public static ofp_multipart_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_multipart_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_multipart_type)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_multipart_request_flags}
   */
  public enum ofp_multipart_request_flags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPMPF_REQ_INVALID = 0;</code>
     */
    OFPMPF_REQ_INVALID(0),
    /**
     * <pre>
     * More requests to follow. 
     * </pre>
     *
     * <code>OFPMPF_REQ_MORE = 1;</code>
     */
    OFPMPF_REQ_MORE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPMPF_REQ_INVALID = 0;</code>
     */
    public static final int OFPMPF_REQ_INVALID_VALUE = 0;
    /**
     * <pre>
     * More requests to follow. 
     * </pre>
     *
     * <code>OFPMPF_REQ_MORE = 1;</code>
     */
    public static final int OFPMPF_REQ_MORE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_multipart_request_flags valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_multipart_request_flags forNumber(int value) {
      switch (value) {
        case 0: return OFPMPF_REQ_INVALID;
        case 1: return OFPMPF_REQ_MORE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_multipart_request_flags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_multipart_request_flags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_multipart_request_flags>() {
            public ofp_multipart_request_flags findValueByNumber(int number) {
              return ofp_multipart_request_flags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(46);
    }

    private static final ofp_multipart_request_flags[] VALUES = values();

    public static ofp_multipart_request_flags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_multipart_request_flags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_multipart_request_flags)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_multipart_reply_flags}
   */
  public enum ofp_multipart_reply_flags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPMPF_REPLY_INVALID = 0;</code>
     */
    OFPMPF_REPLY_INVALID(0),
    /**
     * <pre>
     * More replies to follow. 
     * </pre>
     *
     * <code>OFPMPF_REPLY_MORE = 1;</code>
     */
    OFPMPF_REPLY_MORE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPMPF_REPLY_INVALID = 0;</code>
     */
    public static final int OFPMPF_REPLY_INVALID_VALUE = 0;
    /**
     * <pre>
     * More replies to follow. 
     * </pre>
     *
     * <code>OFPMPF_REPLY_MORE = 1;</code>
     */
    public static final int OFPMPF_REPLY_MORE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_multipart_reply_flags valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_multipart_reply_flags forNumber(int value) {
      switch (value) {
        case 0: return OFPMPF_REPLY_INVALID;
        case 1: return OFPMPF_REPLY_MORE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_multipart_reply_flags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_multipart_reply_flags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_multipart_reply_flags>() {
            public ofp_multipart_reply_flags findValueByNumber(int number) {
              return ofp_multipart_reply_flags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(47);
    }

    private static final ofp_multipart_reply_flags[] VALUES = values();

    public static ofp_multipart_reply_flags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_multipart_reply_flags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_multipart_reply_flags)
  }

  /**
   * <pre>
   * Table Feature property types.
   * Low order bit cleared indicates a property for a regular Flow Entry.
   * Low order bit set indicates a property for the Table-Miss Flow Entry.
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_table_feature_prop_type}
   */
  public enum ofp_table_feature_prop_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Instructions property. 
     * </pre>
     *
     * <code>OFPTFPT_INSTRUCTIONS = 0;</code>
     */
    OFPTFPT_INSTRUCTIONS(0),
    /**
     * <pre>
     * Instructions for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_INSTRUCTIONS_MISS = 1;</code>
     */
    OFPTFPT_INSTRUCTIONS_MISS(1),
    /**
     * <pre>
     * Next Table property. 
     * </pre>
     *
     * <code>OFPTFPT_NEXT_TABLES = 2;</code>
     */
    OFPTFPT_NEXT_TABLES(2),
    /**
     * <pre>
     * Next Table for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_NEXT_TABLES_MISS = 3;</code>
     */
    OFPTFPT_NEXT_TABLES_MISS(3),
    /**
     * <pre>
     * Write Actions property. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_ACTIONS = 4;</code>
     */
    OFPTFPT_WRITE_ACTIONS(4),
    /**
     * <pre>
     * Write Actions for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_ACTIONS_MISS = 5;</code>
     */
    OFPTFPT_WRITE_ACTIONS_MISS(5),
    /**
     * <pre>
     * Apply Actions property. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_ACTIONS = 6;</code>
     */
    OFPTFPT_APPLY_ACTIONS(6),
    /**
     * <pre>
     * Apply Actions for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_ACTIONS_MISS = 7;</code>
     */
    OFPTFPT_APPLY_ACTIONS_MISS(7),
    /**
     * <pre>
     * Match property. 
     * </pre>
     *
     * <code>OFPTFPT_MATCH = 8;</code>
     */
    OFPTFPT_MATCH(8),
    /**
     * <pre>
     * Wildcards property. 
     * </pre>
     *
     * <code>OFPTFPT_WILDCARDS = 10;</code>
     */
    OFPTFPT_WILDCARDS(10),
    /**
     * <pre>
     * Write Set-Field property. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_SETFIELD = 12;</code>
     */
    OFPTFPT_WRITE_SETFIELD(12),
    /**
     * <pre>
     * Write Set-Field for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_SETFIELD_MISS = 13;</code>
     */
    OFPTFPT_WRITE_SETFIELD_MISS(13),
    /**
     * <pre>
     * Apply Set-Field property. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_SETFIELD = 14;</code>
     */
    OFPTFPT_APPLY_SETFIELD(14),
    /**
     * <pre>
     * Apply Set-Field for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_SETFIELD_MISS = 15;</code>
     */
    OFPTFPT_APPLY_SETFIELD_MISS(15),
    /**
     * <pre>
     * Experimenter property. 
     * </pre>
     *
     * <code>OFPTFPT_EXPERIMENTER = 65534;</code>
     */
    OFPTFPT_EXPERIMENTER(65534),
    /**
     * <pre>
     * Experimenter for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_EXPERIMENTER_MISS = 65535;</code>
     */
    OFPTFPT_EXPERIMENTER_MISS(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Instructions property. 
     * </pre>
     *
     * <code>OFPTFPT_INSTRUCTIONS = 0;</code>
     */
    public static final int OFPTFPT_INSTRUCTIONS_VALUE = 0;
    /**
     * <pre>
     * Instructions for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_INSTRUCTIONS_MISS = 1;</code>
     */
    public static final int OFPTFPT_INSTRUCTIONS_MISS_VALUE = 1;
    /**
     * <pre>
     * Next Table property. 
     * </pre>
     *
     * <code>OFPTFPT_NEXT_TABLES = 2;</code>
     */
    public static final int OFPTFPT_NEXT_TABLES_VALUE = 2;
    /**
     * <pre>
     * Next Table for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_NEXT_TABLES_MISS = 3;</code>
     */
    public static final int OFPTFPT_NEXT_TABLES_MISS_VALUE = 3;
    /**
     * <pre>
     * Write Actions property. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_ACTIONS = 4;</code>
     */
    public static final int OFPTFPT_WRITE_ACTIONS_VALUE = 4;
    /**
     * <pre>
     * Write Actions for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_ACTIONS_MISS = 5;</code>
     */
    public static final int OFPTFPT_WRITE_ACTIONS_MISS_VALUE = 5;
    /**
     * <pre>
     * Apply Actions property. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_ACTIONS = 6;</code>
     */
    public static final int OFPTFPT_APPLY_ACTIONS_VALUE = 6;
    /**
     * <pre>
     * Apply Actions for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_ACTIONS_MISS = 7;</code>
     */
    public static final int OFPTFPT_APPLY_ACTIONS_MISS_VALUE = 7;
    /**
     * <pre>
     * Match property. 
     * </pre>
     *
     * <code>OFPTFPT_MATCH = 8;</code>
     */
    public static final int OFPTFPT_MATCH_VALUE = 8;
    /**
     * <pre>
     * Wildcards property. 
     * </pre>
     *
     * <code>OFPTFPT_WILDCARDS = 10;</code>
     */
    public static final int OFPTFPT_WILDCARDS_VALUE = 10;
    /**
     * <pre>
     * Write Set-Field property. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_SETFIELD = 12;</code>
     */
    public static final int OFPTFPT_WRITE_SETFIELD_VALUE = 12;
    /**
     * <pre>
     * Write Set-Field for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_WRITE_SETFIELD_MISS = 13;</code>
     */
    public static final int OFPTFPT_WRITE_SETFIELD_MISS_VALUE = 13;
    /**
     * <pre>
     * Apply Set-Field property. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_SETFIELD = 14;</code>
     */
    public static final int OFPTFPT_APPLY_SETFIELD_VALUE = 14;
    /**
     * <pre>
     * Apply Set-Field for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_APPLY_SETFIELD_MISS = 15;</code>
     */
    public static final int OFPTFPT_APPLY_SETFIELD_MISS_VALUE = 15;
    /**
     * <pre>
     * Experimenter property. 
     * </pre>
     *
     * <code>OFPTFPT_EXPERIMENTER = 65534;</code>
     */
    public static final int OFPTFPT_EXPERIMENTER_VALUE = 65534;
    /**
     * <pre>
     * Experimenter for table-miss. 
     * </pre>
     *
     * <code>OFPTFPT_EXPERIMENTER_MISS = 65535;</code>
     */
    public static final int OFPTFPT_EXPERIMENTER_MISS_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_table_feature_prop_type valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_table_feature_prop_type forNumber(int value) {
      switch (value) {
        case 0: return OFPTFPT_INSTRUCTIONS;
        case 1: return OFPTFPT_INSTRUCTIONS_MISS;
        case 2: return OFPTFPT_NEXT_TABLES;
        case 3: return OFPTFPT_NEXT_TABLES_MISS;
        case 4: return OFPTFPT_WRITE_ACTIONS;
        case 5: return OFPTFPT_WRITE_ACTIONS_MISS;
        case 6: return OFPTFPT_APPLY_ACTIONS;
        case 7: return OFPTFPT_APPLY_ACTIONS_MISS;
        case 8: return OFPTFPT_MATCH;
        case 10: return OFPTFPT_WILDCARDS;
        case 12: return OFPTFPT_WRITE_SETFIELD;
        case 13: return OFPTFPT_WRITE_SETFIELD_MISS;
        case 14: return OFPTFPT_APPLY_SETFIELD;
        case 15: return OFPTFPT_APPLY_SETFIELD_MISS;
        case 65534: return OFPTFPT_EXPERIMENTER;
        case 65535: return OFPTFPT_EXPERIMENTER_MISS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_table_feature_prop_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_table_feature_prop_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_table_feature_prop_type>() {
            public ofp_table_feature_prop_type findValueByNumber(int number) {
              return ofp_table_feature_prop_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(48);
    }

    private static final ofp_table_feature_prop_type[] VALUES = values();

    public static ofp_table_feature_prop_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_table_feature_prop_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_table_feature_prop_type)
  }

  /**
   * <pre>
   * Group configuration flags 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_group_capabilities}
   */
  public enum ofp_group_capabilities
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPGFC_INVALID = 0;</code>
     */
    OFPGFC_INVALID(0),
    /**
     * <pre>
     * Support weight for select groups 
     * </pre>
     *
     * <code>OFPGFC_SELECT_WEIGHT = 1;</code>
     */
    OFPGFC_SELECT_WEIGHT(1),
    /**
     * <pre>
     * Support liveness for select groups 
     * </pre>
     *
     * <code>OFPGFC_SELECT_LIVENESS = 2;</code>
     */
    OFPGFC_SELECT_LIVENESS(2),
    /**
     * <pre>
     * Support chaining groups 
     * </pre>
     *
     * <code>OFPGFC_CHAINING = 4;</code>
     */
    OFPGFC_CHAINING(4),
    /**
     * <pre>
     * Check chaining for loops and delete 
     * </pre>
     *
     * <code>OFPGFC_CHAINING_CHECKS = 8;</code>
     */
    OFPGFC_CHAINING_CHECKS(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPGFC_INVALID = 0;</code>
     */
    public static final int OFPGFC_INVALID_VALUE = 0;
    /**
     * <pre>
     * Support weight for select groups 
     * </pre>
     *
     * <code>OFPGFC_SELECT_WEIGHT = 1;</code>
     */
    public static final int OFPGFC_SELECT_WEIGHT_VALUE = 1;
    /**
     * <pre>
     * Support liveness for select groups 
     * </pre>
     *
     * <code>OFPGFC_SELECT_LIVENESS = 2;</code>
     */
    public static final int OFPGFC_SELECT_LIVENESS_VALUE = 2;
    /**
     * <pre>
     * Support chaining groups 
     * </pre>
     *
     * <code>OFPGFC_CHAINING = 4;</code>
     */
    public static final int OFPGFC_CHAINING_VALUE = 4;
    /**
     * <pre>
     * Check chaining for loops and delete 
     * </pre>
     *
     * <code>OFPGFC_CHAINING_CHECKS = 8;</code>
     */
    public static final int OFPGFC_CHAINING_CHECKS_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_group_capabilities valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_group_capabilities forNumber(int value) {
      switch (value) {
        case 0: return OFPGFC_INVALID;
        case 1: return OFPGFC_SELECT_WEIGHT;
        case 2: return OFPGFC_SELECT_LIVENESS;
        case 4: return OFPGFC_CHAINING;
        case 8: return OFPGFC_CHAINING_CHECKS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_group_capabilities>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_group_capabilities> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_group_capabilities>() {
            public ofp_group_capabilities findValueByNumber(int number) {
              return ofp_group_capabilities.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(49);
    }

    private static final ofp_group_capabilities[] VALUES = values();

    public static ofp_group_capabilities valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_group_capabilities(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_group_capabilities)
  }

  /**
   * Protobuf enum {@code openflow_13.ofp_queue_properties}
   */
  public enum ofp_queue_properties
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFPQT_INVALID = 0;</code>
     */
    OFPQT_INVALID(0),
    /**
     * <pre>
     * Minimum datarate guaranteed. 
     * </pre>
     *
     * <code>OFPQT_MIN_RATE = 1;</code>
     */
    OFPQT_MIN_RATE(1),
    /**
     * <pre>
     * Maximum datarate. 
     * </pre>
     *
     * <code>OFPQT_MAX_RATE = 2;</code>
     */
    OFPQT_MAX_RATE(2),
    /**
     * <pre>
     * Experimenter defined property. 
     * </pre>
     *
     * <code>OFPQT_EXPERIMENTER = 65535;</code>
     */
    OFPQT_EXPERIMENTER(65535),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFPQT_INVALID = 0;</code>
     */
    public static final int OFPQT_INVALID_VALUE = 0;
    /**
     * <pre>
     * Minimum datarate guaranteed. 
     * </pre>
     *
     * <code>OFPQT_MIN_RATE = 1;</code>
     */
    public static final int OFPQT_MIN_RATE_VALUE = 1;
    /**
     * <pre>
     * Maximum datarate. 
     * </pre>
     *
     * <code>OFPQT_MAX_RATE = 2;</code>
     */
    public static final int OFPQT_MAX_RATE_VALUE = 2;
    /**
     * <pre>
     * Experimenter defined property. 
     * </pre>
     *
     * <code>OFPQT_EXPERIMENTER = 65535;</code>
     */
    public static final int OFPQT_EXPERIMENTER_VALUE = 65535;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_queue_properties valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_queue_properties forNumber(int value) {
      switch (value) {
        case 0: return OFPQT_INVALID;
        case 1: return OFPQT_MIN_RATE;
        case 2: return OFPQT_MAX_RATE;
        case 65535: return OFPQT_EXPERIMENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_queue_properties>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_queue_properties> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_queue_properties>() {
            public ofp_queue_properties findValueByNumber(int number) {
              return ofp_queue_properties.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(50);
    }

    private static final ofp_queue_properties[] VALUES = values();

    public static ofp_queue_properties valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_queue_properties(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_queue_properties)
  }

  /**
   * <pre>
   * Controller roles. 
   * </pre>
   *
   * Protobuf enum {@code openflow_13.ofp_controller_role}
   */
  public enum ofp_controller_role
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Don't change current role. 
     * </pre>
     *
     * <code>OFPCR_ROLE_NOCHANGE = 0;</code>
     */
    OFPCR_ROLE_NOCHANGE(0),
    /**
     * <pre>
     * Default role, full access. 
     * </pre>
     *
     * <code>OFPCR_ROLE_EQUAL = 1;</code>
     */
    OFPCR_ROLE_EQUAL(1),
    /**
     * <pre>
     * Full access, at most one master. 
     * </pre>
     *
     * <code>OFPCR_ROLE_MASTER = 2;</code>
     */
    OFPCR_ROLE_MASTER(2),
    /**
     * <pre>
     * Read-only access. 
     * </pre>
     *
     * <code>OFPCR_ROLE_SLAVE = 3;</code>
     */
    OFPCR_ROLE_SLAVE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Don't change current role. 
     * </pre>
     *
     * <code>OFPCR_ROLE_NOCHANGE = 0;</code>
     */
    public static final int OFPCR_ROLE_NOCHANGE_VALUE = 0;
    /**
     * <pre>
     * Default role, full access. 
     * </pre>
     *
     * <code>OFPCR_ROLE_EQUAL = 1;</code>
     */
    public static final int OFPCR_ROLE_EQUAL_VALUE = 1;
    /**
     * <pre>
     * Full access, at most one master. 
     * </pre>
     *
     * <code>OFPCR_ROLE_MASTER = 2;</code>
     */
    public static final int OFPCR_ROLE_MASTER_VALUE = 2;
    /**
     * <pre>
     * Read-only access. 
     * </pre>
     *
     * <code>OFPCR_ROLE_SLAVE = 3;</code>
     */
    public static final int OFPCR_ROLE_SLAVE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ofp_controller_role valueOf(int value) {
      return forNumber(value);
    }

    public static ofp_controller_role forNumber(int value) {
      switch (value) {
        case 0: return OFPCR_ROLE_NOCHANGE;
        case 1: return OFPCR_ROLE_EQUAL;
        case 2: return OFPCR_ROLE_MASTER;
        case 3: return OFPCR_ROLE_SLAVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ofp_controller_role>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ofp_controller_role> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ofp_controller_role>() {
            public ofp_controller_role findValueByNumber(int number) {
              return ofp_controller_role.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.getDescriptor().getEnumTypes().get(51);
    }

    private static final ofp_controller_role[] VALUES = values();

    public static ofp_controller_role valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ofp_controller_role(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:openflow_13.ofp_controller_role)
  }

  public interface ofp_headerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * OFP_VERSION. 
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     */
    int getVersion();

    /**
     * <pre>
     * One of the OFPT_ constants. 
     * </pre>
     *
     * <code>.openflow_13.ofp_type type = 2;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of the OFPT_ constants. 
     * </pre>
     *
     * <code>.openflow_13.ofp_type type = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_type getType();

    /**
     * <pre>
     * Transaction id associated with this packet.
     *Replies use the same id as was in the request
     *to facilitate pairing. 
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    int getXid();
  }
  /**
   * <pre>
   * Header on all OpenFlow packets. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_header}
   */
  public  static final class ofp_header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_header)
      ofp_headerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_header.newBuilder() to construct.
    private ofp_header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_header() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              version_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 24: {

              xid_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * OFP_VERSION. 
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     * One of the OFPT_ constants. 
     * </pre>
     *
     * <code>.openflow_13.ofp_type type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of the OFPT_ constants. 
     * </pre>
     *
     * <code>.openflow_13.ofp_type type = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_type result = org.opencord.voltha.openflow13.Openflow13.ofp_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_type.UNRECOGNIZED : result;
    }

    public static final int XID_FIELD_NUMBER = 3;
    private int xid_;
    /**
     * <pre>
     * Transaction id associated with this packet.
     *Replies use the same id as was in the request
     *to facilitate pairing. 
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    public int getXid() {
      return xid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeUInt32(1, version_);
      }
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_type.OFPT_HELLO.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (xid_ != 0) {
        output.writeUInt32(3, xid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_type.OFPT_HELLO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (xid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, xid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_header)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_header other = (org.opencord.voltha.openflow13.Openflow13.ofp_header) obj;

      if (getVersion()
          != other.getVersion()) return false;
      if (type_ != other.type_) return false;
      if (getXid()
          != other.getXid()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + XID_FIELD_NUMBER;
      hash = (53 * hash) + getXid();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Header on all OpenFlow packets. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_header)
        org.opencord.voltha.openflow13.Openflow13.ofp_headerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = 0;

        type_ = 0;

        xid_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_header_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_header getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_header.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_header build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_header buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_header result = new org.opencord.voltha.openflow13.Openflow13.ofp_header(this);
        result.version_ = version_;
        result.type_ = type_;
        result.xid_ = xid_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_header) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_header other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_header.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getXid() != 0) {
          setXid(other.getXid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int version_ ;
      /**
       * <pre>
       * OFP_VERSION. 
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * OFP_VERSION. 
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OFP_VERSION. 
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * One of the OFPT_ constants. 
       * </pre>
       *
       * <code>.openflow_13.ofp_type type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of the OFPT_ constants. 
       * </pre>
       *
       * <code>.openflow_13.ofp_type type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of the OFPT_ constants. 
       * </pre>
       *
       * <code>.openflow_13.ofp_type type = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_type result = org.opencord.voltha.openflow13.Openflow13.ofp_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of the OFPT_ constants. 
       * </pre>
       *
       * <code>.openflow_13.ofp_type type = 2;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of the OFPT_ constants. 
       * </pre>
       *
       * <code>.openflow_13.ofp_type type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int xid_ ;
      /**
       * <pre>
       * Transaction id associated with this packet.
       *Replies use the same id as was in the request
       *to facilitate pairing. 
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public int getXid() {
        return xid_;
      }
      /**
       * <pre>
       * Transaction id associated with this packet.
       *Replies use the same id as was in the request
       *to facilitate pairing. 
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder setXid(int value) {
        
        xid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction id associated with this packet.
       *Replies use the same id as was in the request
       *to facilitate pairing. 
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder clearXid() {
        
        xid_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_header)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_header)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_header();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_header>
        PARSER = new com.google.protobuf.AbstractParser<ofp_header>() {
      @java.lang.Override
      public ofp_header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_hello_elem_headerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_hello_elem_header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPHET_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of OFPHET_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type getType();

    /**
     * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
     */
    boolean hasVersionbitmap();
    /**
     * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap getVersionbitmap();
    /**
     * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmapOrBuilder getVersionbitmapOrBuilder();

    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.ElementCase getElementCase();
  }
  /**
   * <pre>
   * Common header for all Hello Elements 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_hello_elem_header}
   */
  public  static final class ofp_hello_elem_header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_hello_elem_header)
      ofp_hello_elem_headerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_hello_elem_header.newBuilder() to construct.
    private ofp_hello_elem_header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_hello_elem_header() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_hello_elem_header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_hello_elem_header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder subBuilder = null;
              if (elementCase_ == 2) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_).toBuilder();
              }
              element_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_);
                element_ = subBuilder.buildPartial();
              }
              elementCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder.class);
    }

    private int elementCase_ = 0;
    private java.lang.Object element_;
    public enum ElementCase
        implements com.google.protobuf.Internal.EnumLite {
      VERSIONBITMAP(2),
      ELEMENT_NOT_SET(0);
      private final int value;
      private ElementCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ElementCase valueOf(int value) {
        return forNumber(value);
      }

      public static ElementCase forNumber(int value) {
        switch (value) {
          case 2: return VERSIONBITMAP;
          case 0: return ELEMENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ElementCase
    getElementCase() {
      return ElementCase.forNumber(
          elementCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * One of OFPHET_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of OFPHET_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type result = org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type.UNRECOGNIZED : result;
    }

    public static final int VERSIONBITMAP_FIELD_NUMBER = 2;
    /**
     * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
     */
    public boolean hasVersionbitmap() {
      return elementCase_ == 2;
    }
    /**
     * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap getVersionbitmap() {
      if (elementCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmapOrBuilder getVersionbitmapOrBuilder() {
      if (elementCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type.OFPHET_INVALID.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (elementCase_ == 2) {
        output.writeMessage(2, (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type.OFPHET_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (elementCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header other = (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header) obj;

      if (type_ != other.type_) return false;
      if (!getElementCase().equals(other.getElementCase())) return false;
      switch (elementCase_) {
        case 2:
          if (!getVersionbitmap()
              .equals(other.getVersionbitmap())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      switch (elementCase_) {
        case 2:
          hash = (37 * hash) + VERSIONBITMAP_FIELD_NUMBER;
          hash = (53 * hash) + getVersionbitmap().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Common header for all Hello Elements 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_hello_elem_header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_hello_elem_header)
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        elementCase_ = 0;
        element_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_header_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header result = new org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header(this);
        result.type_ = type_;
        if (elementCase_ == 2) {
          if (versionbitmapBuilder_ == null) {
            result.element_ = element_;
          } else {
            result.element_ = versionbitmapBuilder_.build();
          }
        }
        result.elementCase_ = elementCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        switch (other.getElementCase()) {
          case VERSIONBITMAP: {
            mergeVersionbitmap(other.getVersionbitmap());
            break;
          }
          case ELEMENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int elementCase_ = 0;
      private java.lang.Object element_;
      public ElementCase
          getElementCase() {
        return ElementCase.forNumber(
            elementCase_);
      }

      public Builder clearElement() {
        elementCase_ = 0;
        element_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * One of OFPHET_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of OFPHET_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPHET_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type result = org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPHET_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPHET_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_hello_elem_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmapOrBuilder> versionbitmapBuilder_;
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public boolean hasVersionbitmap() {
        return elementCase_ == 2;
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap getVersionbitmap() {
        if (versionbitmapBuilder_ == null) {
          if (elementCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance();
        } else {
          if (elementCase_ == 2) {
            return versionbitmapBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public Builder setVersionbitmap(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap value) {
        if (versionbitmapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          element_ = value;
          onChanged();
        } else {
          versionbitmapBuilder_.setMessage(value);
        }
        elementCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public Builder setVersionbitmap(
          org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder builderForValue) {
        if (versionbitmapBuilder_ == null) {
          element_ = builderForValue.build();
          onChanged();
        } else {
          versionbitmapBuilder_.setMessage(builderForValue.build());
        }
        elementCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public Builder mergeVersionbitmap(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap value) {
        if (versionbitmapBuilder_ == null) {
          if (elementCase_ == 2 &&
              element_ != org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance()) {
            element_ = org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_)
                .mergeFrom(value).buildPartial();
          } else {
            element_ = value;
          }
          onChanged();
        } else {
          if (elementCase_ == 2) {
            versionbitmapBuilder_.mergeFrom(value);
          }
          versionbitmapBuilder_.setMessage(value);
        }
        elementCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public Builder clearVersionbitmap() {
        if (versionbitmapBuilder_ == null) {
          if (elementCase_ == 2) {
            elementCase_ = 0;
            element_ = null;
            onChanged();
          }
        } else {
          if (elementCase_ == 2) {
            elementCase_ = 0;
            element_ = null;
          }
          versionbitmapBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder getVersionbitmapBuilder() {
        return getVersionbitmapFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmapOrBuilder getVersionbitmapOrBuilder() {
        if ((elementCase_ == 2) && (versionbitmapBuilder_ != null)) {
          return versionbitmapBuilder_.getMessageOrBuilder();
        } else {
          if (elementCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_hello_elem_versionbitmap versionbitmap = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmapOrBuilder> 
          getVersionbitmapFieldBuilder() {
        if (versionbitmapBuilder_ == null) {
          if (!(elementCase_ == 2)) {
            element_ = org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance();
          }
          versionbitmapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmapOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) element_,
                  getParentForChildren(),
                  isClean());
          element_ = null;
        }
        elementCase_ = 2;
        onChanged();;
        return versionbitmapBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_hello_elem_header)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_hello_elem_header)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_hello_elem_header>
        PARSER = new com.google.protobuf.AbstractParser<ofp_hello_elem_header>() {
      @java.lang.Override
      public ofp_hello_elem_header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_hello_elem_header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_hello_elem_header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_hello_elem_header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_hello_elem_versionbitmapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_hello_elem_versionbitmap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of bitmaps - supported versions 
     * </pre>
     *
     * <code>repeated uint32 bitmaps = 2;</code>
     */
    java.util.List<java.lang.Integer> getBitmapsList();
    /**
     * <pre>
     * List of bitmaps - supported versions 
     * </pre>
     *
     * <code>repeated uint32 bitmaps = 2;</code>
     */
    int getBitmapsCount();
    /**
     * <pre>
     * List of bitmaps - supported versions 
     * </pre>
     *
     * <code>repeated uint32 bitmaps = 2;</code>
     */
    int getBitmaps(int index);
  }
  /**
   * <pre>
   * Version bitmap Hello Element 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_hello_elem_versionbitmap}
   */
  public  static final class ofp_hello_elem_versionbitmap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_hello_elem_versionbitmap)
      ofp_hello_elem_versionbitmapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_hello_elem_versionbitmap.newBuilder() to construct.
    private ofp_hello_elem_versionbitmap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_hello_elem_versionbitmap() {
      bitmaps_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_hello_elem_versionbitmap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_hello_elem_versionbitmap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                bitmaps_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              bitmaps_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                bitmaps_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                bitmaps_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          bitmaps_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_versionbitmap_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_versionbitmap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.class, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder.class);
    }

    public static final int BITMAPS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList bitmaps_;
    /**
     * <pre>
     * List of bitmaps - supported versions 
     * </pre>
     *
     * <code>repeated uint32 bitmaps = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getBitmapsList() {
      return bitmaps_;
    }
    /**
     * <pre>
     * List of bitmaps - supported versions 
     * </pre>
     *
     * <code>repeated uint32 bitmaps = 2;</code>
     */
    public int getBitmapsCount() {
      return bitmaps_.size();
    }
    /**
     * <pre>
     * List of bitmaps - supported versions 
     * </pre>
     *
     * <code>repeated uint32 bitmaps = 2;</code>
     */
    public int getBitmaps(int index) {
      return bitmaps_.getInt(index);
    }
    private int bitmapsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getBitmapsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(bitmapsMemoizedSerializedSize);
      }
      for (int i = 0; i < bitmaps_.size(); i++) {
        output.writeUInt32NoTag(bitmaps_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < bitmaps_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(bitmaps_.getInt(i));
        }
        size += dataSize;
        if (!getBitmapsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        bitmapsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap other = (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) obj;

      if (!getBitmapsList()
          .equals(other.getBitmapsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBitmapsCount() > 0) {
        hash = (37 * hash) + BITMAPS_FIELD_NUMBER;
        hash = (53 * hash) + getBitmapsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Version bitmap Hello Element 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_hello_elem_versionbitmap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_hello_elem_versionbitmap)
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_versionbitmap_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_versionbitmap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.class, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitmaps_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_elem_versionbitmap_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap result = new org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          bitmaps_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.bitmaps_ = bitmaps_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap.getDefaultInstance()) return this;
        if (!other.bitmaps_.isEmpty()) {
          if (bitmaps_.isEmpty()) {
            bitmaps_ = other.bitmaps_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBitmapsIsMutable();
            bitmaps_.addAll(other.bitmaps_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList bitmaps_ = emptyIntList();
      private void ensureBitmapsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          bitmaps_ = mutableCopy(bitmaps_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * List of bitmaps - supported versions 
       * </pre>
       *
       * <code>repeated uint32 bitmaps = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getBitmapsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(bitmaps_) : bitmaps_;
      }
      /**
       * <pre>
       * List of bitmaps - supported versions 
       * </pre>
       *
       * <code>repeated uint32 bitmaps = 2;</code>
       */
      public int getBitmapsCount() {
        return bitmaps_.size();
      }
      /**
       * <pre>
       * List of bitmaps - supported versions 
       * </pre>
       *
       * <code>repeated uint32 bitmaps = 2;</code>
       */
      public int getBitmaps(int index) {
        return bitmaps_.getInt(index);
      }
      /**
       * <pre>
       * List of bitmaps - supported versions 
       * </pre>
       *
       * <code>repeated uint32 bitmaps = 2;</code>
       */
      public Builder setBitmaps(
          int index, int value) {
        ensureBitmapsIsMutable();
        bitmaps_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of bitmaps - supported versions 
       * </pre>
       *
       * <code>repeated uint32 bitmaps = 2;</code>
       */
      public Builder addBitmaps(int value) {
        ensureBitmapsIsMutable();
        bitmaps_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of bitmaps - supported versions 
       * </pre>
       *
       * <code>repeated uint32 bitmaps = 2;</code>
       */
      public Builder addAllBitmaps(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBitmapsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bitmaps_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of bitmaps - supported versions 
       * </pre>
       *
       * <code>repeated uint32 bitmaps = 2;</code>
       */
      public Builder clearBitmaps() {
        bitmaps_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_hello_elem_versionbitmap)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_hello_elem_versionbitmap)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_hello_elem_versionbitmap>
        PARSER = new com.google.protobuf.AbstractParser<ofp_hello_elem_versionbitmap>() {
      @java.lang.Override
      public ofp_hello_elem_versionbitmap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_hello_elem_versionbitmap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_hello_elem_versionbitmap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_hello_elem_versionbitmap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_versionbitmap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_helloOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_hello)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header> 
        getElementsList();
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header getElements(int index);
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    int getElementsCount();
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder> 
        getElementsOrBuilderList();
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder getElementsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * OFPT_HELLO.  This message includes zero or more hello elements having
   * variable size. Unknown elements types must be ignored/skipped, to allow
   * for future extensions. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_hello}
   */
  public  static final class ofp_hello extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_hello)
      ofp_helloOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_hello.newBuilder() to construct.
    private ofp_hello(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_hello() {
      elements_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_hello();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_hello(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                elements_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header>();
                mutable_bitField0_ |= 0x00000001;
              }
              elements_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          elements_ = java.util.Collections.unmodifiableList(elements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_hello.class, org.opencord.voltha.openflow13.Openflow13.ofp_hello.Builder.class);
    }

    public static final int ELEMENTS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header> elements_;
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header> getElementsList() {
      return elements_;
    }
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder> 
        getElementsOrBuilderList() {
      return elements_;
    }
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    public int getElementsCount() {
      return elements_.size();
    }
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header getElements(int index) {
      return elements_.get(index);
    }
    /**
     * <pre>
     * Hello element list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder getElementsOrBuilder(
        int index) {
      return elements_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < elements_.size(); i++) {
        output.writeMessage(1, elements_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < elements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, elements_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_hello)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_hello other = (org.opencord.voltha.openflow13.Openflow13.ofp_hello) obj;

      if (!getElementsList()
          .equals(other.getElementsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getElementsCount() > 0) {
        hash = (37 * hash) + ELEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getElementsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_hello prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OFPT_HELLO.  This message includes zero or more hello elements having
     * variable size. Unknown elements types must be ignored/skipped, to allow
     * for future extensions. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_hello}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_hello)
        org.opencord.voltha.openflow13.Openflow13.ofp_helloOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_hello.class, org.opencord.voltha.openflow13.Openflow13.ofp_hello.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_hello.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getElementsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (elementsBuilder_ == null) {
          elements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          elementsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_hello_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_hello.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello result = new org.opencord.voltha.openflow13.Openflow13.ofp_hello(this);
        int from_bitField0_ = bitField0_;
        if (elementsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            elements_ = java.util.Collections.unmodifiableList(elements_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.elements_ = elements_;
        } else {
          result.elements_ = elementsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_hello) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_hello)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_hello other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_hello.getDefaultInstance()) return this;
        if (elementsBuilder_ == null) {
          if (!other.elements_.isEmpty()) {
            if (elements_.isEmpty()) {
              elements_ = other.elements_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureElementsIsMutable();
              elements_.addAll(other.elements_);
            }
            onChanged();
          }
        } else {
          if (!other.elements_.isEmpty()) {
            if (elementsBuilder_.isEmpty()) {
              elementsBuilder_.dispose();
              elementsBuilder_ = null;
              elements_ = other.elements_;
              bitField0_ = (bitField0_ & ~0x00000001);
              elementsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getElementsFieldBuilder() : null;
            } else {
              elementsBuilder_.addAllMessages(other.elements_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_hello parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_hello) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header> elements_ =
        java.util.Collections.emptyList();
      private void ensureElementsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          elements_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header>(elements_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder> elementsBuilder_;

      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header> getElementsList() {
        if (elementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(elements_);
        } else {
          return elementsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public int getElementsCount() {
        if (elementsBuilder_ == null) {
          return elements_.size();
        } else {
          return elementsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header getElements(int index) {
        if (elementsBuilder_ == null) {
          return elements_.get(index);
        } else {
          return elementsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder setElements(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.set(index, value);
          onChanged();
        } else {
          elementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder setElements(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.set(index, builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder addElements(org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.add(value);
          onChanged();
        } else {
          elementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder addElements(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.add(index, value);
          onChanged();
        } else {
          elementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder addElements(
          org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.add(builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder addElements(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.add(index, builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder addAllElements(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header> values) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, elements_);
          onChanged();
        } else {
          elementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder clearElements() {
        if (elementsBuilder_ == null) {
          elements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          elementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public Builder removeElements(int index) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.remove(index);
          onChanged();
        } else {
          elementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder getElementsBuilder(
          int index) {
        return getElementsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder getElementsOrBuilder(
          int index) {
        if (elementsBuilder_ == null) {
          return elements_.get(index);  } else {
          return elementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder> 
           getElementsOrBuilderList() {
        if (elementsBuilder_ != null) {
          return elementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(elements_);
        }
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder addElementsBuilder() {
        return getElementsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.getDefaultInstance());
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder addElementsBuilder(
          int index) {
        return getElementsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.getDefaultInstance());
      }
      /**
       * <pre>
       * Hello element list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_hello_elem_header elements = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder> 
           getElementsBuilderList() {
        return getElementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder> 
          getElementsFieldBuilder() {
        if (elementsBuilder_ == null) {
          elementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_hello_elem_headerOrBuilder>(
                  elements_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          elements_ = null;
        }
        return elementsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_hello)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_hello)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_hello DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_hello();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_hello getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_hello>
        PARSER = new com.google.protobuf.AbstractParser<ofp_hello>() {
      @java.lang.Override
      public ofp_hello parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_hello(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_hello> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_hello> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_hello getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_switch_configOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_switch_config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 flags = 1;</code>
     */
    int getFlags();

    /**
     * <pre>
     * Max bytes of packet that datapath
     *should send to the controller. See
     *ofp_controller_max_len for valid values.
     * </pre>
     *
     * <code>uint32 miss_send_len = 2;</code>
     */
    int getMissSendLen();
  }
  /**
   * <pre>
   * Switch configuration. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_switch_config}
   */
  public  static final class ofp_switch_config extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_switch_config)
      ofp_switch_configOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_switch_config.newBuilder() to construct.
    private ofp_switch_config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_switch_config() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_switch_config();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_switch_config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              flags_ = input.readUInt32();
              break;
            }
            case 16: {

              missSendLen_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_switch_config.class, org.opencord.voltha.openflow13.Openflow13.ofp_switch_config.Builder.class);
    }

    public static final int FLAGS_FIELD_NUMBER = 1;
    private int flags_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 flags = 1;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int MISS_SEND_LEN_FIELD_NUMBER = 2;
    private int missSendLen_;
    /**
     * <pre>
     * Max bytes of packet that datapath
     *should send to the controller. See
     *ofp_controller_max_len for valid values.
     * </pre>
     *
     * <code>uint32 miss_send_len = 2;</code>
     */
    public int getMissSendLen() {
      return missSendLen_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (flags_ != 0) {
        output.writeUInt32(1, flags_);
      }
      if (missSendLen_ != 0) {
        output.writeUInt32(2, missSendLen_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (flags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, flags_);
      }
      if (missSendLen_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, missSendLen_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_switch_config)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_switch_config other = (org.opencord.voltha.openflow13.Openflow13.ofp_switch_config) obj;

      if (getFlags()
          != other.getFlags()) return false;
      if (getMissSendLen()
          != other.getMissSendLen()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags();
      hash = (37 * hash) + MISS_SEND_LEN_FIELD_NUMBER;
      hash = (53 * hash) + getMissSendLen();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_switch_config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Switch configuration. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_switch_config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_switch_config)
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_configOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_config_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_switch_config.class, org.opencord.voltha.openflow13.Openflow13.ofp_switch_config.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_switch_config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        flags_ = 0;

        missSendLen_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_config_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_config getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_switch_config.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_config build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_config buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_config result = new org.opencord.voltha.openflow13.Openflow13.ofp_switch_config(this);
        result.flags_ = flags_;
        result.missSendLen_ = missSendLen_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_switch_config) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_switch_config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_switch_config other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_switch_config.getDefaultInstance()) return this;
        if (other.getFlags() != 0) {
          setFlags(other.getFlags());
        }
        if (other.getMissSendLen() != 0) {
          setMissSendLen(other.getMissSendLen());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_switch_config) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int flags_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 flags = 1;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 flags = 1;</code>
       */
      public Builder setFlags(int value) {
        
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 flags = 1;</code>
       */
      public Builder clearFlags() {
        
        flags_ = 0;
        onChanged();
        return this;
      }

      private int missSendLen_ ;
      /**
       * <pre>
       * Max bytes of packet that datapath
       *should send to the controller. See
       *ofp_controller_max_len for valid values.
       * </pre>
       *
       * <code>uint32 miss_send_len = 2;</code>
       */
      public int getMissSendLen() {
        return missSendLen_;
      }
      /**
       * <pre>
       * Max bytes of packet that datapath
       *should send to the controller. See
       *ofp_controller_max_len for valid values.
       * </pre>
       *
       * <code>uint32 miss_send_len = 2;</code>
       */
      public Builder setMissSendLen(int value) {
        
        missSendLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max bytes of packet that datapath
       *should send to the controller. See
       *ofp_controller_max_len for valid values.
       * </pre>
       *
       * <code>uint32 miss_send_len = 2;</code>
       */
      public Builder clearMissSendLen() {
        
        missSendLen_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_switch_config)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_switch_config)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_switch_config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_switch_config();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_switch_config>
        PARSER = new com.google.protobuf.AbstractParser<ofp_switch_config>() {
      @java.lang.Override
      public ofp_switch_config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_switch_config(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_switch_config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_switch_config> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_switch_config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_modOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_mod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    int getTableId();

    /**
     * <pre>
     * Bitmap of OFPTC_* flags 
     * </pre>
     *
     * <code>uint32 config = 2;</code>
     */
    int getConfig();
  }
  /**
   * <pre>
   * Configure/Modify behavior of a flow table 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_mod}
   */
  public  static final class ofp_table_mod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_mod)
      ofp_table_modOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_mod.newBuilder() to construct.
    private ofp_table_mod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_mod() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_mod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_mod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readUInt32();
              break;
            }
            case 16: {

              config_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_mod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_mod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_mod.Builder.class);
    }

    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private int config_;
    /**
     * <pre>
     * Bitmap of OFPTC_* flags 
     * </pre>
     *
     * <code>uint32 config = 2;</code>
     */
    public int getConfig() {
      return config_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeUInt32(1, tableId_);
      }
      if (config_ != 0) {
        output.writeUInt32(2, config_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      if (config_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, config_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_mod)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_mod other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_mod) obj;

      if (getTableId()
          != other.getTableId()) return false;
      if (getConfig()
          != other.getConfig()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConfig();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_mod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configure/Modify behavior of a flow table 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_mod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_mod)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_modOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_mod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_mod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_mod.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_mod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableId_ = 0;

        config_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_mod_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_mod getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_mod.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_mod build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_mod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_mod buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_mod result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_mod(this);
        result.tableId_ = tableId_;
        result.config_ = config_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_mod) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_mod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_mod other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_mod.getDefaultInstance()) return this;
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.getConfig() != 0) {
          setConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_mod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_mod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int config_ ;
      /**
       * <pre>
       * Bitmap of OFPTC_* flags 
       * </pre>
       *
       * <code>uint32 config = 2;</code>
       */
      public int getConfig() {
        return config_;
      }
      /**
       * <pre>
       * Bitmap of OFPTC_* flags 
       * </pre>
       *
       * <code>uint32 config = 2;</code>
       */
      public Builder setConfig(int value) {
        
        config_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPTC_* flags 
       * </pre>
       *
       * <code>uint32 config = 2;</code>
       */
      public Builder clearConfig() {
        
        config_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_mod)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_mod)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_mod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_mod();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_mod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_mod>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_mod>() {
      @java.lang.Override
      public ofp_table_mod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_mod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_mod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_mod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_mod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_portOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_port)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 port_no = 1;</code>
     */
    int getPortNo();

    /**
     * <pre>
     * [OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    java.util.List<java.lang.Integer> getHwAddrList();
    /**
     * <pre>
     * [OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    int getHwAddrCount();
    /**
     * <pre>
     * [OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    int getHwAddr(int index);

    /**
     * <pre>
     * Null-terminated 
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Null-terminated 
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Bitmap of OFPPC_* flags. 
     * </pre>
     *
     * <code>uint32 config = 4;</code>
     */
    int getConfig();

    /**
     * <pre>
     * Bitmap of OFPPS_* flags. 
     * </pre>
     *
     * <code>uint32 state = 5;</code>
     */
    int getState();

    /**
     * <pre>
     * Bitmaps of OFPPF_* that describe features.  All bits zeroed if
     * unsupported or unavailable. 
     * </pre>
     *
     * <code>uint32 curr = 6;</code>
     */
    int getCurr();

    /**
     * <pre>
     * Features being advertised by the port. 
     * </pre>
     *
     * <code>uint32 advertised = 7;</code>
     */
    int getAdvertised();

    /**
     * <pre>
     * Features supported by the port. 
     * </pre>
     *
     * <code>uint32 supported = 8;</code>
     */
    int getSupported();

    /**
     * <pre>
     * Features advertised by peer. 
     * </pre>
     *
     * <code>uint32 peer = 9;</code>
     */
    int getPeer();

    /**
     * <pre>
     * Current port bitrate in kbps. 
     * </pre>
     *
     * <code>uint32 curr_speed = 10;</code>
     */
    int getCurrSpeed();

    /**
     * <pre>
     * Max port bitrate in kbps 
     * </pre>
     *
     * <code>uint32 max_speed = 11;</code>
     */
    int getMaxSpeed();
  }
  /**
   * <pre>
   * Description of a port 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_port}
   */
  public  static final class ofp_port extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_port)
      ofp_portOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_port.newBuilder() to construct.
    private ofp_port(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_port() {
      hwAddr_ = emptyIntList();
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_port();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_port(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              portNo_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                hwAddr_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              hwAddr_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                hwAddr_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                hwAddr_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 32: {

              config_ = input.readUInt32();
              break;
            }
            case 40: {

              state_ = input.readUInt32();
              break;
            }
            case 48: {

              curr_ = input.readUInt32();
              break;
            }
            case 56: {

              advertised_ = input.readUInt32();
              break;
            }
            case 64: {

              supported_ = input.readUInt32();
              break;
            }
            case 72: {

              peer_ = input.readUInt32();
              break;
            }
            case 80: {

              currSpeed_ = input.readUInt32();
              break;
            }
            case 88: {

              maxSpeed_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          hwAddr_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_port.class, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder.class);
    }

    public static final int PORT_NO_FIELD_NUMBER = 1;
    private int portNo_;
    /**
     * <code>uint32 port_no = 1;</code>
     */
    public int getPortNo() {
      return portNo_;
    }

    public static final int HW_ADDR_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList hwAddr_;
    /**
     * <pre>
     * [OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getHwAddrList() {
      return hwAddr_;
    }
    /**
     * <pre>
     * [OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    public int getHwAddrCount() {
      return hwAddr_.size();
    }
    /**
     * <pre>
     * [OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    public int getHwAddr(int index) {
      return hwAddr_.getInt(index);
    }
    private int hwAddrMemoizedSerializedSize = -1;

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Null-terminated 
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Null-terminated 
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIG_FIELD_NUMBER = 4;
    private int config_;
    /**
     * <pre>
     * Bitmap of OFPPC_* flags. 
     * </pre>
     *
     * <code>uint32 config = 4;</code>
     */
    public int getConfig() {
      return config_;
    }

    public static final int STATE_FIELD_NUMBER = 5;
    private int state_;
    /**
     * <pre>
     * Bitmap of OFPPS_* flags. 
     * </pre>
     *
     * <code>uint32 state = 5;</code>
     */
    public int getState() {
      return state_;
    }

    public static final int CURR_FIELD_NUMBER = 6;
    private int curr_;
    /**
     * <pre>
     * Bitmaps of OFPPF_* that describe features.  All bits zeroed if
     * unsupported or unavailable. 
     * </pre>
     *
     * <code>uint32 curr = 6;</code>
     */
    public int getCurr() {
      return curr_;
    }

    public static final int ADVERTISED_FIELD_NUMBER = 7;
    private int advertised_;
    /**
     * <pre>
     * Features being advertised by the port. 
     * </pre>
     *
     * <code>uint32 advertised = 7;</code>
     */
    public int getAdvertised() {
      return advertised_;
    }

    public static final int SUPPORTED_FIELD_NUMBER = 8;
    private int supported_;
    /**
     * <pre>
     * Features supported by the port. 
     * </pre>
     *
     * <code>uint32 supported = 8;</code>
     */
    public int getSupported() {
      return supported_;
    }

    public static final int PEER_FIELD_NUMBER = 9;
    private int peer_;
    /**
     * <pre>
     * Features advertised by peer. 
     * </pre>
     *
     * <code>uint32 peer = 9;</code>
     */
    public int getPeer() {
      return peer_;
    }

    public static final int CURR_SPEED_FIELD_NUMBER = 10;
    private int currSpeed_;
    /**
     * <pre>
     * Current port bitrate in kbps. 
     * </pre>
     *
     * <code>uint32 curr_speed = 10;</code>
     */
    public int getCurrSpeed() {
      return currSpeed_;
    }

    public static final int MAX_SPEED_FIELD_NUMBER = 11;
    private int maxSpeed_;
    /**
     * <pre>
     * Max port bitrate in kbps 
     * </pre>
     *
     * <code>uint32 max_speed = 11;</code>
     */
    public int getMaxSpeed() {
      return maxSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (portNo_ != 0) {
        output.writeUInt32(1, portNo_);
      }
      if (getHwAddrList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(hwAddrMemoizedSerializedSize);
      }
      for (int i = 0; i < hwAddr_.size(); i++) {
        output.writeUInt32NoTag(hwAddr_.getInt(i));
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (config_ != 0) {
        output.writeUInt32(4, config_);
      }
      if (state_ != 0) {
        output.writeUInt32(5, state_);
      }
      if (curr_ != 0) {
        output.writeUInt32(6, curr_);
      }
      if (advertised_ != 0) {
        output.writeUInt32(7, advertised_);
      }
      if (supported_ != 0) {
        output.writeUInt32(8, supported_);
      }
      if (peer_ != 0) {
        output.writeUInt32(9, peer_);
      }
      if (currSpeed_ != 0) {
        output.writeUInt32(10, currSpeed_);
      }
      if (maxSpeed_ != 0) {
        output.writeUInt32(11, maxSpeed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, portNo_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hwAddr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hwAddr_.getInt(i));
        }
        size += dataSize;
        if (!getHwAddrList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        hwAddrMemoizedSerializedSize = dataSize;
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (config_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, config_);
      }
      if (state_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, state_);
      }
      if (curr_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, curr_);
      }
      if (advertised_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, advertised_);
      }
      if (supported_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, supported_);
      }
      if (peer_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, peer_);
      }
      if (currSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, currSpeed_);
      }
      if (maxSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, maxSpeed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_port other = (org.opencord.voltha.openflow13.Openflow13.ofp_port) obj;

      if (getPortNo()
          != other.getPortNo()) return false;
      if (!getHwAddrList()
          .equals(other.getHwAddrList())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getConfig()
          != other.getConfig()) return false;
      if (getState()
          != other.getState()) return false;
      if (getCurr()
          != other.getCurr()) return false;
      if (getAdvertised()
          != other.getAdvertised()) return false;
      if (getSupported()
          != other.getSupported()) return false;
      if (getPeer()
          != other.getPeer()) return false;
      if (getCurrSpeed()
          != other.getCurrSpeed()) return false;
      if (getMaxSpeed()
          != other.getMaxSpeed()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_NO_FIELD_NUMBER;
      hash = (53 * hash) + getPortNo();
      if (getHwAddrCount() > 0) {
        hash = (37 * hash) + HW_ADDR_FIELD_NUMBER;
        hash = (53 * hash) + getHwAddrList().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConfig();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState();
      hash = (37 * hash) + CURR_FIELD_NUMBER;
      hash = (53 * hash) + getCurr();
      hash = (37 * hash) + ADVERTISED_FIELD_NUMBER;
      hash = (53 * hash) + getAdvertised();
      hash = (37 * hash) + SUPPORTED_FIELD_NUMBER;
      hash = (53 * hash) + getSupported();
      hash = (37 * hash) + PEER_FIELD_NUMBER;
      hash = (53 * hash) + getPeer();
      hash = (37 * hash) + CURR_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getCurrSpeed();
      hash = (37 * hash) + MAX_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getMaxSpeed();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_port prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Description of a port 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_port}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_port)
        org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_port.class, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_port.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portNo_ = 0;

        hwAddr_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";

        config_ = 0;

        state_ = 0;

        curr_ = 0;

        advertised_ = 0;

        supported_ = 0;

        peer_ = 0;

        currSpeed_ = 0;

        maxSpeed_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port result = new org.opencord.voltha.openflow13.Openflow13.ofp_port(this);
        int from_bitField0_ = bitField0_;
        result.portNo_ = portNo_;
        if (((bitField0_ & 0x00000001) != 0)) {
          hwAddr_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.hwAddr_ = hwAddr_;
        result.name_ = name_;
        result.config_ = config_;
        result.state_ = state_;
        result.curr_ = curr_;
        result.advertised_ = advertised_;
        result.supported_ = supported_;
        result.peer_ = peer_;
        result.currSpeed_ = currSpeed_;
        result.maxSpeed_ = maxSpeed_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_port)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_port other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance()) return this;
        if (other.getPortNo() != 0) {
          setPortNo(other.getPortNo());
        }
        if (!other.hwAddr_.isEmpty()) {
          if (hwAddr_.isEmpty()) {
            hwAddr_ = other.hwAddr_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHwAddrIsMutable();
            hwAddr_.addAll(other.hwAddr_);
          }
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getConfig() != 0) {
          setConfig(other.getConfig());
        }
        if (other.getState() != 0) {
          setState(other.getState());
        }
        if (other.getCurr() != 0) {
          setCurr(other.getCurr());
        }
        if (other.getAdvertised() != 0) {
          setAdvertised(other.getAdvertised());
        }
        if (other.getSupported() != 0) {
          setSupported(other.getSupported());
        }
        if (other.getPeer() != 0) {
          setPeer(other.getPeer());
        }
        if (other.getCurrSpeed() != 0) {
          setCurrSpeed(other.getCurrSpeed());
        }
        if (other.getMaxSpeed() != 0) {
          setMaxSpeed(other.getMaxSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_port parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_port) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int portNo_ ;
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public int getPortNo() {
        return portNo_;
      }
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public Builder setPortNo(int value) {
        
        portNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public Builder clearPortNo() {
        
        portNo_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList hwAddr_ = emptyIntList();
      private void ensureHwAddrIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hwAddr_ = mutableCopy(hwAddr_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * [OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getHwAddrList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(hwAddr_) : hwAddr_;
      }
      /**
       * <pre>
       * [OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public int getHwAddrCount() {
        return hwAddr_.size();
      }
      /**
       * <pre>
       * [OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public int getHwAddr(int index) {
        return hwAddr_.getInt(index);
      }
      /**
       * <pre>
       * [OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder setHwAddr(
          int index, int value) {
        ensureHwAddrIsMutable();
        hwAddr_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder addHwAddr(int value) {
        ensureHwAddrIsMutable();
        hwAddr_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder addAllHwAddr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHwAddrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hwAddr_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder clearHwAddr() {
        hwAddr_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Null-terminated 
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Null-terminated 
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Null-terminated 
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Null-terminated 
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Null-terminated 
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int config_ ;
      /**
       * <pre>
       * Bitmap of OFPPC_* flags. 
       * </pre>
       *
       * <code>uint32 config = 4;</code>
       */
      public int getConfig() {
        return config_;
      }
      /**
       * <pre>
       * Bitmap of OFPPC_* flags. 
       * </pre>
       *
       * <code>uint32 config = 4;</code>
       */
      public Builder setConfig(int value) {
        
        config_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPPC_* flags. 
       * </pre>
       *
       * <code>uint32 config = 4;</code>
       */
      public Builder clearConfig() {
        
        config_ = 0;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <pre>
       * Bitmap of OFPPS_* flags. 
       * </pre>
       *
       * <code>uint32 state = 5;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <pre>
       * Bitmap of OFPPS_* flags. 
       * </pre>
       *
       * <code>uint32 state = 5;</code>
       */
      public Builder setState(int value) {
        
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPPS_* flags. 
       * </pre>
       *
       * <code>uint32 state = 5;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private int curr_ ;
      /**
       * <pre>
       * Bitmaps of OFPPF_* that describe features.  All bits zeroed if
       * unsupported or unavailable. 
       * </pre>
       *
       * <code>uint32 curr = 6;</code>
       */
      public int getCurr() {
        return curr_;
      }
      /**
       * <pre>
       * Bitmaps of OFPPF_* that describe features.  All bits zeroed if
       * unsupported or unavailable. 
       * </pre>
       *
       * <code>uint32 curr = 6;</code>
       */
      public Builder setCurr(int value) {
        
        curr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmaps of OFPPF_* that describe features.  All bits zeroed if
       * unsupported or unavailable. 
       * </pre>
       *
       * <code>uint32 curr = 6;</code>
       */
      public Builder clearCurr() {
        
        curr_ = 0;
        onChanged();
        return this;
      }

      private int advertised_ ;
      /**
       * <pre>
       * Features being advertised by the port. 
       * </pre>
       *
       * <code>uint32 advertised = 7;</code>
       */
      public int getAdvertised() {
        return advertised_;
      }
      /**
       * <pre>
       * Features being advertised by the port. 
       * </pre>
       *
       * <code>uint32 advertised = 7;</code>
       */
      public Builder setAdvertised(int value) {
        
        advertised_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Features being advertised by the port. 
       * </pre>
       *
       * <code>uint32 advertised = 7;</code>
       */
      public Builder clearAdvertised() {
        
        advertised_ = 0;
        onChanged();
        return this;
      }

      private int supported_ ;
      /**
       * <pre>
       * Features supported by the port. 
       * </pre>
       *
       * <code>uint32 supported = 8;</code>
       */
      public int getSupported() {
        return supported_;
      }
      /**
       * <pre>
       * Features supported by the port. 
       * </pre>
       *
       * <code>uint32 supported = 8;</code>
       */
      public Builder setSupported(int value) {
        
        supported_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Features supported by the port. 
       * </pre>
       *
       * <code>uint32 supported = 8;</code>
       */
      public Builder clearSupported() {
        
        supported_ = 0;
        onChanged();
        return this;
      }

      private int peer_ ;
      /**
       * <pre>
       * Features advertised by peer. 
       * </pre>
       *
       * <code>uint32 peer = 9;</code>
       */
      public int getPeer() {
        return peer_;
      }
      /**
       * <pre>
       * Features advertised by peer. 
       * </pre>
       *
       * <code>uint32 peer = 9;</code>
       */
      public Builder setPeer(int value) {
        
        peer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Features advertised by peer. 
       * </pre>
       *
       * <code>uint32 peer = 9;</code>
       */
      public Builder clearPeer() {
        
        peer_ = 0;
        onChanged();
        return this;
      }

      private int currSpeed_ ;
      /**
       * <pre>
       * Current port bitrate in kbps. 
       * </pre>
       *
       * <code>uint32 curr_speed = 10;</code>
       */
      public int getCurrSpeed() {
        return currSpeed_;
      }
      /**
       * <pre>
       * Current port bitrate in kbps. 
       * </pre>
       *
       * <code>uint32 curr_speed = 10;</code>
       */
      public Builder setCurrSpeed(int value) {
        
        currSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Current port bitrate in kbps. 
       * </pre>
       *
       * <code>uint32 curr_speed = 10;</code>
       */
      public Builder clearCurrSpeed() {
        
        currSpeed_ = 0;
        onChanged();
        return this;
      }

      private int maxSpeed_ ;
      /**
       * <pre>
       * Max port bitrate in kbps 
       * </pre>
       *
       * <code>uint32 max_speed = 11;</code>
       */
      public int getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <pre>
       * Max port bitrate in kbps 
       * </pre>
       *
       * <code>uint32 max_speed = 11;</code>
       */
      public Builder setMaxSpeed(int value) {
        
        maxSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max port bitrate in kbps 
       * </pre>
       *
       * <code>uint32 max_speed = 11;</code>
       */
      public Builder clearMaxSpeed() {
        
        maxSpeed_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_port)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_port)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_port DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_port();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_port>
        PARSER = new com.google.protobuf.AbstractParser<ofp_port>() {
      @java.lang.Override
      public ofp_port parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_port(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_port> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_port> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_port getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_switch_featuresOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_switch_features)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint64 datapath_id = 1;</code>
     */
    long getDatapathId();

    /**
     * <pre>
     * Max packets buffered at once. 
     * </pre>
     *
     * <code>uint32 n_buffers = 2;</code>
     */
    int getNBuffers();

    /**
     * <pre>
     * Number of tables supported by datapath. 
     * </pre>
     *
     * <code>uint32 n_tables = 3;</code>
     */
    int getNTables();

    /**
     * <pre>
     * Identify auxiliary connections 
     * </pre>
     *
     * <code>uint32 auxiliary_id = 4;</code>
     */
    int getAuxiliaryId();

    /**
     * <pre>
     * Features. 
     * </pre>
     *
     * <code>uint32 capabilities = 5;</code>
     */
    int getCapabilities();
  }
  /**
   * <pre>
   * Switch features. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_switch_features}
   */
  public  static final class ofp_switch_features extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_switch_features)
      ofp_switch_featuresOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_switch_features.newBuilder() to construct.
    private ofp_switch_features(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_switch_features() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_switch_features();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_switch_features(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              datapathId_ = input.readUInt64();
              break;
            }
            case 16: {

              nBuffers_ = input.readUInt32();
              break;
            }
            case 24: {

              nTables_ = input.readUInt32();
              break;
            }
            case 32: {

              auxiliaryId_ = input.readUInt32();
              break;
            }
            case 40: {

              capabilities_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_features_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_features_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder.class);
    }

    public static final int DATAPATH_ID_FIELD_NUMBER = 1;
    private long datapathId_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint64 datapath_id = 1;</code>
     */
    public long getDatapathId() {
      return datapathId_;
    }

    public static final int N_BUFFERS_FIELD_NUMBER = 2;
    private int nBuffers_;
    /**
     * <pre>
     * Max packets buffered at once. 
     * </pre>
     *
     * <code>uint32 n_buffers = 2;</code>
     */
    public int getNBuffers() {
      return nBuffers_;
    }

    public static final int N_TABLES_FIELD_NUMBER = 3;
    private int nTables_;
    /**
     * <pre>
     * Number of tables supported by datapath. 
     * </pre>
     *
     * <code>uint32 n_tables = 3;</code>
     */
    public int getNTables() {
      return nTables_;
    }

    public static final int AUXILIARY_ID_FIELD_NUMBER = 4;
    private int auxiliaryId_;
    /**
     * <pre>
     * Identify auxiliary connections 
     * </pre>
     *
     * <code>uint32 auxiliary_id = 4;</code>
     */
    public int getAuxiliaryId() {
      return auxiliaryId_;
    }

    public static final int CAPABILITIES_FIELD_NUMBER = 5;
    private int capabilities_;
    /**
     * <pre>
     * Features. 
     * </pre>
     *
     * <code>uint32 capabilities = 5;</code>
     */
    public int getCapabilities() {
      return capabilities_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (datapathId_ != 0L) {
        output.writeUInt64(1, datapathId_);
      }
      if (nBuffers_ != 0) {
        output.writeUInt32(2, nBuffers_);
      }
      if (nTables_ != 0) {
        output.writeUInt32(3, nTables_);
      }
      if (auxiliaryId_ != 0) {
        output.writeUInt32(4, auxiliaryId_);
      }
      if (capabilities_ != 0) {
        output.writeUInt32(5, capabilities_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (datapathId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, datapathId_);
      }
      if (nBuffers_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nBuffers_);
      }
      if (nTables_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, nTables_);
      }
      if (auxiliaryId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, auxiliaryId_);
      }
      if (capabilities_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, capabilities_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_switch_features)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_switch_features other = (org.opencord.voltha.openflow13.Openflow13.ofp_switch_features) obj;

      if (getDatapathId()
          != other.getDatapathId()) return false;
      if (getNBuffers()
          != other.getNBuffers()) return false;
      if (getNTables()
          != other.getNTables()) return false;
      if (getAuxiliaryId()
          != other.getAuxiliaryId()) return false;
      if (getCapabilities()
          != other.getCapabilities()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATAPATH_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDatapathId());
      hash = (37 * hash) + N_BUFFERS_FIELD_NUMBER;
      hash = (53 * hash) + getNBuffers();
      hash = (37 * hash) + N_TABLES_FIELD_NUMBER;
      hash = (53 * hash) + getNTables();
      hash = (37 * hash) + AUXILIARY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAuxiliaryId();
      hash = (37 * hash) + CAPABILITIES_FIELD_NUMBER;
      hash = (53 * hash) + getCapabilities();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_switch_features prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Switch features. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_switch_features}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_switch_features)
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_featuresOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_features_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_features_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        datapathId_ = 0L;

        nBuffers_ = 0;

        nTables_ = 0;

        auxiliaryId_ = 0;

        capabilities_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_switch_features_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_features getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_features build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_features result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_switch_features buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_features result = new org.opencord.voltha.openflow13.Openflow13.ofp_switch_features(this);
        result.datapathId_ = datapathId_;
        result.nBuffers_ = nBuffers_;
        result.nTables_ = nTables_;
        result.auxiliaryId_ = auxiliaryId_;
        result.capabilities_ = capabilities_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_switch_features) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_switch_features)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_switch_features other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_switch_features.getDefaultInstance()) return this;
        if (other.getDatapathId() != 0L) {
          setDatapathId(other.getDatapathId());
        }
        if (other.getNBuffers() != 0) {
          setNBuffers(other.getNBuffers());
        }
        if (other.getNTables() != 0) {
          setNTables(other.getNTables());
        }
        if (other.getAuxiliaryId() != 0) {
          setAuxiliaryId(other.getAuxiliaryId());
        }
        if (other.getCapabilities() != 0) {
          setCapabilities(other.getCapabilities());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_switch_features parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_switch_features) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long datapathId_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 datapath_id = 1;</code>
       */
      public long getDatapathId() {
        return datapathId_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 datapath_id = 1;</code>
       */
      public Builder setDatapathId(long value) {
        
        datapathId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 datapath_id = 1;</code>
       */
      public Builder clearDatapathId() {
        
        datapathId_ = 0L;
        onChanged();
        return this;
      }

      private int nBuffers_ ;
      /**
       * <pre>
       * Max packets buffered at once. 
       * </pre>
       *
       * <code>uint32 n_buffers = 2;</code>
       */
      public int getNBuffers() {
        return nBuffers_;
      }
      /**
       * <pre>
       * Max packets buffered at once. 
       * </pre>
       *
       * <code>uint32 n_buffers = 2;</code>
       */
      public Builder setNBuffers(int value) {
        
        nBuffers_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max packets buffered at once. 
       * </pre>
       *
       * <code>uint32 n_buffers = 2;</code>
       */
      public Builder clearNBuffers() {
        
        nBuffers_ = 0;
        onChanged();
        return this;
      }

      private int nTables_ ;
      /**
       * <pre>
       * Number of tables supported by datapath. 
       * </pre>
       *
       * <code>uint32 n_tables = 3;</code>
       */
      public int getNTables() {
        return nTables_;
      }
      /**
       * <pre>
       * Number of tables supported by datapath. 
       * </pre>
       *
       * <code>uint32 n_tables = 3;</code>
       */
      public Builder setNTables(int value) {
        
        nTables_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of tables supported by datapath. 
       * </pre>
       *
       * <code>uint32 n_tables = 3;</code>
       */
      public Builder clearNTables() {
        
        nTables_ = 0;
        onChanged();
        return this;
      }

      private int auxiliaryId_ ;
      /**
       * <pre>
       * Identify auxiliary connections 
       * </pre>
       *
       * <code>uint32 auxiliary_id = 4;</code>
       */
      public int getAuxiliaryId() {
        return auxiliaryId_;
      }
      /**
       * <pre>
       * Identify auxiliary connections 
       * </pre>
       *
       * <code>uint32 auxiliary_id = 4;</code>
       */
      public Builder setAuxiliaryId(int value) {
        
        auxiliaryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identify auxiliary connections 
       * </pre>
       *
       * <code>uint32 auxiliary_id = 4;</code>
       */
      public Builder clearAuxiliaryId() {
        
        auxiliaryId_ = 0;
        onChanged();
        return this;
      }

      private int capabilities_ ;
      /**
       * <pre>
       * Features. 
       * </pre>
       *
       * <code>uint32 capabilities = 5;</code>
       */
      public int getCapabilities() {
        return capabilities_;
      }
      /**
       * <pre>
       * Features. 
       * </pre>
       *
       * <code>uint32 capabilities = 5;</code>
       */
      public Builder setCapabilities(int value) {
        
        capabilities_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Features. 
       * </pre>
       *
       * <code>uint32 capabilities = 5;</code>
       */
      public Builder clearCapabilities() {
        
        capabilities_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_switch_features)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_switch_features)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_switch_features DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_switch_features();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_switch_features getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_switch_features>
        PARSER = new com.google.protobuf.AbstractParser<ofp_switch_features>() {
      @java.lang.Override
      public ofp_switch_features parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_switch_features(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_switch_features> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_switch_features> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_switch_features getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_port_statusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_port_status)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_port_reason reason = 1;</code>
     */
    int getReasonValue();
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_port_reason reason = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_port_reason getReason();

    /**
     * <code>.openflow_13.ofp_port desc = 2;</code>
     */
    boolean hasDesc();
    /**
     * <code>.openflow_13.ofp_port desc = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_port getDesc();
    /**
     * <code>.openflow_13.ofp_port desc = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder getDescOrBuilder();
  }
  /**
   * <pre>
   * A physical port has changed in the datapath 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_port_status}
   */
  public  static final class ofp_port_status extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_port_status)
      ofp_port_statusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_port_status.newBuilder() to construct.
    private ofp_port_status(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_port_status() {
      reason_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_port_status();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_port_status(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              reason_ = rawValue;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder subBuilder = null;
              if (desc_ != null) {
                subBuilder = desc_.toBuilder();
              }
              desc_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_port.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(desc_);
                desc_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_status_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_status_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_port_status.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder.class);
    }

    public static final int REASON_FIELD_NUMBER = 1;
    private int reason_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_port_reason reason = 1;</code>
     */
    public int getReasonValue() {
      return reason_;
    }
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_port_reason reason = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_reason getReason() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_port_reason result = org.opencord.voltha.openflow13.Openflow13.ofp_port_reason.valueOf(reason_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port_reason.UNRECOGNIZED : result;
    }

    public static final int DESC_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_port desc_;
    /**
     * <code>.openflow_13.ofp_port desc = 2;</code>
     */
    public boolean hasDesc() {
      return desc_ != null;
    }
    /**
     * <code>.openflow_13.ofp_port desc = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_port getDesc() {
      return desc_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance() : desc_;
    }
    /**
     * <code>.openflow_13.ofp_port desc = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder getDescOrBuilder() {
      return getDesc();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (reason_ != org.opencord.voltha.openflow13.Openflow13.ofp_port_reason.OFPPR_ADD.getNumber()) {
        output.writeEnum(1, reason_);
      }
      if (desc_ != null) {
        output.writeMessage(2, getDesc());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (reason_ != org.opencord.voltha.openflow13.Openflow13.ofp_port_reason.OFPPR_ADD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, reason_);
      }
      if (desc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDesc());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_status)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_port_status other = (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) obj;

      if (reason_ != other.reason_) return false;
      if (hasDesc() != other.hasDesc()) return false;
      if (hasDesc()) {
        if (!getDesc()
            .equals(other.getDesc())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REASON_FIELD_NUMBER;
      hash = (53 * hash) + reason_;
      if (hasDesc()) {
        hash = (37 * hash) + DESC_FIELD_NUMBER;
        hash = (53 * hash) + getDesc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_port_status prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A physical port has changed in the datapath 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_port_status}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_port_status)
        org.opencord.voltha.openflow13.Openflow13.ofp_port_statusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_status_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_status_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_port_status.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_port_status.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        reason_ = 0;

        if (descBuilder_ == null) {
          desc_ = null;
        } else {
          desc_ = null;
          descBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_status_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_status getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_status build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_status result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_status buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_status result = new org.opencord.voltha.openflow13.Openflow13.ofp_port_status(this);
        result.reason_ = reason_;
        if (descBuilder_ == null) {
          result.desc_ = desc_;
        } else {
          result.desc_ = descBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_status) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_port_status)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_port_status other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance()) return this;
        if (other.reason_ != 0) {
          setReasonValue(other.getReasonValue());
        }
        if (other.hasDesc()) {
          mergeDesc(other.getDesc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_status parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int reason_ = 0;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_port_reason reason = 1;</code>
       */
      public int getReasonValue() {
        return reason_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_port_reason reason = 1;</code>
       */
      public Builder setReasonValue(int value) {
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_port_reason reason = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_reason getReason() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_port_reason result = org.opencord.voltha.openflow13.Openflow13.ofp_port_reason.valueOf(reason_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port_reason.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_port_reason reason = 1;</code>
       */
      public Builder setReason(org.opencord.voltha.openflow13.Openflow13.ofp_port_reason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        reason_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_port_reason reason = 1;</code>
       */
      public Builder clearReason() {
        
        reason_ = 0;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_port desc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder> descBuilder_;
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public boolean hasDesc() {
        return descBuilder_ != null || desc_ != null;
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port getDesc() {
        if (descBuilder_ == null) {
          return desc_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance() : desc_;
        } else {
          return descBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public Builder setDesc(org.opencord.voltha.openflow13.Openflow13.ofp_port value) {
        if (descBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          desc_ = value;
          onChanged();
        } else {
          descBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public Builder setDesc(
          org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder builderForValue) {
        if (descBuilder_ == null) {
          desc_ = builderForValue.build();
          onChanged();
        } else {
          descBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public Builder mergeDesc(org.opencord.voltha.openflow13.Openflow13.ofp_port value) {
        if (descBuilder_ == null) {
          if (desc_ != null) {
            desc_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_port.newBuilder(desc_).mergeFrom(value).buildPartial();
          } else {
            desc_ = value;
          }
          onChanged();
        } else {
          descBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public Builder clearDesc() {
        if (descBuilder_ == null) {
          desc_ = null;
          onChanged();
        } else {
          desc_ = null;
          descBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder getDescBuilder() {
        
        onChanged();
        return getDescFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder getDescOrBuilder() {
        if (descBuilder_ != null) {
          return descBuilder_.getMessageOrBuilder();
        } else {
          return desc_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_port.getDefaultInstance() : desc_;
        }
      }
      /**
       * <code>.openflow_13.ofp_port desc = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder> 
          getDescFieldBuilder() {
        if (descBuilder_ == null) {
          descBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_port, org.opencord.voltha.openflow13.Openflow13.ofp_port.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_portOrBuilder>(
                  getDesc(),
                  getParentForChildren(),
                  isClean());
          desc_ = null;
        }
        return descBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_port_status)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_port_status)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_port_status DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_port_status();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_status getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_port_status>
        PARSER = new com.google.protobuf.AbstractParser<ofp_port_status>() {
      @java.lang.Override
      public ofp_port_status parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_port_status(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_port_status> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_port_status> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_status getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_port_modOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_port_mod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 port_no = 1;</code>
     */
    int getPortNo();

    /**
     * <pre>
     *[OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    java.util.List<java.lang.Integer> getHwAddrList();
    /**
     * <pre>
     *[OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    int getHwAddrCount();
    /**
     * <pre>
     *[OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    int getHwAddr(int index);

    /**
     * <pre>
     * The hardware address is not
     *configurable.  This is used to
     *sanity-check the request, so it must
     *be the same as returned in an
     *ofp_port struct. 
     * </pre>
     *
     * <code>uint32 config = 3;</code>
     */
    int getConfig();

    /**
     * <pre>
     * Bitmap of OFPPC_* flags to be changed. 
     * </pre>
     *
     * <code>uint32 mask = 4;</code>
     */
    int getMask();

    /**
     * <pre>
     * Bitmap of OFPPF_*.  Zero all bits to prevent
     *any action taking place. 
     * </pre>
     *
     * <code>uint32 advertise = 5;</code>
     */
    int getAdvertise();
  }
  /**
   * <pre>
   * Modify behavior of the physical port 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_port_mod}
   */
  public  static final class ofp_port_mod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_port_mod)
      ofp_port_modOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_port_mod.newBuilder() to construct.
    private ofp_port_mod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_port_mod() {
      hwAddr_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_port_mod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_port_mod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              portNo_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                hwAddr_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              hwAddr_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                hwAddr_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                hwAddr_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              config_ = input.readUInt32();
              break;
            }
            case 32: {

              mask_ = input.readUInt32();
              break;
            }
            case 40: {

              advertise_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          hwAddr_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_mod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_mod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_port_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_mod.Builder.class);
    }

    public static final int PORT_NO_FIELD_NUMBER = 1;
    private int portNo_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 port_no = 1;</code>
     */
    public int getPortNo() {
      return portNo_;
    }

    public static final int HW_ADDR_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList hwAddr_;
    /**
     * <pre>
     *[OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getHwAddrList() {
      return hwAddr_;
    }
    /**
     * <pre>
     *[OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    public int getHwAddrCount() {
      return hwAddr_.size();
    }
    /**
     * <pre>
     *[OFP_ETH_ALEN];
     * </pre>
     *
     * <code>repeated uint32 hw_addr = 2;</code>
     */
    public int getHwAddr(int index) {
      return hwAddr_.getInt(index);
    }
    private int hwAddrMemoizedSerializedSize = -1;

    public static final int CONFIG_FIELD_NUMBER = 3;
    private int config_;
    /**
     * <pre>
     * The hardware address is not
     *configurable.  This is used to
     *sanity-check the request, so it must
     *be the same as returned in an
     *ofp_port struct. 
     * </pre>
     *
     * <code>uint32 config = 3;</code>
     */
    public int getConfig() {
      return config_;
    }

    public static final int MASK_FIELD_NUMBER = 4;
    private int mask_;
    /**
     * <pre>
     * Bitmap of OFPPC_* flags to be changed. 
     * </pre>
     *
     * <code>uint32 mask = 4;</code>
     */
    public int getMask() {
      return mask_;
    }

    public static final int ADVERTISE_FIELD_NUMBER = 5;
    private int advertise_;
    /**
     * <pre>
     * Bitmap of OFPPF_*.  Zero all bits to prevent
     *any action taking place. 
     * </pre>
     *
     * <code>uint32 advertise = 5;</code>
     */
    public int getAdvertise() {
      return advertise_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (portNo_ != 0) {
        output.writeUInt32(1, portNo_);
      }
      if (getHwAddrList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(hwAddrMemoizedSerializedSize);
      }
      for (int i = 0; i < hwAddr_.size(); i++) {
        output.writeUInt32NoTag(hwAddr_.getInt(i));
      }
      if (config_ != 0) {
        output.writeUInt32(3, config_);
      }
      if (mask_ != 0) {
        output.writeUInt32(4, mask_);
      }
      if (advertise_ != 0) {
        output.writeUInt32(5, advertise_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, portNo_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hwAddr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hwAddr_.getInt(i));
        }
        size += dataSize;
        if (!getHwAddrList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        hwAddrMemoizedSerializedSize = dataSize;
      }
      if (config_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, config_);
      }
      if (mask_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, mask_);
      }
      if (advertise_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, advertise_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_mod)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_port_mod other = (org.opencord.voltha.openflow13.Openflow13.ofp_port_mod) obj;

      if (getPortNo()
          != other.getPortNo()) return false;
      if (!getHwAddrList()
          .equals(other.getHwAddrList())) return false;
      if (getConfig()
          != other.getConfig()) return false;
      if (getMask()
          != other.getMask()) return false;
      if (getAdvertise()
          != other.getAdvertise()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_NO_FIELD_NUMBER;
      hash = (53 * hash) + getPortNo();
      if (getHwAddrCount() > 0) {
        hash = (37 * hash) + HW_ADDR_FIELD_NUMBER;
        hash = (53 * hash) + getHwAddrList().hashCode();
      }
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConfig();
      hash = (37 * hash) + MASK_FIELD_NUMBER;
      hash = (53 * hash) + getMask();
      hash = (37 * hash) + ADVERTISE_FIELD_NUMBER;
      hash = (53 * hash) + getAdvertise();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_port_mod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Modify behavior of the physical port 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_port_mod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_port_mod)
        org.opencord.voltha.openflow13.Openflow13.ofp_port_modOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_mod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_mod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_port_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_mod.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_port_mod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portNo_ = 0;

        hwAddr_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        config_ = 0;

        mask_ = 0;

        advertise_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_mod_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_mod getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_port_mod.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_mod build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_mod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_mod buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_mod result = new org.opencord.voltha.openflow13.Openflow13.ofp_port_mod(this);
        int from_bitField0_ = bitField0_;
        result.portNo_ = portNo_;
        if (((bitField0_ & 0x00000001) != 0)) {
          hwAddr_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.hwAddr_ = hwAddr_;
        result.config_ = config_;
        result.mask_ = mask_;
        result.advertise_ = advertise_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_mod) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_port_mod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_port_mod other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_port_mod.getDefaultInstance()) return this;
        if (other.getPortNo() != 0) {
          setPortNo(other.getPortNo());
        }
        if (!other.hwAddr_.isEmpty()) {
          if (hwAddr_.isEmpty()) {
            hwAddr_ = other.hwAddr_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHwAddrIsMutable();
            hwAddr_.addAll(other.hwAddr_);
          }
          onChanged();
        }
        if (other.getConfig() != 0) {
          setConfig(other.getConfig());
        }
        if (other.getMask() != 0) {
          setMask(other.getMask());
        }
        if (other.getAdvertise() != 0) {
          setAdvertise(other.getAdvertise());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_mod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_port_mod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int portNo_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public int getPortNo() {
        return portNo_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public Builder setPortNo(int value) {
        
        portNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public Builder clearPortNo() {
        
        portNo_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList hwAddr_ = emptyIntList();
      private void ensureHwAddrIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hwAddr_ = mutableCopy(hwAddr_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *[OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getHwAddrList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(hwAddr_) : hwAddr_;
      }
      /**
       * <pre>
       *[OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public int getHwAddrCount() {
        return hwAddr_.size();
      }
      /**
       * <pre>
       *[OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public int getHwAddr(int index) {
        return hwAddr_.getInt(index);
      }
      /**
       * <pre>
       *[OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder setHwAddr(
          int index, int value) {
        ensureHwAddrIsMutable();
        hwAddr_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *[OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder addHwAddr(int value) {
        ensureHwAddrIsMutable();
        hwAddr_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *[OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder addAllHwAddr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHwAddrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hwAddr_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *[OFP_ETH_ALEN];
       * </pre>
       *
       * <code>repeated uint32 hw_addr = 2;</code>
       */
      public Builder clearHwAddr() {
        hwAddr_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int config_ ;
      /**
       * <pre>
       * The hardware address is not
       *configurable.  This is used to
       *sanity-check the request, so it must
       *be the same as returned in an
       *ofp_port struct. 
       * </pre>
       *
       * <code>uint32 config = 3;</code>
       */
      public int getConfig() {
        return config_;
      }
      /**
       * <pre>
       * The hardware address is not
       *configurable.  This is used to
       *sanity-check the request, so it must
       *be the same as returned in an
       *ofp_port struct. 
       * </pre>
       *
       * <code>uint32 config = 3;</code>
       */
      public Builder setConfig(int value) {
        
        config_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hardware address is not
       *configurable.  This is used to
       *sanity-check the request, so it must
       *be the same as returned in an
       *ofp_port struct. 
       * </pre>
       *
       * <code>uint32 config = 3;</code>
       */
      public Builder clearConfig() {
        
        config_ = 0;
        onChanged();
        return this;
      }

      private int mask_ ;
      /**
       * <pre>
       * Bitmap of OFPPC_* flags to be changed. 
       * </pre>
       *
       * <code>uint32 mask = 4;</code>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <pre>
       * Bitmap of OFPPC_* flags to be changed. 
       * </pre>
       *
       * <code>uint32 mask = 4;</code>
       */
      public Builder setMask(int value) {
        
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPPC_* flags to be changed. 
       * </pre>
       *
       * <code>uint32 mask = 4;</code>
       */
      public Builder clearMask() {
        
        mask_ = 0;
        onChanged();
        return this;
      }

      private int advertise_ ;
      /**
       * <pre>
       * Bitmap of OFPPF_*.  Zero all bits to prevent
       *any action taking place. 
       * </pre>
       *
       * <code>uint32 advertise = 5;</code>
       */
      public int getAdvertise() {
        return advertise_;
      }
      /**
       * <pre>
       * Bitmap of OFPPF_*.  Zero all bits to prevent
       *any action taking place. 
       * </pre>
       *
       * <code>uint32 advertise = 5;</code>
       */
      public Builder setAdvertise(int value) {
        
        advertise_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPPF_*.  Zero all bits to prevent
       *any action taking place. 
       * </pre>
       *
       * <code>uint32 advertise = 5;</code>
       */
      public Builder clearAdvertise() {
        
        advertise_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_port_mod)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_port_mod)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_port_mod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_port_mod();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_mod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_port_mod>
        PARSER = new com.google.protobuf.AbstractParser<ofp_port_mod>() {
      @java.lang.Override
      public ofp_port_mod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_port_mod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_port_mod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_port_mod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_mod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_matchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_match)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPMT_* 
     * </pre>
     *
     * <code>.openflow_13.ofp_match_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of OFPMT_* 
     * </pre>
     *
     * <code>.openflow_13.ofp_match_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_match_type getType();

    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field> 
        getOxmFieldsList();
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getOxmFields(int index);
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    int getOxmFieldsCount();
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder> 
        getOxmFieldsOrBuilderList();
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder getOxmFieldsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Fields to match against flows 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_match}
   */
  public  static final class ofp_match extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_match)
      ofp_matchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_match.newBuilder() to construct.
    private ofp_match(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_match() {
      type_ = 0;
      oxmFields_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_match();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_match(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                oxmFields_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field>();
                mutable_bitField0_ |= 0x00000001;
              }
              oxmFields_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          oxmFields_ = java.util.Collections.unmodifiableList(oxmFields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_match_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_match_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_match.class, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * One of OFPMT_* 
     * </pre>
     *
     * <code>.openflow_13.ofp_match_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of OFPMT_* 
     * </pre>
     *
     * <code>.openflow_13.ofp_match_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_match_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_match_type result = org.opencord.voltha.openflow13.Openflow13.ofp_match_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match_type.UNRECOGNIZED : result;
    }

    public static final int OXM_FIELDS_FIELD_NUMBER = 2;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field> oxmFields_;
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field> getOxmFieldsList() {
      return oxmFields_;
    }
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder> 
        getOxmFieldsOrBuilderList() {
      return oxmFields_;
    }
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    public int getOxmFieldsCount() {
      return oxmFields_.size();
    }
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getOxmFields(int index) {
      return oxmFields_.get(index);
    }
    /**
     * <pre>
     * 0 or more 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder getOxmFieldsOrBuilder(
        int index) {
      return oxmFields_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_match_type.OFPMT_STANDARD.getNumber()) {
        output.writeEnum(1, type_);
      }
      for (int i = 0; i < oxmFields_.size(); i++) {
        output.writeMessage(2, oxmFields_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_match_type.OFPMT_STANDARD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      for (int i = 0; i < oxmFields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, oxmFields_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_match)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_match other = (org.opencord.voltha.openflow13.Openflow13.ofp_match) obj;

      if (type_ != other.type_) return false;
      if (!getOxmFieldsList()
          .equals(other.getOxmFieldsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (getOxmFieldsCount() > 0) {
        hash = (37 * hash) + OXM_FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getOxmFieldsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_match parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_match prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Fields to match against flows 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_match}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_match)
        org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_match_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_match_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_match.class, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_match.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOxmFieldsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (oxmFieldsBuilder_ == null) {
          oxmFields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          oxmFieldsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_match_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_match getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_match build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_match result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_match buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_match result = new org.opencord.voltha.openflow13.Openflow13.ofp_match(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        if (oxmFieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            oxmFields_ = java.util.Collections.unmodifiableList(oxmFields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.oxmFields_ = oxmFields_;
        } else {
          result.oxmFields_ = oxmFieldsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_match) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_match)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_match other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (oxmFieldsBuilder_ == null) {
          if (!other.oxmFields_.isEmpty()) {
            if (oxmFields_.isEmpty()) {
              oxmFields_ = other.oxmFields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOxmFieldsIsMutable();
              oxmFields_.addAll(other.oxmFields_);
            }
            onChanged();
          }
        } else {
          if (!other.oxmFields_.isEmpty()) {
            if (oxmFieldsBuilder_.isEmpty()) {
              oxmFieldsBuilder_.dispose();
              oxmFieldsBuilder_ = null;
              oxmFields_ = other.oxmFields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              oxmFieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOxmFieldsFieldBuilder() : null;
            } else {
              oxmFieldsBuilder_.addAllMessages(other.oxmFields_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_match parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_match) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * One of OFPMT_* 
       * </pre>
       *
       * <code>.openflow_13.ofp_match_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of OFPMT_* 
       * </pre>
       *
       * <code>.openflow_13.ofp_match_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPMT_* 
       * </pre>
       *
       * <code>.openflow_13.ofp_match_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_match_type result = org.opencord.voltha.openflow13.Openflow13.ofp_match_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPMT_* 
       * </pre>
       *
       * <code>.openflow_13.ofp_match_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_match_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPMT_* 
       * </pre>
       *
       * <code>.openflow_13.ofp_match_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field> oxmFields_ =
        java.util.Collections.emptyList();
      private void ensureOxmFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          oxmFields_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field>(oxmFields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder> oxmFieldsBuilder_;

      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field> getOxmFieldsList() {
        if (oxmFieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(oxmFields_);
        } else {
          return oxmFieldsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public int getOxmFieldsCount() {
        if (oxmFieldsBuilder_ == null) {
          return oxmFields_.size();
        } else {
          return oxmFieldsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getOxmFields(int index) {
        if (oxmFieldsBuilder_ == null) {
          return oxmFields_.get(index);
        } else {
          return oxmFieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder setOxmFields(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field value) {
        if (oxmFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOxmFieldsIsMutable();
          oxmFields_.set(index, value);
          onChanged();
        } else {
          oxmFieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder setOxmFields(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder builderForValue) {
        if (oxmFieldsBuilder_ == null) {
          ensureOxmFieldsIsMutable();
          oxmFields_.set(index, builderForValue.build());
          onChanged();
        } else {
          oxmFieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder addOxmFields(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field value) {
        if (oxmFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOxmFieldsIsMutable();
          oxmFields_.add(value);
          onChanged();
        } else {
          oxmFieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder addOxmFields(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field value) {
        if (oxmFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOxmFieldsIsMutable();
          oxmFields_.add(index, value);
          onChanged();
        } else {
          oxmFieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder addOxmFields(
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder builderForValue) {
        if (oxmFieldsBuilder_ == null) {
          ensureOxmFieldsIsMutable();
          oxmFields_.add(builderForValue.build());
          onChanged();
        } else {
          oxmFieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder addOxmFields(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder builderForValue) {
        if (oxmFieldsBuilder_ == null) {
          ensureOxmFieldsIsMutable();
          oxmFields_.add(index, builderForValue.build());
          onChanged();
        } else {
          oxmFieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder addAllOxmFields(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field> values) {
        if (oxmFieldsBuilder_ == null) {
          ensureOxmFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, oxmFields_);
          onChanged();
        } else {
          oxmFieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder clearOxmFields() {
        if (oxmFieldsBuilder_ == null) {
          oxmFields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          oxmFieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public Builder removeOxmFields(int index) {
        if (oxmFieldsBuilder_ == null) {
          ensureOxmFieldsIsMutable();
          oxmFields_.remove(index);
          onChanged();
        } else {
          oxmFieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder getOxmFieldsBuilder(
          int index) {
        return getOxmFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder getOxmFieldsOrBuilder(
          int index) {
        if (oxmFieldsBuilder_ == null) {
          return oxmFields_.get(index);  } else {
          return oxmFieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder> 
           getOxmFieldsOrBuilderList() {
        if (oxmFieldsBuilder_ != null) {
          return oxmFieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(oxmFields_);
        }
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder addOxmFieldsBuilder() {
        return getOxmFieldsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.getDefaultInstance());
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder addOxmFieldsBuilder(
          int index) {
        return getOxmFieldsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.getDefaultInstance());
      }
      /**
       * <pre>
       * 0 or more 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_oxm_field oxm_fields = 2;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder> 
           getOxmFieldsBuilderList() {
        return getOxmFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder> 
          getOxmFieldsFieldBuilder() {
        if (oxmFieldsBuilder_ == null) {
          oxmFieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder>(
                  oxmFields_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          oxmFields_ = null;
        }
        return oxmFieldsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_match)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_match)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_match DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_match();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_match getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_match>
        PARSER = new com.google.protobuf.AbstractParser<ofp_match>() {
      @java.lang.Override
      public ofp_match parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_match(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_match> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_match> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_match getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_oxm_fieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_oxm_field)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
     */
    int getOxmClassValue();
    /**
     * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class getOxmClass();

    /**
     * <pre>
     * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
     * </pre>
     *
     * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
     */
    boolean hasOfbField();
    /**
     * <pre>
     * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
     * </pre>
     *
     * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field getOfbField();
    /**
     * <pre>
     * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
     * </pre>
     *
     * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_fieldOrBuilder getOfbFieldOrBuilder();

    /**
     * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
     */
    boolean hasExperimenterField();
    /**
     * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field getExperimenterField();
    /**
     * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_fieldOrBuilder getExperimenterFieldOrBuilder();

    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.FieldCase getFieldCase();
  }
  /**
   * <pre>
   * OXM Flow match fields 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_oxm_field}
   */
  public  static final class ofp_oxm_field extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_oxm_field)
      ofp_oxm_fieldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_oxm_field.newBuilder() to construct.
    private ofp_oxm_field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_oxm_field() {
      oxmClass_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_oxm_field();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_oxm_field(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              oxmClass_ = rawValue;
              break;
            }
            case 34: {
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder subBuilder = null;
              if (fieldCase_ == 4) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_).toBuilder();
              }
              field_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_);
                field_ = subBuilder.buildPartial();
              }
              fieldCase_ = 4;
              break;
            }
            case 42: {
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder subBuilder = null;
              if (fieldCase_ == 5) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_).toBuilder();
              }
              field_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_);
                field_ = subBuilder.buildPartial();
              }
              fieldCase_ = 5;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_field_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder.class);
    }

    private int fieldCase_ = 0;
    private java.lang.Object field_;
    public enum FieldCase
        implements com.google.protobuf.Internal.EnumLite {
      OFB_FIELD(4),
      EXPERIMENTER_FIELD(5),
      FIELD_NOT_SET(0);
      private final int value;
      private FieldCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FieldCase valueOf(int value) {
        return forNumber(value);
      }

      public static FieldCase forNumber(int value) {
        switch (value) {
          case 4: return OFB_FIELD;
          case 5: return EXPERIMENTER_FIELD;
          case 0: return FIELD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FieldCase
    getFieldCase() {
      return FieldCase.forNumber(
          fieldCase_);
    }

    public static final int OXM_CLASS_FIELD_NUMBER = 1;
    private int oxmClass_;
    /**
     * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
     */
    public int getOxmClassValue() {
      return oxmClass_;
    }
    /**
     * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class getOxmClass() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class result = org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class.valueOf(oxmClass_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class.UNRECOGNIZED : result;
    }

    public static final int OFB_FIELD_FIELD_NUMBER = 4;
    /**
     * <pre>
     * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
     * </pre>
     *
     * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
     */
    public boolean hasOfbField() {
      return fieldCase_ == 4;
    }
    /**
     * <pre>
     * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
     * </pre>
     *
     * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field getOfbField() {
      if (fieldCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance();
    }
    /**
     * <pre>
     * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
     * </pre>
     *
     * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_fieldOrBuilder getOfbFieldOrBuilder() {
      if (fieldCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance();
    }

    public static final int EXPERIMENTER_FIELD_FIELD_NUMBER = 5;
    /**
     * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
     */
    public boolean hasExperimenterField() {
      return fieldCase_ == 5;
    }
    /**
     * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field getExperimenterField() {
      if (fieldCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_fieldOrBuilder getExperimenterFieldOrBuilder() {
      if (fieldCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (oxmClass_ != org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class.OFPXMC_NXM_0.getNumber()) {
        output.writeEnum(1, oxmClass_);
      }
      if (fieldCase_ == 4) {
        output.writeMessage(4, (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_);
      }
      if (fieldCase_ == 5) {
        output.writeMessage(5, (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (oxmClass_ != org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class.OFPXMC_NXM_0.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, oxmClass_);
      }
      if (fieldCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_);
      }
      if (fieldCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field other = (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field) obj;

      if (oxmClass_ != other.oxmClass_) return false;
      if (!getFieldCase().equals(other.getFieldCase())) return false;
      switch (fieldCase_) {
        case 4:
          if (!getOfbField()
              .equals(other.getOfbField())) return false;
          break;
        case 5:
          if (!getExperimenterField()
              .equals(other.getExperimenterField())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OXM_CLASS_FIELD_NUMBER;
      hash = (53 * hash) + oxmClass_;
      switch (fieldCase_) {
        case 4:
          hash = (37 * hash) + OFB_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getOfbField().hashCode();
          break;
        case 5:
          hash = (37 * hash) + EXPERIMENTER_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getExperimenterField().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OXM Flow match fields 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_oxm_field}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_oxm_field)
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        oxmClass_ = 0;

        fieldCase_ = 0;
        field_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_field_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field result = new org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field(this);
        result.oxmClass_ = oxmClass_;
        if (fieldCase_ == 4) {
          if (ofbFieldBuilder_ == null) {
            result.field_ = field_;
          } else {
            result.field_ = ofbFieldBuilder_.build();
          }
        }
        if (fieldCase_ == 5) {
          if (experimenterFieldBuilder_ == null) {
            result.field_ = field_;
          } else {
            result.field_ = experimenterFieldBuilder_.build();
          }
        }
        result.fieldCase_ = fieldCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.getDefaultInstance()) return this;
        if (other.oxmClass_ != 0) {
          setOxmClassValue(other.getOxmClassValue());
        }
        switch (other.getFieldCase()) {
          case OFB_FIELD: {
            mergeOfbField(other.getOfbField());
            break;
          }
          case EXPERIMENTER_FIELD: {
            mergeExperimenterField(other.getExperimenterField());
            break;
          }
          case FIELD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int fieldCase_ = 0;
      private java.lang.Object field_;
      public FieldCase
          getFieldCase() {
        return FieldCase.forNumber(
            fieldCase_);
      }

      public Builder clearField() {
        fieldCase_ = 0;
        field_ = null;
        onChanged();
        return this;
      }


      private int oxmClass_ = 0;
      /**
       * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
       */
      public int getOxmClassValue() {
        return oxmClass_;
      }
      /**
       * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
       */
      public Builder setOxmClassValue(int value) {
        oxmClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class getOxmClass() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class result = org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class.valueOf(oxmClass_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class.UNRECOGNIZED : result;
      }
      /**
       * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
       */
      public Builder setOxmClass(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_class value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        oxmClass_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_class oxm_class = 1;</code>
       */
      public Builder clearOxmClass() {
        
        oxmClass_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_fieldOrBuilder> ofbFieldBuilder_;
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public boolean hasOfbField() {
        return fieldCase_ == 4;
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field getOfbField() {
        if (ofbFieldBuilder_ == null) {
          if (fieldCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance();
        } else {
          if (fieldCase_ == 4) {
            return ofbFieldBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public Builder setOfbField(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field value) {
        if (ofbFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          ofbFieldBuilder_.setMessage(value);
        }
        fieldCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public Builder setOfbField(
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder builderForValue) {
        if (ofbFieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          ofbFieldBuilder_.setMessage(builderForValue.build());
        }
        fieldCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public Builder mergeOfbField(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field value) {
        if (ofbFieldBuilder_ == null) {
          if (fieldCase_ == 4 &&
              field_ != org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance()) {
            field_ = org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_)
                .mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          if (fieldCase_ == 4) {
            ofbFieldBuilder_.mergeFrom(value);
          }
          ofbFieldBuilder_.setMessage(value);
        }
        fieldCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public Builder clearOfbField() {
        if (ofbFieldBuilder_ == null) {
          if (fieldCase_ == 4) {
            fieldCase_ = 0;
            field_ = null;
            onChanged();
          }
        } else {
          if (fieldCase_ == 4) {
            fieldCase_ = 0;
            field_ = null;
          }
          ofbFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder getOfbFieldBuilder() {
        return getOfbFieldFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_fieldOrBuilder getOfbFieldOrBuilder() {
        if ((fieldCase_ == 4) && (ofbFieldBuilder_ != null)) {
          return ofbFieldBuilder_.getMessageOrBuilder();
        } else {
          if (fieldCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 2 and 3 reserved for NXM_0 and NXM-1 OXM classes 
       * </pre>
       *
       * <code>.openflow_13.ofp_oxm_ofb_field ofb_field = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_fieldOrBuilder> 
          getOfbFieldFieldBuilder() {
        if (ofbFieldBuilder_ == null) {
          if (!(fieldCase_ == 4)) {
            field_ = org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance();
          }
          ofbFieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_fieldOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) field_,
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        fieldCase_ = 4;
        onChanged();;
        return ofbFieldBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_fieldOrBuilder> experimenterFieldBuilder_;
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public boolean hasExperimenterField() {
        return fieldCase_ == 5;
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field getExperimenterField() {
        if (experimenterFieldBuilder_ == null) {
          if (fieldCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance();
        } else {
          if (fieldCase_ == 5) {
            return experimenterFieldBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public Builder setExperimenterField(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field value) {
        if (experimenterFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          experimenterFieldBuilder_.setMessage(value);
        }
        fieldCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public Builder setExperimenterField(
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder builderForValue) {
        if (experimenterFieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          experimenterFieldBuilder_.setMessage(builderForValue.build());
        }
        fieldCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public Builder mergeExperimenterField(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field value) {
        if (experimenterFieldBuilder_ == null) {
          if (fieldCase_ == 5 &&
              field_ != org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance()) {
            field_ = org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_)
                .mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          if (fieldCase_ == 5) {
            experimenterFieldBuilder_.mergeFrom(value);
          }
          experimenterFieldBuilder_.setMessage(value);
        }
        fieldCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public Builder clearExperimenterField() {
        if (experimenterFieldBuilder_ == null) {
          if (fieldCase_ == 5) {
            fieldCase_ = 0;
            field_ = null;
            onChanged();
          }
        } else {
          if (fieldCase_ == 5) {
            fieldCase_ = 0;
            field_ = null;
          }
          experimenterFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder getExperimenterFieldBuilder() {
        return getExperimenterFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_fieldOrBuilder getExperimenterFieldOrBuilder() {
        if ((fieldCase_ == 5) && (experimenterFieldBuilder_ != null)) {
          return experimenterFieldBuilder_.getMessageOrBuilder();
        } else {
          if (fieldCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_oxm_experimenter_field experimenter_field = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_fieldOrBuilder> 
          getExperimenterFieldFieldBuilder() {
        if (experimenterFieldBuilder_ == null) {
          if (!(fieldCase_ == 5)) {
            field_ = org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance();
          }
          experimenterFieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_fieldOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) field_,
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        fieldCase_ = 5;
        onChanged();;
        return experimenterFieldBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_oxm_field)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_oxm_field)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_oxm_field>
        PARSER = new com.google.protobuf.AbstractParser<ofp_oxm_field>() {
      @java.lang.Override
      public ofp_oxm_field parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_oxm_field(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_oxm_field> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_oxm_field> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_oxm_ofb_fieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_oxm_ofb_field)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types getType();

    /**
     * <code>bool has_mask = 2;</code>
     */
    boolean getHasMask();

    /**
     * <pre>
     *#define OXM_OF_IN_PORT    OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PORT, 4)
     * </pre>
     *
     * <code>uint32 port = 3;</code>
     */
    int getPort();

    /**
     * <pre>
     *#define OXM_OF_IN_PHY_PORT OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PHY_PORT, 4)
     * </pre>
     *
     * <code>uint32 physical_port = 4;</code>
     */
    int getPhysicalPort();

    /**
     * <pre>
     *#define OXM_OF_METADATA   OXM_HEADER  (0x8000, OFPXMT_OFB_METADATA, 8)
     *#define OXM_OF_METADATA_W OXM_HEADER_W(0x8000, OFPXMT_OFB_METADATA, 8)
     * </pre>
     *
     * <code>uint64 table_metadata = 5;</code>
     */
    long getTableMetadata();

    /**
     * <pre>
     *#define OXM_OF_ETH_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_DST, 6)
     *#define OXM_OF_ETH_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_DST, 6)
     *#define OXM_OF_ETH_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_SRC, 6)
     *#define OXM_OF_ETH_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_SRC, 6)
     * </pre>
     *
     * <code>bytes eth_dst = 6;</code>
     */
    com.google.protobuf.ByteString getEthDst();

    /**
     * <pre>
     * Used for OFPXMT_OFB_ETH_SRC (exactly 6 bytes) 
     * </pre>
     *
     * <code>bytes eth_src = 7;</code>
     */
    com.google.protobuf.ByteString getEthSrc();

    /**
     * <pre>
     *#define OXM_OF_ETH_TYPE   OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_TYPE,2)
     * </pre>
     *
     * <code>uint32 eth_type = 8;</code>
     */
    int getEthType();

    /**
     * <pre>
     *#define OXM_OF_VLAN_VID   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_VID, 2)
     *#define OXM_OF_VLAN_VID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_VLAN_VID, 2)
     * </pre>
     *
     * <code>uint32 vlan_vid = 9;</code>
     */
    int getVlanVid();

    /**
     * <pre>
     *#define OXM_OF_VLAN_PCP   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_PCP, 1)
     * </pre>
     *
     * <code>uint32 vlan_pcp = 10;</code>
     */
    int getVlanPcp();

    /**
     * <pre>
     *#define OXM_OF_IP_DSCP     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_DSCP, 1)
     * </pre>
     *
     * <code>uint32 ip_dscp = 11;</code>
     */
    int getIpDscp();

    /**
     * <pre>
     *#define OXM_OF_IP_ECN     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_ECN, 1)
     * </pre>
     *
     * <code>uint32 ip_ecn = 12;</code>
     */
    int getIpEcn();

    /**
     * <pre>
     *#define OXM_OF_IP_PROTO   OXM_HEADER  (0x8000, OFPXMT_OFB_IP_PROTO, 1)
     * </pre>
     *
     * <code>uint32 ip_proto = 13;</code>
     */
    int getIpProto();

    /**
     * <pre>
     *#define OXM_OF_IPV4_SRC     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_SRC, 4)
     *#define OXM_OF_IPV4_SRC_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_SRC, 4)
     *#define OXM_OF_IPV4_DST     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_DST, 4)
     *#define OXM_OF_IPV4_DST_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_DST, 4)
     * </pre>
     *
     * <code>uint32 ipv4_src = 14;</code>
     */
    int getIpv4Src();

    /**
     * <pre>
     * Used for OFPXMT_OFB_IPV4_DST 
     * </pre>
     *
     * <code>uint32 ipv4_dst = 15;</code>
     */
    int getIpv4Dst();

    /**
     * <pre>
     *#define OXM_OF_TCP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_SRC, 2)
     *#define OXM_OF_TCP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_DST, 2)
     * </pre>
     *
     * <code>uint32 tcp_src = 16;</code>
     */
    int getTcpSrc();

    /**
     * <pre>
     * Used for OFPXMT_OFB_TCP_DST 
     * </pre>
     *
     * <code>uint32 tcp_dst = 17;</code>
     */
    int getTcpDst();

    /**
     * <pre>
     *#define OXM_OF_UDP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_SRC, 2)
     *#define OXM_OF_UDP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_DST, 2)
     * </pre>
     *
     * <code>uint32 udp_src = 18;</code>
     */
    int getUdpSrc();

    /**
     * <pre>
     * Used for OFPXMT_OFB_UDP_DST 
     * </pre>
     *
     * <code>uint32 udp_dst = 19;</code>
     */
    int getUdpDst();

    /**
     * <pre>
     *#define OXM_OF_SCTP_SRC   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_SRC, 2)
     *#define OXM_OF_SCTP_DST   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_DST, 2)
     * </pre>
     *
     * <code>uint32 sctp_src = 20;</code>
     */
    int getSctpSrc();

    /**
     * <pre>
     * Used for OFPXMT_OFB_SCTP_DST 
     * </pre>
     *
     * <code>uint32 sctp_dst = 21;</code>
     */
    int getSctpDst();

    /**
     * <pre>
     *#define OXM_OF_ICMPV4_TYPE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_TYPE, 1)
     *#define OXM_OF_ICMPV4_CODE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_CODE, 1)
     * </pre>
     *
     * <code>uint32 icmpv4_type = 22;</code>
     */
    int getIcmpv4Type();

    /**
     * <pre>
     * Used for OFPXMT_OFB_ICMPV4_CODE 
     * </pre>
     *
     * <code>uint32 icmpv4_code = 23;</code>
     */
    int getIcmpv4Code();

    /**
     * <pre>
     *#define OXM_OF_ARP_OP     OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_OP, 2)
     * </pre>
     *
     * <code>uint32 arp_op = 24;</code>
     */
    int getArpOp();

    /**
     * <pre>
     *#define OXM_OF_ARP_SPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_SPA, 4)
     *#define OXM_OF_ARP_SPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_SPA, 4)
     *#define OXM_OF_ARP_TPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_TPA, 4)
     *#define OXM_OF_ARP_TPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_TPA, 4)
     * </pre>
     *
     * <code>uint32 arp_spa = 25;</code>
     */
    int getArpSpa();

    /**
     * <pre>
     * For OFPXMT_OFB_ARP_TPA 
     * </pre>
     *
     * <code>uint32 arp_tpa = 26;</code>
     */
    int getArpTpa();

    /**
     * <pre>
     *#define OXM_OF_ARP_SHA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_SHA, 6)
     *#define OXM_OF_ARP_SHA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_SHA, 6)
     *#define OXM_OF_ARP_THA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_THA, 6)
     *#define OXM_OF_ARP_THA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_THA, 6)
     * </pre>
     *
     * <code>bytes arp_sha = 27;</code>
     */
    com.google.protobuf.ByteString getArpSha();

    /**
     * <pre>
     * For OFPXMT_OFB_ARP_THA (6 bytes) 
     * </pre>
     *
     * <code>bytes arp_tha = 28;</code>
     */
    com.google.protobuf.ByteString getArpTha();

    /**
     * <pre>
     *#define OXM_OF_IPV6_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_SRC, 16)
     *#define OXM_OF_IPV6_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_SRC, 16)
     *#define OXM_OF_IPV6_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_DST, 16)
     *#define OXM_OF_IPV6_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_DST, 16)
     * </pre>
     *
     * <code>bytes ipv6_src = 29;</code>
     */
    com.google.protobuf.ByteString getIpv6Src();

    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_DST 
     * </pre>
     *
     * <code>bytes ipv6_dst = 30;</code>
     */
    com.google.protobuf.ByteString getIpv6Dst();

    /**
     * <pre>
     *#define OXM_OF_IPV6_FLABEL   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
     *#define OXM_OF_IPV6_FLABEL_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
     * </pre>
     *
     * <code>uint32 ipv6_flabel = 31;</code>
     */
    int getIpv6Flabel();

    /**
     * <pre>
     *#define OXM_OF_ICMPV6_TYPE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_TYPE, 1)
     *#define OXM_OF_ICMPV6_CODE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_CODE, 1)
     * </pre>
     *
     * <code>uint32 icmpv6_type = 32;</code>
     */
    int getIcmpv6Type();

    /**
     * <pre>
     * For OFPXMT_OFB_ICMPV6_CODE 
     * </pre>
     *
     * <code>uint32 icmpv6_code = 33;</code>
     */
    int getIcmpv6Code();

    /**
     * <pre>
     *#define OXM_OF_IPV6_ND_TARGET OXM_HEADER &#92;
     *    (0x8000, OFPXMT_OFB_IPV6_ND_TARGET, 16)
     * </pre>
     *
     * <code>bytes ipv6_nd_target = 34;</code>
     */
    com.google.protobuf.ByteString getIpv6NdTarget();

    /**
     * <pre>
     *#define OXM_OF_IPV6_ND_SLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_SLL, 6)
     * </pre>
     *
     * <code>bytes ipv6_nd_ssl = 35;</code>
     */
    com.google.protobuf.ByteString getIpv6NdSsl();

    /**
     * <pre>
     *#define OXM_OF_IPV6_ND_TLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_TLL, 6)
     * </pre>
     *
     * <code>bytes ipv6_nd_tll = 36;</code>
     */
    com.google.protobuf.ByteString getIpv6NdTll();

    /**
     * <pre>
     *#define OXM_OF_MPLS_LABEL  OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_LABEL, 4)
     * </pre>
     *
     * <code>uint32 mpls_label = 37;</code>
     */
    int getMplsLabel();

    /**
     * <pre>
     *#define OXM_OF_MPLS_TC     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_TC, 1)
     * </pre>
     *
     * <code>uint32 mpls_tc = 38;</code>
     */
    int getMplsTc();

    /**
     * <pre>
     *#define OXM_OF_MPLS_BOS     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_BOS, 1)
     * </pre>
     *
     * <code>uint32 mpls_bos = 39;</code>
     */
    int getMplsBos();

    /**
     * <pre>
     *#define OXM_OF_PBB_ISID   OXM_HEADER  (0x8000, OFPXMT_OFB_PBB_ISID, 3)
     *#define OXM_OF_PBB_ISID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_PBB_ISID, 3)
     * </pre>
     *
     * <code>uint32 pbb_isid = 40;</code>
     */
    int getPbbIsid();

    /**
     * <pre>
     *#define OXM_OF_TUNNEL_ID    OXM_HEADER  (0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
     *#define OXM_OF_TUNNEL_ID_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
     * </pre>
     *
     * <code>uint64 tunnel_id = 41;</code>
     */
    long getTunnelId();

    /**
     * <pre>
     *#define OXM_OF_IPV6_EXTHDR   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
     *#define OXM_OF_IPV6_EXTHDR_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
     * </pre>
     *
     * <code>uint32 ipv6_exthdr = 42;</code>
     */
    int getIpv6Exthdr();

    /**
     * <pre>
     * For OFPXMT_OFB_METADATA 
     * </pre>
     *
     * <code>uint64 table_metadata_mask = 105;</code>
     */
    long getTableMetadataMask();

    /**
     * <pre>
     * For OFPXMT_OFB_ETH_DST (exactly 6 bytes)
     * </pre>
     *
     * <code>bytes eth_dst_mask = 106;</code>
     */
    com.google.protobuf.ByteString getEthDstMask();

    /**
     * <pre>
     * For OFPXMT_OFB_ETH_SRC (exactly 6 bytes)
     * </pre>
     *
     * <code>bytes eth_src_mask = 107;</code>
     */
    com.google.protobuf.ByteString getEthSrcMask();

    /**
     * <pre>
     * For OFPXMT_OFB_VLAN_VID 
     * </pre>
     *
     * <code>uint32 vlan_vid_mask = 109;</code>
     */
    int getVlanVidMask();

    /**
     * <pre>
     * For OFPXMT_OFB_IPV4_SRC 
     * </pre>
     *
     * <code>uint32 ipv4_src_mask = 114;</code>
     */
    int getIpv4SrcMask();

    /**
     * <pre>
     * For OFPXMT_OFB_IPV4_DST 
     * </pre>
     *
     * <code>uint32 ipv4_dst_mask = 115;</code>
     */
    int getIpv4DstMask();

    /**
     * <pre>
     * For OFPXMT_OFB_ARP_SPA 
     * </pre>
     *
     * <code>uint32 arp_spa_mask = 125;</code>
     */
    int getArpSpaMask();

    /**
     * <pre>
     * For OFPXMT_OFB_ARP_TPA 
     * </pre>
     *
     * <code>uint32 arp_tpa_mask = 126;</code>
     */
    int getArpTpaMask();

    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_SRC 
     * </pre>
     *
     * <code>bytes ipv6_src_mask = 129;</code>
     */
    com.google.protobuf.ByteString getIpv6SrcMask();

    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_DST 
     * </pre>
     *
     * <code>bytes ipv6_dst_mask = 130;</code>
     */
    com.google.protobuf.ByteString getIpv6DstMask();

    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_FLABEL 
     * </pre>
     *
     * <code>uint32 ipv6_flabel_mask = 131;</code>
     */
    int getIpv6FlabelMask();

    /**
     * <pre>
     * For OFPXMT_OFB_PBB_ISID 
     * </pre>
     *
     * <code>uint32 pbb_isid_mask = 140;</code>
     */
    int getPbbIsidMask();

    /**
     * <pre>
     * For OFPXMT_OFB_TUNNEL_ID 
     * </pre>
     *
     * <code>uint64 tunnel_id_mask = 141;</code>
     */
    long getTunnelIdMask();

    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_EXTHDR 
     * </pre>
     *
     * <code>uint32 ipv6_exthdr_mask = 142;</code>
     */
    int getIpv6ExthdrMask();

    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.ValueCase getValueCase();

    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.MaskCase getMaskCase();
  }
  /**
   * <pre>
   * OXM OpenFlow Basic Match Field 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_oxm_ofb_field}
   */
  public  static final class ofp_oxm_ofb_field extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_oxm_ofb_field)
      ofp_oxm_ofb_fieldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_oxm_ofb_field.newBuilder() to construct.
    private ofp_oxm_ofb_field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_oxm_ofb_field() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_oxm_ofb_field();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_oxm_ofb_field(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              hasMask_ = input.readBool();
              break;
            }
            case 24: {
              valueCase_ = 3;
              value_ = input.readUInt32();
              break;
            }
            case 32: {
              valueCase_ = 4;
              value_ = input.readUInt32();
              break;
            }
            case 40: {
              valueCase_ = 5;
              value_ = input.readUInt64();
              break;
            }
            case 50: {
              valueCase_ = 6;
              value_ = input.readBytes();
              break;
            }
            case 58: {
              valueCase_ = 7;
              value_ = input.readBytes();
              break;
            }
            case 64: {
              valueCase_ = 8;
              value_ = input.readUInt32();
              break;
            }
            case 72: {
              valueCase_ = 9;
              value_ = input.readUInt32();
              break;
            }
            case 80: {
              valueCase_ = 10;
              value_ = input.readUInt32();
              break;
            }
            case 88: {
              valueCase_ = 11;
              value_ = input.readUInt32();
              break;
            }
            case 96: {
              valueCase_ = 12;
              value_ = input.readUInt32();
              break;
            }
            case 104: {
              valueCase_ = 13;
              value_ = input.readUInt32();
              break;
            }
            case 112: {
              valueCase_ = 14;
              value_ = input.readUInt32();
              break;
            }
            case 120: {
              valueCase_ = 15;
              value_ = input.readUInt32();
              break;
            }
            case 128: {
              valueCase_ = 16;
              value_ = input.readUInt32();
              break;
            }
            case 136: {
              valueCase_ = 17;
              value_ = input.readUInt32();
              break;
            }
            case 144: {
              valueCase_ = 18;
              value_ = input.readUInt32();
              break;
            }
            case 152: {
              valueCase_ = 19;
              value_ = input.readUInt32();
              break;
            }
            case 160: {
              valueCase_ = 20;
              value_ = input.readUInt32();
              break;
            }
            case 168: {
              valueCase_ = 21;
              value_ = input.readUInt32();
              break;
            }
            case 176: {
              valueCase_ = 22;
              value_ = input.readUInt32();
              break;
            }
            case 184: {
              valueCase_ = 23;
              value_ = input.readUInt32();
              break;
            }
            case 192: {
              valueCase_ = 24;
              value_ = input.readUInt32();
              break;
            }
            case 200: {
              valueCase_ = 25;
              value_ = input.readUInt32();
              break;
            }
            case 208: {
              valueCase_ = 26;
              value_ = input.readUInt32();
              break;
            }
            case 218: {
              valueCase_ = 27;
              value_ = input.readBytes();
              break;
            }
            case 226: {
              valueCase_ = 28;
              value_ = input.readBytes();
              break;
            }
            case 234: {
              valueCase_ = 29;
              value_ = input.readBytes();
              break;
            }
            case 242: {
              valueCase_ = 30;
              value_ = input.readBytes();
              break;
            }
            case 248: {
              valueCase_ = 31;
              value_ = input.readUInt32();
              break;
            }
            case 256: {
              valueCase_ = 32;
              value_ = input.readUInt32();
              break;
            }
            case 264: {
              valueCase_ = 33;
              value_ = input.readUInt32();
              break;
            }
            case 274: {
              valueCase_ = 34;
              value_ = input.readBytes();
              break;
            }
            case 282: {
              valueCase_ = 35;
              value_ = input.readBytes();
              break;
            }
            case 290: {
              valueCase_ = 36;
              value_ = input.readBytes();
              break;
            }
            case 296: {
              valueCase_ = 37;
              value_ = input.readUInt32();
              break;
            }
            case 304: {
              valueCase_ = 38;
              value_ = input.readUInt32();
              break;
            }
            case 312: {
              valueCase_ = 39;
              value_ = input.readUInt32();
              break;
            }
            case 320: {
              valueCase_ = 40;
              value_ = input.readUInt32();
              break;
            }
            case 328: {
              valueCase_ = 41;
              value_ = input.readUInt64();
              break;
            }
            case 336: {
              valueCase_ = 42;
              value_ = input.readUInt32();
              break;
            }
            case 840: {
              maskCase_ = 105;
              mask_ = input.readUInt64();
              break;
            }
            case 850: {
              maskCase_ = 106;
              mask_ = input.readBytes();
              break;
            }
            case 858: {
              maskCase_ = 107;
              mask_ = input.readBytes();
              break;
            }
            case 872: {
              maskCase_ = 109;
              mask_ = input.readUInt32();
              break;
            }
            case 912: {
              maskCase_ = 114;
              mask_ = input.readUInt32();
              break;
            }
            case 920: {
              maskCase_ = 115;
              mask_ = input.readUInt32();
              break;
            }
            case 1000: {
              maskCase_ = 125;
              mask_ = input.readUInt32();
              break;
            }
            case 1008: {
              maskCase_ = 126;
              mask_ = input.readUInt32();
              break;
            }
            case 1034: {
              maskCase_ = 129;
              mask_ = input.readBytes();
              break;
            }
            case 1042: {
              maskCase_ = 130;
              mask_ = input.readBytes();
              break;
            }
            case 1048: {
              maskCase_ = 131;
              mask_ = input.readUInt32();
              break;
            }
            case 1120: {
              maskCase_ = 140;
              mask_ = input.readUInt32();
              break;
            }
            case 1128: {
              maskCase_ = 141;
              mask_ = input.readUInt64();
              break;
            }
            case 1136: {
              maskCase_ = 142;
              mask_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_ofb_field_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_ofb_field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      PORT(3),
      PHYSICAL_PORT(4),
      TABLE_METADATA(5),
      ETH_DST(6),
      ETH_SRC(7),
      ETH_TYPE(8),
      VLAN_VID(9),
      VLAN_PCP(10),
      IP_DSCP(11),
      IP_ECN(12),
      IP_PROTO(13),
      IPV4_SRC(14),
      IPV4_DST(15),
      TCP_SRC(16),
      TCP_DST(17),
      UDP_SRC(18),
      UDP_DST(19),
      SCTP_SRC(20),
      SCTP_DST(21),
      ICMPV4_TYPE(22),
      ICMPV4_CODE(23),
      ARP_OP(24),
      ARP_SPA(25),
      ARP_TPA(26),
      ARP_SHA(27),
      ARP_THA(28),
      IPV6_SRC(29),
      IPV6_DST(30),
      IPV6_FLABEL(31),
      ICMPV6_TYPE(32),
      ICMPV6_CODE(33),
      IPV6_ND_TARGET(34),
      IPV6_ND_SSL(35),
      IPV6_ND_TLL(36),
      MPLS_LABEL(37),
      MPLS_TC(38),
      MPLS_BOS(39),
      PBB_ISID(40),
      TUNNEL_ID(41),
      IPV6_EXTHDR(42),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 3: return PORT;
          case 4: return PHYSICAL_PORT;
          case 5: return TABLE_METADATA;
          case 6: return ETH_DST;
          case 7: return ETH_SRC;
          case 8: return ETH_TYPE;
          case 9: return VLAN_VID;
          case 10: return VLAN_PCP;
          case 11: return IP_DSCP;
          case 12: return IP_ECN;
          case 13: return IP_PROTO;
          case 14: return IPV4_SRC;
          case 15: return IPV4_DST;
          case 16: return TCP_SRC;
          case 17: return TCP_DST;
          case 18: return UDP_SRC;
          case 19: return UDP_DST;
          case 20: return SCTP_SRC;
          case 21: return SCTP_DST;
          case 22: return ICMPV4_TYPE;
          case 23: return ICMPV4_CODE;
          case 24: return ARP_OP;
          case 25: return ARP_SPA;
          case 26: return ARP_TPA;
          case 27: return ARP_SHA;
          case 28: return ARP_THA;
          case 29: return IPV6_SRC;
          case 30: return IPV6_DST;
          case 31: return IPV6_FLABEL;
          case 32: return ICMPV6_TYPE;
          case 33: return ICMPV6_CODE;
          case 34: return IPV6_ND_TARGET;
          case 35: return IPV6_ND_SSL;
          case 36: return IPV6_ND_TLL;
          case 37: return MPLS_LABEL;
          case 38: return MPLS_TC;
          case 39: return MPLS_BOS;
          case 40: return PBB_ISID;
          case 41: return TUNNEL_ID;
          case 42: return IPV6_EXTHDR;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    private int maskCase_ = 0;
    private java.lang.Object mask_;
    public enum MaskCase
        implements com.google.protobuf.Internal.EnumLite {
      TABLE_METADATA_MASK(105),
      ETH_DST_MASK(106),
      ETH_SRC_MASK(107),
      VLAN_VID_MASK(109),
      IPV4_SRC_MASK(114),
      IPV4_DST_MASK(115),
      ARP_SPA_MASK(125),
      ARP_TPA_MASK(126),
      IPV6_SRC_MASK(129),
      IPV6_DST_MASK(130),
      IPV6_FLABEL_MASK(131),
      PBB_ISID_MASK(140),
      TUNNEL_ID_MASK(141),
      IPV6_EXTHDR_MASK(142),
      MASK_NOT_SET(0);
      private final int value;
      private MaskCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MaskCase valueOf(int value) {
        return forNumber(value);
      }

      public static MaskCase forNumber(int value) {
        switch (value) {
          case 105: return TABLE_METADATA_MASK;
          case 106: return ETH_DST_MASK;
          case 107: return ETH_SRC_MASK;
          case 109: return VLAN_VID_MASK;
          case 114: return IPV4_SRC_MASK;
          case 115: return IPV4_DST_MASK;
          case 125: return ARP_SPA_MASK;
          case 126: return ARP_TPA_MASK;
          case 129: return IPV6_SRC_MASK;
          case 130: return IPV6_DST_MASK;
          case 131: return IPV6_FLABEL_MASK;
          case 140: return PBB_ISID_MASK;
          case 141: return TUNNEL_ID_MASK;
          case 142: return IPV6_EXTHDR_MASK;
          case 0: return MASK_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MaskCase
    getMaskCase() {
      return MaskCase.forNumber(
          maskCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types result = org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types.UNRECOGNIZED : result;
    }

    public static final int HAS_MASK_FIELD_NUMBER = 2;
    private boolean hasMask_;
    /**
     * <code>bool has_mask = 2;</code>
     */
    public boolean getHasMask() {
      return hasMask_;
    }

    public static final int PORT_FIELD_NUMBER = 3;
    /**
     * <pre>
     *#define OXM_OF_IN_PORT    OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PORT, 4)
     * </pre>
     *
     * <code>uint32 port = 3;</code>
     */
    public int getPort() {
      if (valueCase_ == 3) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int PHYSICAL_PORT_FIELD_NUMBER = 4;
    /**
     * <pre>
     *#define OXM_OF_IN_PHY_PORT OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PHY_PORT, 4)
     * </pre>
     *
     * <code>uint32 physical_port = 4;</code>
     */
    public int getPhysicalPort() {
      if (valueCase_ == 4) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int TABLE_METADATA_FIELD_NUMBER = 5;
    /**
     * <pre>
     *#define OXM_OF_METADATA   OXM_HEADER  (0x8000, OFPXMT_OFB_METADATA, 8)
     *#define OXM_OF_METADATA_W OXM_HEADER_W(0x8000, OFPXMT_OFB_METADATA, 8)
     * </pre>
     *
     * <code>uint64 table_metadata = 5;</code>
     */
    public long getTableMetadata() {
      if (valueCase_ == 5) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    public static final int ETH_DST_FIELD_NUMBER = 6;
    /**
     * <pre>
     *#define OXM_OF_ETH_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_DST, 6)
     *#define OXM_OF_ETH_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_DST, 6)
     *#define OXM_OF_ETH_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_SRC, 6)
     *#define OXM_OF_ETH_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_SRC, 6)
     * </pre>
     *
     * <code>bytes eth_dst = 6;</code>
     */
    public com.google.protobuf.ByteString getEthDst() {
      if (valueCase_ == 6) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int ETH_SRC_FIELD_NUMBER = 7;
    /**
     * <pre>
     * Used for OFPXMT_OFB_ETH_SRC (exactly 6 bytes) 
     * </pre>
     *
     * <code>bytes eth_src = 7;</code>
     */
    public com.google.protobuf.ByteString getEthSrc() {
      if (valueCase_ == 7) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int ETH_TYPE_FIELD_NUMBER = 8;
    /**
     * <pre>
     *#define OXM_OF_ETH_TYPE   OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_TYPE,2)
     * </pre>
     *
     * <code>uint32 eth_type = 8;</code>
     */
    public int getEthType() {
      if (valueCase_ == 8) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int VLAN_VID_FIELD_NUMBER = 9;
    /**
     * <pre>
     *#define OXM_OF_VLAN_VID   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_VID, 2)
     *#define OXM_OF_VLAN_VID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_VLAN_VID, 2)
     * </pre>
     *
     * <code>uint32 vlan_vid = 9;</code>
     */
    public int getVlanVid() {
      if (valueCase_ == 9) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int VLAN_PCP_FIELD_NUMBER = 10;
    /**
     * <pre>
     *#define OXM_OF_VLAN_PCP   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_PCP, 1)
     * </pre>
     *
     * <code>uint32 vlan_pcp = 10;</code>
     */
    public int getVlanPcp() {
      if (valueCase_ == 10) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int IP_DSCP_FIELD_NUMBER = 11;
    /**
     * <pre>
     *#define OXM_OF_IP_DSCP     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_DSCP, 1)
     * </pre>
     *
     * <code>uint32 ip_dscp = 11;</code>
     */
    public int getIpDscp() {
      if (valueCase_ == 11) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int IP_ECN_FIELD_NUMBER = 12;
    /**
     * <pre>
     *#define OXM_OF_IP_ECN     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_ECN, 1)
     * </pre>
     *
     * <code>uint32 ip_ecn = 12;</code>
     */
    public int getIpEcn() {
      if (valueCase_ == 12) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int IP_PROTO_FIELD_NUMBER = 13;
    /**
     * <pre>
     *#define OXM_OF_IP_PROTO   OXM_HEADER  (0x8000, OFPXMT_OFB_IP_PROTO, 1)
     * </pre>
     *
     * <code>uint32 ip_proto = 13;</code>
     */
    public int getIpProto() {
      if (valueCase_ == 13) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int IPV4_SRC_FIELD_NUMBER = 14;
    /**
     * <pre>
     *#define OXM_OF_IPV4_SRC     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_SRC, 4)
     *#define OXM_OF_IPV4_SRC_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_SRC, 4)
     *#define OXM_OF_IPV4_DST     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_DST, 4)
     *#define OXM_OF_IPV4_DST_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_DST, 4)
     * </pre>
     *
     * <code>uint32 ipv4_src = 14;</code>
     */
    public int getIpv4Src() {
      if (valueCase_ == 14) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int IPV4_DST_FIELD_NUMBER = 15;
    /**
     * <pre>
     * Used for OFPXMT_OFB_IPV4_DST 
     * </pre>
     *
     * <code>uint32 ipv4_dst = 15;</code>
     */
    public int getIpv4Dst() {
      if (valueCase_ == 15) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int TCP_SRC_FIELD_NUMBER = 16;
    /**
     * <pre>
     *#define OXM_OF_TCP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_SRC, 2)
     *#define OXM_OF_TCP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_DST, 2)
     * </pre>
     *
     * <code>uint32 tcp_src = 16;</code>
     */
    public int getTcpSrc() {
      if (valueCase_ == 16) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int TCP_DST_FIELD_NUMBER = 17;
    /**
     * <pre>
     * Used for OFPXMT_OFB_TCP_DST 
     * </pre>
     *
     * <code>uint32 tcp_dst = 17;</code>
     */
    public int getTcpDst() {
      if (valueCase_ == 17) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int UDP_SRC_FIELD_NUMBER = 18;
    /**
     * <pre>
     *#define OXM_OF_UDP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_SRC, 2)
     *#define OXM_OF_UDP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_DST, 2)
     * </pre>
     *
     * <code>uint32 udp_src = 18;</code>
     */
    public int getUdpSrc() {
      if (valueCase_ == 18) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int UDP_DST_FIELD_NUMBER = 19;
    /**
     * <pre>
     * Used for OFPXMT_OFB_UDP_DST 
     * </pre>
     *
     * <code>uint32 udp_dst = 19;</code>
     */
    public int getUdpDst() {
      if (valueCase_ == 19) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int SCTP_SRC_FIELD_NUMBER = 20;
    /**
     * <pre>
     *#define OXM_OF_SCTP_SRC   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_SRC, 2)
     *#define OXM_OF_SCTP_DST   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_DST, 2)
     * </pre>
     *
     * <code>uint32 sctp_src = 20;</code>
     */
    public int getSctpSrc() {
      if (valueCase_ == 20) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int SCTP_DST_FIELD_NUMBER = 21;
    /**
     * <pre>
     * Used for OFPXMT_OFB_SCTP_DST 
     * </pre>
     *
     * <code>uint32 sctp_dst = 21;</code>
     */
    public int getSctpDst() {
      if (valueCase_ == 21) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ICMPV4_TYPE_FIELD_NUMBER = 22;
    /**
     * <pre>
     *#define OXM_OF_ICMPV4_TYPE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_TYPE, 1)
     *#define OXM_OF_ICMPV4_CODE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_CODE, 1)
     * </pre>
     *
     * <code>uint32 icmpv4_type = 22;</code>
     */
    public int getIcmpv4Type() {
      if (valueCase_ == 22) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ICMPV4_CODE_FIELD_NUMBER = 23;
    /**
     * <pre>
     * Used for OFPXMT_OFB_ICMPV4_CODE 
     * </pre>
     *
     * <code>uint32 icmpv4_code = 23;</code>
     */
    public int getIcmpv4Code() {
      if (valueCase_ == 23) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ARP_OP_FIELD_NUMBER = 24;
    /**
     * <pre>
     *#define OXM_OF_ARP_OP     OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_OP, 2)
     * </pre>
     *
     * <code>uint32 arp_op = 24;</code>
     */
    public int getArpOp() {
      if (valueCase_ == 24) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ARP_SPA_FIELD_NUMBER = 25;
    /**
     * <pre>
     *#define OXM_OF_ARP_SPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_SPA, 4)
     *#define OXM_OF_ARP_SPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_SPA, 4)
     *#define OXM_OF_ARP_TPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_TPA, 4)
     *#define OXM_OF_ARP_TPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_TPA, 4)
     * </pre>
     *
     * <code>uint32 arp_spa = 25;</code>
     */
    public int getArpSpa() {
      if (valueCase_ == 25) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ARP_TPA_FIELD_NUMBER = 26;
    /**
     * <pre>
     * For OFPXMT_OFB_ARP_TPA 
     * </pre>
     *
     * <code>uint32 arp_tpa = 26;</code>
     */
    public int getArpTpa() {
      if (valueCase_ == 26) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ARP_SHA_FIELD_NUMBER = 27;
    /**
     * <pre>
     *#define OXM_OF_ARP_SHA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_SHA, 6)
     *#define OXM_OF_ARP_SHA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_SHA, 6)
     *#define OXM_OF_ARP_THA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_THA, 6)
     *#define OXM_OF_ARP_THA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_THA, 6)
     * </pre>
     *
     * <code>bytes arp_sha = 27;</code>
     */
    public com.google.protobuf.ByteString getArpSha() {
      if (valueCase_ == 27) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int ARP_THA_FIELD_NUMBER = 28;
    /**
     * <pre>
     * For OFPXMT_OFB_ARP_THA (6 bytes) 
     * </pre>
     *
     * <code>bytes arp_tha = 28;</code>
     */
    public com.google.protobuf.ByteString getArpTha() {
      if (valueCase_ == 28) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int IPV6_SRC_FIELD_NUMBER = 29;
    /**
     * <pre>
     *#define OXM_OF_IPV6_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_SRC, 16)
     *#define OXM_OF_IPV6_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_SRC, 16)
     *#define OXM_OF_IPV6_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_DST, 16)
     *#define OXM_OF_IPV6_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_DST, 16)
     * </pre>
     *
     * <code>bytes ipv6_src = 29;</code>
     */
    public com.google.protobuf.ByteString getIpv6Src() {
      if (valueCase_ == 29) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int IPV6_DST_FIELD_NUMBER = 30;
    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_DST 
     * </pre>
     *
     * <code>bytes ipv6_dst = 30;</code>
     */
    public com.google.protobuf.ByteString getIpv6Dst() {
      if (valueCase_ == 30) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int IPV6_FLABEL_FIELD_NUMBER = 31;
    /**
     * <pre>
     *#define OXM_OF_IPV6_FLABEL   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
     *#define OXM_OF_IPV6_FLABEL_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
     * </pre>
     *
     * <code>uint32 ipv6_flabel = 31;</code>
     */
    public int getIpv6Flabel() {
      if (valueCase_ == 31) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ICMPV6_TYPE_FIELD_NUMBER = 32;
    /**
     * <pre>
     *#define OXM_OF_ICMPV6_TYPE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_TYPE, 1)
     *#define OXM_OF_ICMPV6_CODE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_CODE, 1)
     * </pre>
     *
     * <code>uint32 icmpv6_type = 32;</code>
     */
    public int getIcmpv6Type() {
      if (valueCase_ == 32) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int ICMPV6_CODE_FIELD_NUMBER = 33;
    /**
     * <pre>
     * For OFPXMT_OFB_ICMPV6_CODE 
     * </pre>
     *
     * <code>uint32 icmpv6_code = 33;</code>
     */
    public int getIcmpv6Code() {
      if (valueCase_ == 33) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int IPV6_ND_TARGET_FIELD_NUMBER = 34;
    /**
     * <pre>
     *#define OXM_OF_IPV6_ND_TARGET OXM_HEADER &#92;
     *    (0x8000, OFPXMT_OFB_IPV6_ND_TARGET, 16)
     * </pre>
     *
     * <code>bytes ipv6_nd_target = 34;</code>
     */
    public com.google.protobuf.ByteString getIpv6NdTarget() {
      if (valueCase_ == 34) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int IPV6_ND_SSL_FIELD_NUMBER = 35;
    /**
     * <pre>
     *#define OXM_OF_IPV6_ND_SLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_SLL, 6)
     * </pre>
     *
     * <code>bytes ipv6_nd_ssl = 35;</code>
     */
    public com.google.protobuf.ByteString getIpv6NdSsl() {
      if (valueCase_ == 35) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int IPV6_ND_TLL_FIELD_NUMBER = 36;
    /**
     * <pre>
     *#define OXM_OF_IPV6_ND_TLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_TLL, 6)
     * </pre>
     *
     * <code>bytes ipv6_nd_tll = 36;</code>
     */
    public com.google.protobuf.ByteString getIpv6NdTll() {
      if (valueCase_ == 36) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int MPLS_LABEL_FIELD_NUMBER = 37;
    /**
     * <pre>
     *#define OXM_OF_MPLS_LABEL  OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_LABEL, 4)
     * </pre>
     *
     * <code>uint32 mpls_label = 37;</code>
     */
    public int getMplsLabel() {
      if (valueCase_ == 37) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int MPLS_TC_FIELD_NUMBER = 38;
    /**
     * <pre>
     *#define OXM_OF_MPLS_TC     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_TC, 1)
     * </pre>
     *
     * <code>uint32 mpls_tc = 38;</code>
     */
    public int getMplsTc() {
      if (valueCase_ == 38) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int MPLS_BOS_FIELD_NUMBER = 39;
    /**
     * <pre>
     *#define OXM_OF_MPLS_BOS     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_BOS, 1)
     * </pre>
     *
     * <code>uint32 mpls_bos = 39;</code>
     */
    public int getMplsBos() {
      if (valueCase_ == 39) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int PBB_ISID_FIELD_NUMBER = 40;
    /**
     * <pre>
     *#define OXM_OF_PBB_ISID   OXM_HEADER  (0x8000, OFPXMT_OFB_PBB_ISID, 3)
     *#define OXM_OF_PBB_ISID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_PBB_ISID, 3)
     * </pre>
     *
     * <code>uint32 pbb_isid = 40;</code>
     */
    public int getPbbIsid() {
      if (valueCase_ == 40) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int TUNNEL_ID_FIELD_NUMBER = 41;
    /**
     * <pre>
     *#define OXM_OF_TUNNEL_ID    OXM_HEADER  (0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
     *#define OXM_OF_TUNNEL_ID_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
     * </pre>
     *
     * <code>uint64 tunnel_id = 41;</code>
     */
    public long getTunnelId() {
      if (valueCase_ == 41) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    public static final int IPV6_EXTHDR_FIELD_NUMBER = 42;
    /**
     * <pre>
     *#define OXM_OF_IPV6_EXTHDR   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
     *#define OXM_OF_IPV6_EXTHDR_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
     * </pre>
     *
     * <code>uint32 ipv6_exthdr = 42;</code>
     */
    public int getIpv6Exthdr() {
      if (valueCase_ == 42) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int TABLE_METADATA_MASK_FIELD_NUMBER = 105;
    /**
     * <pre>
     * For OFPXMT_OFB_METADATA 
     * </pre>
     *
     * <code>uint64 table_metadata_mask = 105;</code>
     */
    public long getTableMetadataMask() {
      if (maskCase_ == 105) {
        return (java.lang.Long) mask_;
      }
      return 0L;
    }

    public static final int ETH_DST_MASK_FIELD_NUMBER = 106;
    /**
     * <pre>
     * For OFPXMT_OFB_ETH_DST (exactly 6 bytes)
     * </pre>
     *
     * <code>bytes eth_dst_mask = 106;</code>
     */
    public com.google.protobuf.ByteString getEthDstMask() {
      if (maskCase_ == 106) {
        return (com.google.protobuf.ByteString) mask_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int ETH_SRC_MASK_FIELD_NUMBER = 107;
    /**
     * <pre>
     * For OFPXMT_OFB_ETH_SRC (exactly 6 bytes)
     * </pre>
     *
     * <code>bytes eth_src_mask = 107;</code>
     */
    public com.google.protobuf.ByteString getEthSrcMask() {
      if (maskCase_ == 107) {
        return (com.google.protobuf.ByteString) mask_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int VLAN_VID_MASK_FIELD_NUMBER = 109;
    /**
     * <pre>
     * For OFPXMT_OFB_VLAN_VID 
     * </pre>
     *
     * <code>uint32 vlan_vid_mask = 109;</code>
     */
    public int getVlanVidMask() {
      if (maskCase_ == 109) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    public static final int IPV4_SRC_MASK_FIELD_NUMBER = 114;
    /**
     * <pre>
     * For OFPXMT_OFB_IPV4_SRC 
     * </pre>
     *
     * <code>uint32 ipv4_src_mask = 114;</code>
     */
    public int getIpv4SrcMask() {
      if (maskCase_ == 114) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    public static final int IPV4_DST_MASK_FIELD_NUMBER = 115;
    /**
     * <pre>
     * For OFPXMT_OFB_IPV4_DST 
     * </pre>
     *
     * <code>uint32 ipv4_dst_mask = 115;</code>
     */
    public int getIpv4DstMask() {
      if (maskCase_ == 115) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    public static final int ARP_SPA_MASK_FIELD_NUMBER = 125;
    /**
     * <pre>
     * For OFPXMT_OFB_ARP_SPA 
     * </pre>
     *
     * <code>uint32 arp_spa_mask = 125;</code>
     */
    public int getArpSpaMask() {
      if (maskCase_ == 125) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    public static final int ARP_TPA_MASK_FIELD_NUMBER = 126;
    /**
     * <pre>
     * For OFPXMT_OFB_ARP_TPA 
     * </pre>
     *
     * <code>uint32 arp_tpa_mask = 126;</code>
     */
    public int getArpTpaMask() {
      if (maskCase_ == 126) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    public static final int IPV6_SRC_MASK_FIELD_NUMBER = 129;
    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_SRC 
     * </pre>
     *
     * <code>bytes ipv6_src_mask = 129;</code>
     */
    public com.google.protobuf.ByteString getIpv6SrcMask() {
      if (maskCase_ == 129) {
        return (com.google.protobuf.ByteString) mask_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int IPV6_DST_MASK_FIELD_NUMBER = 130;
    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_DST 
     * </pre>
     *
     * <code>bytes ipv6_dst_mask = 130;</code>
     */
    public com.google.protobuf.ByteString getIpv6DstMask() {
      if (maskCase_ == 130) {
        return (com.google.protobuf.ByteString) mask_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int IPV6_FLABEL_MASK_FIELD_NUMBER = 131;
    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_FLABEL 
     * </pre>
     *
     * <code>uint32 ipv6_flabel_mask = 131;</code>
     */
    public int getIpv6FlabelMask() {
      if (maskCase_ == 131) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    public static final int PBB_ISID_MASK_FIELD_NUMBER = 140;
    /**
     * <pre>
     * For OFPXMT_OFB_PBB_ISID 
     * </pre>
     *
     * <code>uint32 pbb_isid_mask = 140;</code>
     */
    public int getPbbIsidMask() {
      if (maskCase_ == 140) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    public static final int TUNNEL_ID_MASK_FIELD_NUMBER = 141;
    /**
     * <pre>
     * For OFPXMT_OFB_TUNNEL_ID 
     * </pre>
     *
     * <code>uint64 tunnel_id_mask = 141;</code>
     */
    public long getTunnelIdMask() {
      if (maskCase_ == 141) {
        return (java.lang.Long) mask_;
      }
      return 0L;
    }

    public static final int IPV6_EXTHDR_MASK_FIELD_NUMBER = 142;
    /**
     * <pre>
     * For OFPXMT_OFB_IPV6_EXTHDR 
     * </pre>
     *
     * <code>uint32 ipv6_exthdr_mask = 142;</code>
     */
    public int getIpv6ExthdrMask() {
      if (maskCase_ == 142) {
        return (java.lang.Integer) mask_;
      }
      return 0;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types.OFPXMT_OFB_IN_PORT.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (hasMask_ != false) {
        output.writeBool(2, hasMask_);
      }
      if (valueCase_ == 3) {
        output.writeUInt32(
            3, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 4) {
        output.writeUInt32(
            4, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 5) {
        output.writeUInt64(
            5, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 6) {
        output.writeBytes(
            6, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 7) {
        output.writeBytes(
            7, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 8) {
        output.writeUInt32(
            8, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 9) {
        output.writeUInt32(
            9, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 10) {
        output.writeUInt32(
            10, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 11) {
        output.writeUInt32(
            11, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 12) {
        output.writeUInt32(
            12, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 13) {
        output.writeUInt32(
            13, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 14) {
        output.writeUInt32(
            14, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 15) {
        output.writeUInt32(
            15, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 16) {
        output.writeUInt32(
            16, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 17) {
        output.writeUInt32(
            17, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 18) {
        output.writeUInt32(
            18, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 19) {
        output.writeUInt32(
            19, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 20) {
        output.writeUInt32(
            20, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 21) {
        output.writeUInt32(
            21, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 22) {
        output.writeUInt32(
            22, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 23) {
        output.writeUInt32(
            23, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 24) {
        output.writeUInt32(
            24, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 25) {
        output.writeUInt32(
            25, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 26) {
        output.writeUInt32(
            26, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 27) {
        output.writeBytes(
            27, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 28) {
        output.writeBytes(
            28, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 29) {
        output.writeBytes(
            29, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 30) {
        output.writeBytes(
            30, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 31) {
        output.writeUInt32(
            31, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 32) {
        output.writeUInt32(
            32, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 33) {
        output.writeUInt32(
            33, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 34) {
        output.writeBytes(
            34, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 35) {
        output.writeBytes(
            35, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 36) {
        output.writeBytes(
            36, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 37) {
        output.writeUInt32(
            37, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 38) {
        output.writeUInt32(
            38, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 39) {
        output.writeUInt32(
            39, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 40) {
        output.writeUInt32(
            40, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 41) {
        output.writeUInt64(
            41, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 42) {
        output.writeUInt32(
            42, (int)((java.lang.Integer) value_));
      }
      if (maskCase_ == 105) {
        output.writeUInt64(
            105, (long)((java.lang.Long) mask_));
      }
      if (maskCase_ == 106) {
        output.writeBytes(
            106, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 107) {
        output.writeBytes(
            107, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 109) {
        output.writeUInt32(
            109, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 114) {
        output.writeUInt32(
            114, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 115) {
        output.writeUInt32(
            115, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 125) {
        output.writeUInt32(
            125, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 126) {
        output.writeUInt32(
            126, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 129) {
        output.writeBytes(
            129, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 130) {
        output.writeBytes(
            130, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 131) {
        output.writeUInt32(
            131, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 140) {
        output.writeUInt32(
            140, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 141) {
        output.writeUInt64(
            141, (long)((java.lang.Long) mask_));
      }
      if (maskCase_ == 142) {
        output.writeUInt32(
            142, (int)((java.lang.Integer) mask_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types.OFPXMT_OFB_IN_PORT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (hasMask_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, hasMask_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              3, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              4, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              5, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              6, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              7, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              8, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              9, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              10, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              11, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              12, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              13, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              14, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              15, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              16, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              17, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 18) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              18, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 19) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              19, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 20) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              20, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 21) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              21, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 22) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              22, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 23) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              23, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 24) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              24, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 25) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              25, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 26) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              26, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 27) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              27, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 28) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              28, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 29) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              29, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 30) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              30, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 31) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              31, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 32) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              32, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 33) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              33, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 34) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              34, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 35) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              35, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 36) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              36, (com.google.protobuf.ByteString) value_);
      }
      if (valueCase_ == 37) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              37, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 38) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              38, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 39) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              39, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 40) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              40, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 41) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              41, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 42) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              42, (int)((java.lang.Integer) value_));
      }
      if (maskCase_ == 105) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              105, (long)((java.lang.Long) mask_));
      }
      if (maskCase_ == 106) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              106, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 107) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              107, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 109) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              109, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 114) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              114, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 115) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              115, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 125) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              125, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 126) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              126, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 129) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              129, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 130) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              130, (com.google.protobuf.ByteString) mask_);
      }
      if (maskCase_ == 131) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              131, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 140) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              140, (int)((java.lang.Integer) mask_));
      }
      if (maskCase_ == 141) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              141, (long)((java.lang.Long) mask_));
      }
      if (maskCase_ == 142) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              142, (int)((java.lang.Integer) mask_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field other = (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) obj;

      if (type_ != other.type_) return false;
      if (getHasMask()
          != other.getHasMask()) return false;
      if (!getValueCase().equals(other.getValueCase())) return false;
      switch (valueCase_) {
        case 3:
          if (getPort()
              != other.getPort()) return false;
          break;
        case 4:
          if (getPhysicalPort()
              != other.getPhysicalPort()) return false;
          break;
        case 5:
          if (getTableMetadata()
              != other.getTableMetadata()) return false;
          break;
        case 6:
          if (!getEthDst()
              .equals(other.getEthDst())) return false;
          break;
        case 7:
          if (!getEthSrc()
              .equals(other.getEthSrc())) return false;
          break;
        case 8:
          if (getEthType()
              != other.getEthType()) return false;
          break;
        case 9:
          if (getVlanVid()
              != other.getVlanVid()) return false;
          break;
        case 10:
          if (getVlanPcp()
              != other.getVlanPcp()) return false;
          break;
        case 11:
          if (getIpDscp()
              != other.getIpDscp()) return false;
          break;
        case 12:
          if (getIpEcn()
              != other.getIpEcn()) return false;
          break;
        case 13:
          if (getIpProto()
              != other.getIpProto()) return false;
          break;
        case 14:
          if (getIpv4Src()
              != other.getIpv4Src()) return false;
          break;
        case 15:
          if (getIpv4Dst()
              != other.getIpv4Dst()) return false;
          break;
        case 16:
          if (getTcpSrc()
              != other.getTcpSrc()) return false;
          break;
        case 17:
          if (getTcpDst()
              != other.getTcpDst()) return false;
          break;
        case 18:
          if (getUdpSrc()
              != other.getUdpSrc()) return false;
          break;
        case 19:
          if (getUdpDst()
              != other.getUdpDst()) return false;
          break;
        case 20:
          if (getSctpSrc()
              != other.getSctpSrc()) return false;
          break;
        case 21:
          if (getSctpDst()
              != other.getSctpDst()) return false;
          break;
        case 22:
          if (getIcmpv4Type()
              != other.getIcmpv4Type()) return false;
          break;
        case 23:
          if (getIcmpv4Code()
              != other.getIcmpv4Code()) return false;
          break;
        case 24:
          if (getArpOp()
              != other.getArpOp()) return false;
          break;
        case 25:
          if (getArpSpa()
              != other.getArpSpa()) return false;
          break;
        case 26:
          if (getArpTpa()
              != other.getArpTpa()) return false;
          break;
        case 27:
          if (!getArpSha()
              .equals(other.getArpSha())) return false;
          break;
        case 28:
          if (!getArpTha()
              .equals(other.getArpTha())) return false;
          break;
        case 29:
          if (!getIpv6Src()
              .equals(other.getIpv6Src())) return false;
          break;
        case 30:
          if (!getIpv6Dst()
              .equals(other.getIpv6Dst())) return false;
          break;
        case 31:
          if (getIpv6Flabel()
              != other.getIpv6Flabel()) return false;
          break;
        case 32:
          if (getIcmpv6Type()
              != other.getIcmpv6Type()) return false;
          break;
        case 33:
          if (getIcmpv6Code()
              != other.getIcmpv6Code()) return false;
          break;
        case 34:
          if (!getIpv6NdTarget()
              .equals(other.getIpv6NdTarget())) return false;
          break;
        case 35:
          if (!getIpv6NdSsl()
              .equals(other.getIpv6NdSsl())) return false;
          break;
        case 36:
          if (!getIpv6NdTll()
              .equals(other.getIpv6NdTll())) return false;
          break;
        case 37:
          if (getMplsLabel()
              != other.getMplsLabel()) return false;
          break;
        case 38:
          if (getMplsTc()
              != other.getMplsTc()) return false;
          break;
        case 39:
          if (getMplsBos()
              != other.getMplsBos()) return false;
          break;
        case 40:
          if (getPbbIsid()
              != other.getPbbIsid()) return false;
          break;
        case 41:
          if (getTunnelId()
              != other.getTunnelId()) return false;
          break;
        case 42:
          if (getIpv6Exthdr()
              != other.getIpv6Exthdr()) return false;
          break;
        case 0:
        default:
      }
      if (!getMaskCase().equals(other.getMaskCase())) return false;
      switch (maskCase_) {
        case 105:
          if (getTableMetadataMask()
              != other.getTableMetadataMask()) return false;
          break;
        case 106:
          if (!getEthDstMask()
              .equals(other.getEthDstMask())) return false;
          break;
        case 107:
          if (!getEthSrcMask()
              .equals(other.getEthSrcMask())) return false;
          break;
        case 109:
          if (getVlanVidMask()
              != other.getVlanVidMask()) return false;
          break;
        case 114:
          if (getIpv4SrcMask()
              != other.getIpv4SrcMask()) return false;
          break;
        case 115:
          if (getIpv4DstMask()
              != other.getIpv4DstMask()) return false;
          break;
        case 125:
          if (getArpSpaMask()
              != other.getArpSpaMask()) return false;
          break;
        case 126:
          if (getArpTpaMask()
              != other.getArpTpaMask()) return false;
          break;
        case 129:
          if (!getIpv6SrcMask()
              .equals(other.getIpv6SrcMask())) return false;
          break;
        case 130:
          if (!getIpv6DstMask()
              .equals(other.getIpv6DstMask())) return false;
          break;
        case 131:
          if (getIpv6FlabelMask()
              != other.getIpv6FlabelMask()) return false;
          break;
        case 140:
          if (getPbbIsidMask()
              != other.getPbbIsidMask()) return false;
          break;
        case 141:
          if (getTunnelIdMask()
              != other.getTunnelIdMask()) return false;
          break;
        case 142:
          if (getIpv6ExthdrMask()
              != other.getIpv6ExthdrMask()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + HAS_MASK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasMask());
      switch (valueCase_) {
        case 3:
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + getPort();
          break;
        case 4:
          hash = (37 * hash) + PHYSICAL_PORT_FIELD_NUMBER;
          hash = (53 * hash) + getPhysicalPort();
          break;
        case 5:
          hash = (37 * hash) + TABLE_METADATA_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTableMetadata());
          break;
        case 6:
          hash = (37 * hash) + ETH_DST_FIELD_NUMBER;
          hash = (53 * hash) + getEthDst().hashCode();
          break;
        case 7:
          hash = (37 * hash) + ETH_SRC_FIELD_NUMBER;
          hash = (53 * hash) + getEthSrc().hashCode();
          break;
        case 8:
          hash = (37 * hash) + ETH_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getEthType();
          break;
        case 9:
          hash = (37 * hash) + VLAN_VID_FIELD_NUMBER;
          hash = (53 * hash) + getVlanVid();
          break;
        case 10:
          hash = (37 * hash) + VLAN_PCP_FIELD_NUMBER;
          hash = (53 * hash) + getVlanPcp();
          break;
        case 11:
          hash = (37 * hash) + IP_DSCP_FIELD_NUMBER;
          hash = (53 * hash) + getIpDscp();
          break;
        case 12:
          hash = (37 * hash) + IP_ECN_FIELD_NUMBER;
          hash = (53 * hash) + getIpEcn();
          break;
        case 13:
          hash = (37 * hash) + IP_PROTO_FIELD_NUMBER;
          hash = (53 * hash) + getIpProto();
          break;
        case 14:
          hash = (37 * hash) + IPV4_SRC_FIELD_NUMBER;
          hash = (53 * hash) + getIpv4Src();
          break;
        case 15:
          hash = (37 * hash) + IPV4_DST_FIELD_NUMBER;
          hash = (53 * hash) + getIpv4Dst();
          break;
        case 16:
          hash = (37 * hash) + TCP_SRC_FIELD_NUMBER;
          hash = (53 * hash) + getTcpSrc();
          break;
        case 17:
          hash = (37 * hash) + TCP_DST_FIELD_NUMBER;
          hash = (53 * hash) + getTcpDst();
          break;
        case 18:
          hash = (37 * hash) + UDP_SRC_FIELD_NUMBER;
          hash = (53 * hash) + getUdpSrc();
          break;
        case 19:
          hash = (37 * hash) + UDP_DST_FIELD_NUMBER;
          hash = (53 * hash) + getUdpDst();
          break;
        case 20:
          hash = (37 * hash) + SCTP_SRC_FIELD_NUMBER;
          hash = (53 * hash) + getSctpSrc();
          break;
        case 21:
          hash = (37 * hash) + SCTP_DST_FIELD_NUMBER;
          hash = (53 * hash) + getSctpDst();
          break;
        case 22:
          hash = (37 * hash) + ICMPV4_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getIcmpv4Type();
          break;
        case 23:
          hash = (37 * hash) + ICMPV4_CODE_FIELD_NUMBER;
          hash = (53 * hash) + getIcmpv4Code();
          break;
        case 24:
          hash = (37 * hash) + ARP_OP_FIELD_NUMBER;
          hash = (53 * hash) + getArpOp();
          break;
        case 25:
          hash = (37 * hash) + ARP_SPA_FIELD_NUMBER;
          hash = (53 * hash) + getArpSpa();
          break;
        case 26:
          hash = (37 * hash) + ARP_TPA_FIELD_NUMBER;
          hash = (53 * hash) + getArpTpa();
          break;
        case 27:
          hash = (37 * hash) + ARP_SHA_FIELD_NUMBER;
          hash = (53 * hash) + getArpSha().hashCode();
          break;
        case 28:
          hash = (37 * hash) + ARP_THA_FIELD_NUMBER;
          hash = (53 * hash) + getArpTha().hashCode();
          break;
        case 29:
          hash = (37 * hash) + IPV6_SRC_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6Src().hashCode();
          break;
        case 30:
          hash = (37 * hash) + IPV6_DST_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6Dst().hashCode();
          break;
        case 31:
          hash = (37 * hash) + IPV6_FLABEL_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6Flabel();
          break;
        case 32:
          hash = (37 * hash) + ICMPV6_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getIcmpv6Type();
          break;
        case 33:
          hash = (37 * hash) + ICMPV6_CODE_FIELD_NUMBER;
          hash = (53 * hash) + getIcmpv6Code();
          break;
        case 34:
          hash = (37 * hash) + IPV6_ND_TARGET_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6NdTarget().hashCode();
          break;
        case 35:
          hash = (37 * hash) + IPV6_ND_SSL_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6NdSsl().hashCode();
          break;
        case 36:
          hash = (37 * hash) + IPV6_ND_TLL_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6NdTll().hashCode();
          break;
        case 37:
          hash = (37 * hash) + MPLS_LABEL_FIELD_NUMBER;
          hash = (53 * hash) + getMplsLabel();
          break;
        case 38:
          hash = (37 * hash) + MPLS_TC_FIELD_NUMBER;
          hash = (53 * hash) + getMplsTc();
          break;
        case 39:
          hash = (37 * hash) + MPLS_BOS_FIELD_NUMBER;
          hash = (53 * hash) + getMplsBos();
          break;
        case 40:
          hash = (37 * hash) + PBB_ISID_FIELD_NUMBER;
          hash = (53 * hash) + getPbbIsid();
          break;
        case 41:
          hash = (37 * hash) + TUNNEL_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTunnelId());
          break;
        case 42:
          hash = (37 * hash) + IPV6_EXTHDR_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6Exthdr();
          break;
        case 0:
        default:
      }
      switch (maskCase_) {
        case 105:
          hash = (37 * hash) + TABLE_METADATA_MASK_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTableMetadataMask());
          break;
        case 106:
          hash = (37 * hash) + ETH_DST_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getEthDstMask().hashCode();
          break;
        case 107:
          hash = (37 * hash) + ETH_SRC_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getEthSrcMask().hashCode();
          break;
        case 109:
          hash = (37 * hash) + VLAN_VID_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getVlanVidMask();
          break;
        case 114:
          hash = (37 * hash) + IPV4_SRC_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getIpv4SrcMask();
          break;
        case 115:
          hash = (37 * hash) + IPV4_DST_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getIpv4DstMask();
          break;
        case 125:
          hash = (37 * hash) + ARP_SPA_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getArpSpaMask();
          break;
        case 126:
          hash = (37 * hash) + ARP_TPA_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getArpTpaMask();
          break;
        case 129:
          hash = (37 * hash) + IPV6_SRC_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6SrcMask().hashCode();
          break;
        case 130:
          hash = (37 * hash) + IPV6_DST_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6DstMask().hashCode();
          break;
        case 131:
          hash = (37 * hash) + IPV6_FLABEL_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6FlabelMask();
          break;
        case 140:
          hash = (37 * hash) + PBB_ISID_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getPbbIsidMask();
          break;
        case 141:
          hash = (37 * hash) + TUNNEL_ID_MASK_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTunnelIdMask());
          break;
        case 142:
          hash = (37 * hash) + IPV6_EXTHDR_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getIpv6ExthdrMask();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OXM OpenFlow Basic Match Field 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_oxm_ofb_field}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_oxm_ofb_field)
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_fieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_ofb_field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_ofb_field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        hasMask_ = false;

        valueCase_ = 0;
        value_ = null;
        maskCase_ = 0;
        mask_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_ofb_field_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field result = new org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field(this);
        result.type_ = type_;
        result.hasMask_ = hasMask_;
        if (valueCase_ == 3) {
          result.value_ = value_;
        }
        if (valueCase_ == 4) {
          result.value_ = value_;
        }
        if (valueCase_ == 5) {
          result.value_ = value_;
        }
        if (valueCase_ == 6) {
          result.value_ = value_;
        }
        if (valueCase_ == 7) {
          result.value_ = value_;
        }
        if (valueCase_ == 8) {
          result.value_ = value_;
        }
        if (valueCase_ == 9) {
          result.value_ = value_;
        }
        if (valueCase_ == 10) {
          result.value_ = value_;
        }
        if (valueCase_ == 11) {
          result.value_ = value_;
        }
        if (valueCase_ == 12) {
          result.value_ = value_;
        }
        if (valueCase_ == 13) {
          result.value_ = value_;
        }
        if (valueCase_ == 14) {
          result.value_ = value_;
        }
        if (valueCase_ == 15) {
          result.value_ = value_;
        }
        if (valueCase_ == 16) {
          result.value_ = value_;
        }
        if (valueCase_ == 17) {
          result.value_ = value_;
        }
        if (valueCase_ == 18) {
          result.value_ = value_;
        }
        if (valueCase_ == 19) {
          result.value_ = value_;
        }
        if (valueCase_ == 20) {
          result.value_ = value_;
        }
        if (valueCase_ == 21) {
          result.value_ = value_;
        }
        if (valueCase_ == 22) {
          result.value_ = value_;
        }
        if (valueCase_ == 23) {
          result.value_ = value_;
        }
        if (valueCase_ == 24) {
          result.value_ = value_;
        }
        if (valueCase_ == 25) {
          result.value_ = value_;
        }
        if (valueCase_ == 26) {
          result.value_ = value_;
        }
        if (valueCase_ == 27) {
          result.value_ = value_;
        }
        if (valueCase_ == 28) {
          result.value_ = value_;
        }
        if (valueCase_ == 29) {
          result.value_ = value_;
        }
        if (valueCase_ == 30) {
          result.value_ = value_;
        }
        if (valueCase_ == 31) {
          result.value_ = value_;
        }
        if (valueCase_ == 32) {
          result.value_ = value_;
        }
        if (valueCase_ == 33) {
          result.value_ = value_;
        }
        if (valueCase_ == 34) {
          result.value_ = value_;
        }
        if (valueCase_ == 35) {
          result.value_ = value_;
        }
        if (valueCase_ == 36) {
          result.value_ = value_;
        }
        if (valueCase_ == 37) {
          result.value_ = value_;
        }
        if (valueCase_ == 38) {
          result.value_ = value_;
        }
        if (valueCase_ == 39) {
          result.value_ = value_;
        }
        if (valueCase_ == 40) {
          result.value_ = value_;
        }
        if (valueCase_ == 41) {
          result.value_ = value_;
        }
        if (valueCase_ == 42) {
          result.value_ = value_;
        }
        if (maskCase_ == 105) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 106) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 107) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 109) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 114) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 115) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 125) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 126) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 129) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 130) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 131) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 140) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 141) {
          result.mask_ = mask_;
        }
        if (maskCase_ == 142) {
          result.mask_ = mask_;
        }
        result.valueCase_ = valueCase_;
        result.maskCase_ = maskCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getHasMask() != false) {
          setHasMask(other.getHasMask());
        }
        switch (other.getValueCase()) {
          case PORT: {
            setPort(other.getPort());
            break;
          }
          case PHYSICAL_PORT: {
            setPhysicalPort(other.getPhysicalPort());
            break;
          }
          case TABLE_METADATA: {
            setTableMetadata(other.getTableMetadata());
            break;
          }
          case ETH_DST: {
            setEthDst(other.getEthDst());
            break;
          }
          case ETH_SRC: {
            setEthSrc(other.getEthSrc());
            break;
          }
          case ETH_TYPE: {
            setEthType(other.getEthType());
            break;
          }
          case VLAN_VID: {
            setVlanVid(other.getVlanVid());
            break;
          }
          case VLAN_PCP: {
            setVlanPcp(other.getVlanPcp());
            break;
          }
          case IP_DSCP: {
            setIpDscp(other.getIpDscp());
            break;
          }
          case IP_ECN: {
            setIpEcn(other.getIpEcn());
            break;
          }
          case IP_PROTO: {
            setIpProto(other.getIpProto());
            break;
          }
          case IPV4_SRC: {
            setIpv4Src(other.getIpv4Src());
            break;
          }
          case IPV4_DST: {
            setIpv4Dst(other.getIpv4Dst());
            break;
          }
          case TCP_SRC: {
            setTcpSrc(other.getTcpSrc());
            break;
          }
          case TCP_DST: {
            setTcpDst(other.getTcpDst());
            break;
          }
          case UDP_SRC: {
            setUdpSrc(other.getUdpSrc());
            break;
          }
          case UDP_DST: {
            setUdpDst(other.getUdpDst());
            break;
          }
          case SCTP_SRC: {
            setSctpSrc(other.getSctpSrc());
            break;
          }
          case SCTP_DST: {
            setSctpDst(other.getSctpDst());
            break;
          }
          case ICMPV4_TYPE: {
            setIcmpv4Type(other.getIcmpv4Type());
            break;
          }
          case ICMPV4_CODE: {
            setIcmpv4Code(other.getIcmpv4Code());
            break;
          }
          case ARP_OP: {
            setArpOp(other.getArpOp());
            break;
          }
          case ARP_SPA: {
            setArpSpa(other.getArpSpa());
            break;
          }
          case ARP_TPA: {
            setArpTpa(other.getArpTpa());
            break;
          }
          case ARP_SHA: {
            setArpSha(other.getArpSha());
            break;
          }
          case ARP_THA: {
            setArpTha(other.getArpTha());
            break;
          }
          case IPV6_SRC: {
            setIpv6Src(other.getIpv6Src());
            break;
          }
          case IPV6_DST: {
            setIpv6Dst(other.getIpv6Dst());
            break;
          }
          case IPV6_FLABEL: {
            setIpv6Flabel(other.getIpv6Flabel());
            break;
          }
          case ICMPV6_TYPE: {
            setIcmpv6Type(other.getIcmpv6Type());
            break;
          }
          case ICMPV6_CODE: {
            setIcmpv6Code(other.getIcmpv6Code());
            break;
          }
          case IPV6_ND_TARGET: {
            setIpv6NdTarget(other.getIpv6NdTarget());
            break;
          }
          case IPV6_ND_SSL: {
            setIpv6NdSsl(other.getIpv6NdSsl());
            break;
          }
          case IPV6_ND_TLL: {
            setIpv6NdTll(other.getIpv6NdTll());
            break;
          }
          case MPLS_LABEL: {
            setMplsLabel(other.getMplsLabel());
            break;
          }
          case MPLS_TC: {
            setMplsTc(other.getMplsTc());
            break;
          }
          case MPLS_BOS: {
            setMplsBos(other.getMplsBos());
            break;
          }
          case PBB_ISID: {
            setPbbIsid(other.getPbbIsid());
            break;
          }
          case TUNNEL_ID: {
            setTunnelId(other.getTunnelId());
            break;
          }
          case IPV6_EXTHDR: {
            setIpv6Exthdr(other.getIpv6Exthdr());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        switch (other.getMaskCase()) {
          case TABLE_METADATA_MASK: {
            setTableMetadataMask(other.getTableMetadataMask());
            break;
          }
          case ETH_DST_MASK: {
            setEthDstMask(other.getEthDstMask());
            break;
          }
          case ETH_SRC_MASK: {
            setEthSrcMask(other.getEthSrcMask());
            break;
          }
          case VLAN_VID_MASK: {
            setVlanVidMask(other.getVlanVidMask());
            break;
          }
          case IPV4_SRC_MASK: {
            setIpv4SrcMask(other.getIpv4SrcMask());
            break;
          }
          case IPV4_DST_MASK: {
            setIpv4DstMask(other.getIpv4DstMask());
            break;
          }
          case ARP_SPA_MASK: {
            setArpSpaMask(other.getArpSpaMask());
            break;
          }
          case ARP_TPA_MASK: {
            setArpTpaMask(other.getArpTpaMask());
            break;
          }
          case IPV6_SRC_MASK: {
            setIpv6SrcMask(other.getIpv6SrcMask());
            break;
          }
          case IPV6_DST_MASK: {
            setIpv6DstMask(other.getIpv6DstMask());
            break;
          }
          case IPV6_FLABEL_MASK: {
            setIpv6FlabelMask(other.getIpv6FlabelMask());
            break;
          }
          case PBB_ISID_MASK: {
            setPbbIsidMask(other.getPbbIsidMask());
            break;
          }
          case TUNNEL_ID_MASK: {
            setTunnelIdMask(other.getTunnelIdMask());
            break;
          }
          case IPV6_EXTHDR_MASK: {
            setIpv6ExthdrMask(other.getIpv6ExthdrMask());
            break;
          }
          case MASK_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }

      private int maskCase_ = 0;
      private java.lang.Object mask_;
      public MaskCase
          getMaskCase() {
        return MaskCase.forNumber(
            maskCase_);
      }

      public Builder clearMask() {
        maskCase_ = 0;
        mask_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types result = org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types.UNRECOGNIZED : result;
      }
      /**
       * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.oxm_ofb_field_types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.openflow_13.oxm_ofb_field_types type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private boolean hasMask_ ;
      /**
       * <code>bool has_mask = 2;</code>
       */
      public boolean getHasMask() {
        return hasMask_;
      }
      /**
       * <code>bool has_mask = 2;</code>
       */
      public Builder setHasMask(boolean value) {
        
        hasMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool has_mask = 2;</code>
       */
      public Builder clearHasMask() {
        
        hasMask_ = false;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IN_PORT    OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PORT, 4)
       * </pre>
       *
       * <code>uint32 port = 3;</code>
       */
      public int getPort() {
        if (valueCase_ == 3) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IN_PORT    OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PORT, 4)
       * </pre>
       *
       * <code>uint32 port = 3;</code>
       */
      public Builder setPort(int value) {
        valueCase_ = 3;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IN_PORT    OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PORT, 4)
       * </pre>
       *
       * <code>uint32 port = 3;</code>
       */
      public Builder clearPort() {
        if (valueCase_ == 3) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IN_PHY_PORT OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PHY_PORT, 4)
       * </pre>
       *
       * <code>uint32 physical_port = 4;</code>
       */
      public int getPhysicalPort() {
        if (valueCase_ == 4) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IN_PHY_PORT OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PHY_PORT, 4)
       * </pre>
       *
       * <code>uint32 physical_port = 4;</code>
       */
      public Builder setPhysicalPort(int value) {
        valueCase_ = 4;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IN_PHY_PORT OXM_HEADER  (0x8000, OFPXMT_OFB_IN_PHY_PORT, 4)
       * </pre>
       *
       * <code>uint32 physical_port = 4;</code>
       */
      public Builder clearPhysicalPort() {
        if (valueCase_ == 4) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_METADATA   OXM_HEADER  (0x8000, OFPXMT_OFB_METADATA, 8)
       *#define OXM_OF_METADATA_W OXM_HEADER_W(0x8000, OFPXMT_OFB_METADATA, 8)
       * </pre>
       *
       * <code>uint64 table_metadata = 5;</code>
       */
      public long getTableMetadata() {
        if (valueCase_ == 5) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <pre>
       *#define OXM_OF_METADATA   OXM_HEADER  (0x8000, OFPXMT_OFB_METADATA, 8)
       *#define OXM_OF_METADATA_W OXM_HEADER_W(0x8000, OFPXMT_OFB_METADATA, 8)
       * </pre>
       *
       * <code>uint64 table_metadata = 5;</code>
       */
      public Builder setTableMetadata(long value) {
        valueCase_ = 5;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_METADATA   OXM_HEADER  (0x8000, OFPXMT_OFB_METADATA, 8)
       *#define OXM_OF_METADATA_W OXM_HEADER_W(0x8000, OFPXMT_OFB_METADATA, 8)
       * </pre>
       *
       * <code>uint64 table_metadata = 5;</code>
       */
      public Builder clearTableMetadata() {
        if (valueCase_ == 5) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_ETH_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_DST, 6)
       *#define OXM_OF_ETH_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_DST, 6)
       *#define OXM_OF_ETH_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_SRC, 6)
       *#define OXM_OF_ETH_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_SRC, 6)
       * </pre>
       *
       * <code>bytes eth_dst = 6;</code>
       */
      public com.google.protobuf.ByteString getEthDst() {
        if (valueCase_ == 6) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       *#define OXM_OF_ETH_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_DST, 6)
       *#define OXM_OF_ETH_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_DST, 6)
       *#define OXM_OF_ETH_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_SRC, 6)
       *#define OXM_OF_ETH_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_SRC, 6)
       * </pre>
       *
       * <code>bytes eth_dst = 6;</code>
       */
      public Builder setEthDst(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 6;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_ETH_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_DST, 6)
       *#define OXM_OF_ETH_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_DST, 6)
       *#define OXM_OF_ETH_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_SRC, 6)
       *#define OXM_OF_ETH_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ETH_SRC, 6)
       * </pre>
       *
       * <code>bytes eth_dst = 6;</code>
       */
      public Builder clearEthDst() {
        if (valueCase_ == 6) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Used for OFPXMT_OFB_ETH_SRC (exactly 6 bytes) 
       * </pre>
       *
       * <code>bytes eth_src = 7;</code>
       */
      public com.google.protobuf.ByteString getEthSrc() {
        if (valueCase_ == 7) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_ETH_SRC (exactly 6 bytes) 
       * </pre>
       *
       * <code>bytes eth_src = 7;</code>
       */
      public Builder setEthSrc(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 7;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_ETH_SRC (exactly 6 bytes) 
       * </pre>
       *
       * <code>bytes eth_src = 7;</code>
       */
      public Builder clearEthSrc() {
        if (valueCase_ == 7) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_ETH_TYPE   OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_TYPE,2)
       * </pre>
       *
       * <code>uint32 eth_type = 8;</code>
       */
      public int getEthType() {
        if (valueCase_ == 8) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_ETH_TYPE   OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_TYPE,2)
       * </pre>
       *
       * <code>uint32 eth_type = 8;</code>
       */
      public Builder setEthType(int value) {
        valueCase_ = 8;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_ETH_TYPE   OXM_HEADER  (0x8000, OFPXMT_OFB_ETH_TYPE,2)
       * </pre>
       *
       * <code>uint32 eth_type = 8;</code>
       */
      public Builder clearEthType() {
        if (valueCase_ == 8) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_VLAN_VID   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_VID, 2)
       *#define OXM_OF_VLAN_VID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_VLAN_VID, 2)
       * </pre>
       *
       * <code>uint32 vlan_vid = 9;</code>
       */
      public int getVlanVid() {
        if (valueCase_ == 9) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_VLAN_VID   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_VID, 2)
       *#define OXM_OF_VLAN_VID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_VLAN_VID, 2)
       * </pre>
       *
       * <code>uint32 vlan_vid = 9;</code>
       */
      public Builder setVlanVid(int value) {
        valueCase_ = 9;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_VLAN_VID   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_VID, 2)
       *#define OXM_OF_VLAN_VID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_VLAN_VID, 2)
       * </pre>
       *
       * <code>uint32 vlan_vid = 9;</code>
       */
      public Builder clearVlanVid() {
        if (valueCase_ == 9) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_VLAN_PCP   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_PCP, 1)
       * </pre>
       *
       * <code>uint32 vlan_pcp = 10;</code>
       */
      public int getVlanPcp() {
        if (valueCase_ == 10) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_VLAN_PCP   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_PCP, 1)
       * </pre>
       *
       * <code>uint32 vlan_pcp = 10;</code>
       */
      public Builder setVlanPcp(int value) {
        valueCase_ = 10;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_VLAN_PCP   OXM_HEADER  (0x8000, OFPXMT_OFB_VLAN_PCP, 1)
       * </pre>
       *
       * <code>uint32 vlan_pcp = 10;</code>
       */
      public Builder clearVlanPcp() {
        if (valueCase_ == 10) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IP_DSCP     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_DSCP, 1)
       * </pre>
       *
       * <code>uint32 ip_dscp = 11;</code>
       */
      public int getIpDscp() {
        if (valueCase_ == 11) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IP_DSCP     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_DSCP, 1)
       * </pre>
       *
       * <code>uint32 ip_dscp = 11;</code>
       */
      public Builder setIpDscp(int value) {
        valueCase_ = 11;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IP_DSCP     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_DSCP, 1)
       * </pre>
       *
       * <code>uint32 ip_dscp = 11;</code>
       */
      public Builder clearIpDscp() {
        if (valueCase_ == 11) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IP_ECN     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_ECN, 1)
       * </pre>
       *
       * <code>uint32 ip_ecn = 12;</code>
       */
      public int getIpEcn() {
        if (valueCase_ == 12) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IP_ECN     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_ECN, 1)
       * </pre>
       *
       * <code>uint32 ip_ecn = 12;</code>
       */
      public Builder setIpEcn(int value) {
        valueCase_ = 12;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IP_ECN     OXM_HEADER  (0x8000, OFPXMT_OFB_IP_ECN, 1)
       * </pre>
       *
       * <code>uint32 ip_ecn = 12;</code>
       */
      public Builder clearIpEcn() {
        if (valueCase_ == 12) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IP_PROTO   OXM_HEADER  (0x8000, OFPXMT_OFB_IP_PROTO, 1)
       * </pre>
       *
       * <code>uint32 ip_proto = 13;</code>
       */
      public int getIpProto() {
        if (valueCase_ == 13) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IP_PROTO   OXM_HEADER  (0x8000, OFPXMT_OFB_IP_PROTO, 1)
       * </pre>
       *
       * <code>uint32 ip_proto = 13;</code>
       */
      public Builder setIpProto(int value) {
        valueCase_ = 13;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IP_PROTO   OXM_HEADER  (0x8000, OFPXMT_OFB_IP_PROTO, 1)
       * </pre>
       *
       * <code>uint32 ip_proto = 13;</code>
       */
      public Builder clearIpProto() {
        if (valueCase_ == 13) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IPV4_SRC     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_SRC, 4)
       *#define OXM_OF_IPV4_SRC_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_SRC, 4)
       *#define OXM_OF_IPV4_DST     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_DST, 4)
       *#define OXM_OF_IPV4_DST_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_DST, 4)
       * </pre>
       *
       * <code>uint32 ipv4_src = 14;</code>
       */
      public int getIpv4Src() {
        if (valueCase_ == 14) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV4_SRC     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_SRC, 4)
       *#define OXM_OF_IPV4_SRC_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_SRC, 4)
       *#define OXM_OF_IPV4_DST     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_DST, 4)
       *#define OXM_OF_IPV4_DST_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_DST, 4)
       * </pre>
       *
       * <code>uint32 ipv4_src = 14;</code>
       */
      public Builder setIpv4Src(int value) {
        valueCase_ = 14;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV4_SRC     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_SRC, 4)
       *#define OXM_OF_IPV4_SRC_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_SRC, 4)
       *#define OXM_OF_IPV4_DST     OXM_HEADER  (0x8000, OFPXMT_OFB_IPV4_DST, 4)
       *#define OXM_OF_IPV4_DST_W   OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV4_DST, 4)
       * </pre>
       *
       * <code>uint32 ipv4_src = 14;</code>
       */
      public Builder clearIpv4Src() {
        if (valueCase_ == 14) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Used for OFPXMT_OFB_IPV4_DST 
       * </pre>
       *
       * <code>uint32 ipv4_dst = 15;</code>
       */
      public int getIpv4Dst() {
        if (valueCase_ == 15) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_IPV4_DST 
       * </pre>
       *
       * <code>uint32 ipv4_dst = 15;</code>
       */
      public Builder setIpv4Dst(int value) {
        valueCase_ = 15;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_IPV4_DST 
       * </pre>
       *
       * <code>uint32 ipv4_dst = 15;</code>
       */
      public Builder clearIpv4Dst() {
        if (valueCase_ == 15) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_TCP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_SRC, 2)
       *#define OXM_OF_TCP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_DST, 2)
       * </pre>
       *
       * <code>uint32 tcp_src = 16;</code>
       */
      public int getTcpSrc() {
        if (valueCase_ == 16) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_TCP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_SRC, 2)
       *#define OXM_OF_TCP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_DST, 2)
       * </pre>
       *
       * <code>uint32 tcp_src = 16;</code>
       */
      public Builder setTcpSrc(int value) {
        valueCase_ = 16;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_TCP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_SRC, 2)
       *#define OXM_OF_TCP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_TCP_DST, 2)
       * </pre>
       *
       * <code>uint32 tcp_src = 16;</code>
       */
      public Builder clearTcpSrc() {
        if (valueCase_ == 16) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Used for OFPXMT_OFB_TCP_DST 
       * </pre>
       *
       * <code>uint32 tcp_dst = 17;</code>
       */
      public int getTcpDst() {
        if (valueCase_ == 17) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_TCP_DST 
       * </pre>
       *
       * <code>uint32 tcp_dst = 17;</code>
       */
      public Builder setTcpDst(int value) {
        valueCase_ = 17;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_TCP_DST 
       * </pre>
       *
       * <code>uint32 tcp_dst = 17;</code>
       */
      public Builder clearTcpDst() {
        if (valueCase_ == 17) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_UDP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_SRC, 2)
       *#define OXM_OF_UDP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_DST, 2)
       * </pre>
       *
       * <code>uint32 udp_src = 18;</code>
       */
      public int getUdpSrc() {
        if (valueCase_ == 18) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_UDP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_SRC, 2)
       *#define OXM_OF_UDP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_DST, 2)
       * </pre>
       *
       * <code>uint32 udp_src = 18;</code>
       */
      public Builder setUdpSrc(int value) {
        valueCase_ = 18;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_UDP_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_SRC, 2)
       *#define OXM_OF_UDP_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_UDP_DST, 2)
       * </pre>
       *
       * <code>uint32 udp_src = 18;</code>
       */
      public Builder clearUdpSrc() {
        if (valueCase_ == 18) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Used for OFPXMT_OFB_UDP_DST 
       * </pre>
       *
       * <code>uint32 udp_dst = 19;</code>
       */
      public int getUdpDst() {
        if (valueCase_ == 19) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_UDP_DST 
       * </pre>
       *
       * <code>uint32 udp_dst = 19;</code>
       */
      public Builder setUdpDst(int value) {
        valueCase_ = 19;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_UDP_DST 
       * </pre>
       *
       * <code>uint32 udp_dst = 19;</code>
       */
      public Builder clearUdpDst() {
        if (valueCase_ == 19) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_SCTP_SRC   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_SRC, 2)
       *#define OXM_OF_SCTP_DST   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_DST, 2)
       * </pre>
       *
       * <code>uint32 sctp_src = 20;</code>
       */
      public int getSctpSrc() {
        if (valueCase_ == 20) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_SCTP_SRC   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_SRC, 2)
       *#define OXM_OF_SCTP_DST   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_DST, 2)
       * </pre>
       *
       * <code>uint32 sctp_src = 20;</code>
       */
      public Builder setSctpSrc(int value) {
        valueCase_ = 20;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_SCTP_SRC   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_SRC, 2)
       *#define OXM_OF_SCTP_DST   OXM_HEADER  (0x8000, OFPXMT_OFB_SCTP_DST, 2)
       * </pre>
       *
       * <code>uint32 sctp_src = 20;</code>
       */
      public Builder clearSctpSrc() {
        if (valueCase_ == 20) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Used for OFPXMT_OFB_SCTP_DST 
       * </pre>
       *
       * <code>uint32 sctp_dst = 21;</code>
       */
      public int getSctpDst() {
        if (valueCase_ == 21) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_SCTP_DST 
       * </pre>
       *
       * <code>uint32 sctp_dst = 21;</code>
       */
      public Builder setSctpDst(int value) {
        valueCase_ = 21;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_SCTP_DST 
       * </pre>
       *
       * <code>uint32 sctp_dst = 21;</code>
       */
      public Builder clearSctpDst() {
        if (valueCase_ == 21) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_ICMPV4_TYPE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_TYPE, 1)
       *#define OXM_OF_ICMPV4_CODE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_CODE, 1)
       * </pre>
       *
       * <code>uint32 icmpv4_type = 22;</code>
       */
      public int getIcmpv4Type() {
        if (valueCase_ == 22) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_ICMPV4_TYPE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_TYPE, 1)
       *#define OXM_OF_ICMPV4_CODE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_CODE, 1)
       * </pre>
       *
       * <code>uint32 icmpv4_type = 22;</code>
       */
      public Builder setIcmpv4Type(int value) {
        valueCase_ = 22;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_ICMPV4_TYPE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_TYPE, 1)
       *#define OXM_OF_ICMPV4_CODE  OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV4_CODE, 1)
       * </pre>
       *
       * <code>uint32 icmpv4_type = 22;</code>
       */
      public Builder clearIcmpv4Type() {
        if (valueCase_ == 22) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Used for OFPXMT_OFB_ICMPV4_CODE 
       * </pre>
       *
       * <code>uint32 icmpv4_code = 23;</code>
       */
      public int getIcmpv4Code() {
        if (valueCase_ == 23) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_ICMPV4_CODE 
       * </pre>
       *
       * <code>uint32 icmpv4_code = 23;</code>
       */
      public Builder setIcmpv4Code(int value) {
        valueCase_ = 23;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for OFPXMT_OFB_ICMPV4_CODE 
       * </pre>
       *
       * <code>uint32 icmpv4_code = 23;</code>
       */
      public Builder clearIcmpv4Code() {
        if (valueCase_ == 23) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_ARP_OP     OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_OP, 2)
       * </pre>
       *
       * <code>uint32 arp_op = 24;</code>
       */
      public int getArpOp() {
        if (valueCase_ == 24) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_ARP_OP     OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_OP, 2)
       * </pre>
       *
       * <code>uint32 arp_op = 24;</code>
       */
      public Builder setArpOp(int value) {
        valueCase_ = 24;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_ARP_OP     OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_OP, 2)
       * </pre>
       *
       * <code>uint32 arp_op = 24;</code>
       */
      public Builder clearArpOp() {
        if (valueCase_ == 24) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_ARP_SPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_SPA, 4)
       *#define OXM_OF_ARP_SPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_SPA, 4)
       *#define OXM_OF_ARP_TPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_TPA, 4)
       *#define OXM_OF_ARP_TPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_TPA, 4)
       * </pre>
       *
       * <code>uint32 arp_spa = 25;</code>
       */
      public int getArpSpa() {
        if (valueCase_ == 25) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_ARP_SPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_SPA, 4)
       *#define OXM_OF_ARP_SPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_SPA, 4)
       *#define OXM_OF_ARP_TPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_TPA, 4)
       *#define OXM_OF_ARP_TPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_TPA, 4)
       * </pre>
       *
       * <code>uint32 arp_spa = 25;</code>
       */
      public Builder setArpSpa(int value) {
        valueCase_ = 25;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_ARP_SPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_SPA, 4)
       *#define OXM_OF_ARP_SPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_SPA, 4)
       *#define OXM_OF_ARP_TPA    OXM_HEADER  (0x8000, OFPXMT_OFB_ARP_TPA, 4)
       *#define OXM_OF_ARP_TPA_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_ARP_TPA, 4)
       * </pre>
       *
       * <code>uint32 arp_spa = 25;</code>
       */
      public Builder clearArpSpa() {
        if (valueCase_ == 25) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_ARP_TPA 
       * </pre>
       *
       * <code>uint32 arp_tpa = 26;</code>
       */
      public int getArpTpa() {
        if (valueCase_ == 26) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_TPA 
       * </pre>
       *
       * <code>uint32 arp_tpa = 26;</code>
       */
      public Builder setArpTpa(int value) {
        valueCase_ = 26;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_TPA 
       * </pre>
       *
       * <code>uint32 arp_tpa = 26;</code>
       */
      public Builder clearArpTpa() {
        if (valueCase_ == 26) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_ARP_SHA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_SHA, 6)
       *#define OXM_OF_ARP_SHA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_SHA, 6)
       *#define OXM_OF_ARP_THA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_THA, 6)
       *#define OXM_OF_ARP_THA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_THA, 6)
       * </pre>
       *
       * <code>bytes arp_sha = 27;</code>
       */
      public com.google.protobuf.ByteString getArpSha() {
        if (valueCase_ == 27) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       *#define OXM_OF_ARP_SHA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_SHA, 6)
       *#define OXM_OF_ARP_SHA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_SHA, 6)
       *#define OXM_OF_ARP_THA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_THA, 6)
       *#define OXM_OF_ARP_THA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_THA, 6)
       * </pre>
       *
       * <code>bytes arp_sha = 27;</code>
       */
      public Builder setArpSha(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 27;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_ARP_SHA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_SHA, 6)
       *#define OXM_OF_ARP_SHA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_SHA, 6)
       *#define OXM_OF_ARP_THA    OXM_HEADER   (0x8000, OFPXMT_OFB_ARP_THA, 6)
       *#define OXM_OF_ARP_THA_W  OXM_HEADER_W (0x8000, OFPXMT_OFB_ARP_THA, 6)
       * </pre>
       *
       * <code>bytes arp_sha = 27;</code>
       */
      public Builder clearArpSha() {
        if (valueCase_ == 27) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_ARP_THA (6 bytes) 
       * </pre>
       *
       * <code>bytes arp_tha = 28;</code>
       */
      public com.google.protobuf.ByteString getArpTha() {
        if (valueCase_ == 28) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_THA (6 bytes) 
       * </pre>
       *
       * <code>bytes arp_tha = 28;</code>
       */
      public Builder setArpTha(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 28;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_THA (6 bytes) 
       * </pre>
       *
       * <code>bytes arp_tha = 28;</code>
       */
      public Builder clearArpTha() {
        if (valueCase_ == 28) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IPV6_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_SRC, 16)
       *#define OXM_OF_IPV6_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_SRC, 16)
       *#define OXM_OF_IPV6_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_DST, 16)
       *#define OXM_OF_IPV6_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_DST, 16)
       * </pre>
       *
       * <code>bytes ipv6_src = 29;</code>
       */
      public com.google.protobuf.ByteString getIpv6Src() {
        if (valueCase_ == 29) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_SRC, 16)
       *#define OXM_OF_IPV6_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_SRC, 16)
       *#define OXM_OF_IPV6_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_DST, 16)
       *#define OXM_OF_IPV6_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_DST, 16)
       * </pre>
       *
       * <code>bytes ipv6_src = 29;</code>
       */
      public Builder setIpv6Src(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 29;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_SRC    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_SRC, 16)
       *#define OXM_OF_IPV6_SRC_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_SRC, 16)
       *#define OXM_OF_IPV6_DST    OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_DST, 16)
       *#define OXM_OF_IPV6_DST_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_DST, 16)
       * </pre>
       *
       * <code>bytes ipv6_src = 29;</code>
       */
      public Builder clearIpv6Src() {
        if (valueCase_ == 29) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_DST 
       * </pre>
       *
       * <code>bytes ipv6_dst = 30;</code>
       */
      public com.google.protobuf.ByteString getIpv6Dst() {
        if (valueCase_ == 30) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_DST 
       * </pre>
       *
       * <code>bytes ipv6_dst = 30;</code>
       */
      public Builder setIpv6Dst(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 30;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_DST 
       * </pre>
       *
       * <code>bytes ipv6_dst = 30;</code>
       */
      public Builder clearIpv6Dst() {
        if (valueCase_ == 30) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IPV6_FLABEL   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
       *#define OXM_OF_IPV6_FLABEL_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
       * </pre>
       *
       * <code>uint32 ipv6_flabel = 31;</code>
       */
      public int getIpv6Flabel() {
        if (valueCase_ == 31) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_FLABEL   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
       *#define OXM_OF_IPV6_FLABEL_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
       * </pre>
       *
       * <code>uint32 ipv6_flabel = 31;</code>
       */
      public Builder setIpv6Flabel(int value) {
        valueCase_ = 31;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_FLABEL   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
       *#define OXM_OF_IPV6_FLABEL_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_FLABEL, 4)
       * </pre>
       *
       * <code>uint32 ipv6_flabel = 31;</code>
       */
      public Builder clearIpv6Flabel() {
        if (valueCase_ == 31) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_ICMPV6_TYPE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_TYPE, 1)
       *#define OXM_OF_ICMPV6_CODE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_CODE, 1)
       * </pre>
       *
       * <code>uint32 icmpv6_type = 32;</code>
       */
      public int getIcmpv6Type() {
        if (valueCase_ == 32) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_ICMPV6_TYPE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_TYPE, 1)
       *#define OXM_OF_ICMPV6_CODE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_CODE, 1)
       * </pre>
       *
       * <code>uint32 icmpv6_type = 32;</code>
       */
      public Builder setIcmpv6Type(int value) {
        valueCase_ = 32;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_ICMPV6_TYPE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_TYPE, 1)
       *#define OXM_OF_ICMPV6_CODE OXM_HEADER  (0x8000, OFPXMT_OFB_ICMPV6_CODE, 1)
       * </pre>
       *
       * <code>uint32 icmpv6_type = 32;</code>
       */
      public Builder clearIcmpv6Type() {
        if (valueCase_ == 32) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_ICMPV6_CODE 
       * </pre>
       *
       * <code>uint32 icmpv6_code = 33;</code>
       */
      public int getIcmpv6Code() {
        if (valueCase_ == 33) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ICMPV6_CODE 
       * </pre>
       *
       * <code>uint32 icmpv6_code = 33;</code>
       */
      public Builder setIcmpv6Code(int value) {
        valueCase_ = 33;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ICMPV6_CODE 
       * </pre>
       *
       * <code>uint32 icmpv6_code = 33;</code>
       */
      public Builder clearIcmpv6Code() {
        if (valueCase_ == 33) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_TARGET OXM_HEADER &#92;
       *    (0x8000, OFPXMT_OFB_IPV6_ND_TARGET, 16)
       * </pre>
       *
       * <code>bytes ipv6_nd_target = 34;</code>
       */
      public com.google.protobuf.ByteString getIpv6NdTarget() {
        if (valueCase_ == 34) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_TARGET OXM_HEADER &#92;
       *    (0x8000, OFPXMT_OFB_IPV6_ND_TARGET, 16)
       * </pre>
       *
       * <code>bytes ipv6_nd_target = 34;</code>
       */
      public Builder setIpv6NdTarget(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 34;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_TARGET OXM_HEADER &#92;
       *    (0x8000, OFPXMT_OFB_IPV6_ND_TARGET, 16)
       * </pre>
       *
       * <code>bytes ipv6_nd_target = 34;</code>
       */
      public Builder clearIpv6NdTarget() {
        if (valueCase_ == 34) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_SLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_SLL, 6)
       * </pre>
       *
       * <code>bytes ipv6_nd_ssl = 35;</code>
       */
      public com.google.protobuf.ByteString getIpv6NdSsl() {
        if (valueCase_ == 35) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_SLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_SLL, 6)
       * </pre>
       *
       * <code>bytes ipv6_nd_ssl = 35;</code>
       */
      public Builder setIpv6NdSsl(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 35;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_SLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_SLL, 6)
       * </pre>
       *
       * <code>bytes ipv6_nd_ssl = 35;</code>
       */
      public Builder clearIpv6NdSsl() {
        if (valueCase_ == 35) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_TLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_TLL, 6)
       * </pre>
       *
       * <code>bytes ipv6_nd_tll = 36;</code>
       */
      public com.google.protobuf.ByteString getIpv6NdTll() {
        if (valueCase_ == 36) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_TLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_TLL, 6)
       * </pre>
       *
       * <code>bytes ipv6_nd_tll = 36;</code>
       */
      public Builder setIpv6NdTll(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 36;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_ND_TLL  OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_ND_TLL, 6)
       * </pre>
       *
       * <code>bytes ipv6_nd_tll = 36;</code>
       */
      public Builder clearIpv6NdTll() {
        if (valueCase_ == 36) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_MPLS_LABEL  OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_LABEL, 4)
       * </pre>
       *
       * <code>uint32 mpls_label = 37;</code>
       */
      public int getMplsLabel() {
        if (valueCase_ == 37) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_MPLS_LABEL  OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_LABEL, 4)
       * </pre>
       *
       * <code>uint32 mpls_label = 37;</code>
       */
      public Builder setMplsLabel(int value) {
        valueCase_ = 37;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_MPLS_LABEL  OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_LABEL, 4)
       * </pre>
       *
       * <code>uint32 mpls_label = 37;</code>
       */
      public Builder clearMplsLabel() {
        if (valueCase_ == 37) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_MPLS_TC     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_TC, 1)
       * </pre>
       *
       * <code>uint32 mpls_tc = 38;</code>
       */
      public int getMplsTc() {
        if (valueCase_ == 38) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_MPLS_TC     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_TC, 1)
       * </pre>
       *
       * <code>uint32 mpls_tc = 38;</code>
       */
      public Builder setMplsTc(int value) {
        valueCase_ = 38;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_MPLS_TC     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_TC, 1)
       * </pre>
       *
       * <code>uint32 mpls_tc = 38;</code>
       */
      public Builder clearMplsTc() {
        if (valueCase_ == 38) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_MPLS_BOS     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_BOS, 1)
       * </pre>
       *
       * <code>uint32 mpls_bos = 39;</code>
       */
      public int getMplsBos() {
        if (valueCase_ == 39) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_MPLS_BOS     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_BOS, 1)
       * </pre>
       *
       * <code>uint32 mpls_bos = 39;</code>
       */
      public Builder setMplsBos(int value) {
        valueCase_ = 39;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_MPLS_BOS     OXM_HEADER  (0x8000, OFPXMT_OFB_MPLS_BOS, 1)
       * </pre>
       *
       * <code>uint32 mpls_bos = 39;</code>
       */
      public Builder clearMplsBos() {
        if (valueCase_ == 39) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_PBB_ISID   OXM_HEADER  (0x8000, OFPXMT_OFB_PBB_ISID, 3)
       *#define OXM_OF_PBB_ISID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_PBB_ISID, 3)
       * </pre>
       *
       * <code>uint32 pbb_isid = 40;</code>
       */
      public int getPbbIsid() {
        if (valueCase_ == 40) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_PBB_ISID   OXM_HEADER  (0x8000, OFPXMT_OFB_PBB_ISID, 3)
       *#define OXM_OF_PBB_ISID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_PBB_ISID, 3)
       * </pre>
       *
       * <code>uint32 pbb_isid = 40;</code>
       */
      public Builder setPbbIsid(int value) {
        valueCase_ = 40;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_PBB_ISID   OXM_HEADER  (0x8000, OFPXMT_OFB_PBB_ISID, 3)
       *#define OXM_OF_PBB_ISID_W OXM_HEADER_W(0x8000, OFPXMT_OFB_PBB_ISID, 3)
       * </pre>
       *
       * <code>uint32 pbb_isid = 40;</code>
       */
      public Builder clearPbbIsid() {
        if (valueCase_ == 40) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_TUNNEL_ID    OXM_HEADER  (0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
       *#define OXM_OF_TUNNEL_ID_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
       * </pre>
       *
       * <code>uint64 tunnel_id = 41;</code>
       */
      public long getTunnelId() {
        if (valueCase_ == 41) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <pre>
       *#define OXM_OF_TUNNEL_ID    OXM_HEADER  (0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
       *#define OXM_OF_TUNNEL_ID_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
       * </pre>
       *
       * <code>uint64 tunnel_id = 41;</code>
       */
      public Builder setTunnelId(long value) {
        valueCase_ = 41;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_TUNNEL_ID    OXM_HEADER  (0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
       *#define OXM_OF_TUNNEL_ID_W  OXM_HEADER_W(0x8000, OFPXMT_OFB_TUNNEL_ID, 8)
       * </pre>
       *
       * <code>uint64 tunnel_id = 41;</code>
       */
      public Builder clearTunnelId() {
        if (valueCase_ == 41) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       *#define OXM_OF_IPV6_EXTHDR   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
       *#define OXM_OF_IPV6_EXTHDR_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
       * </pre>
       *
       * <code>uint32 ipv6_exthdr = 42;</code>
       */
      public int getIpv6Exthdr() {
        if (valueCase_ == 42) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_EXTHDR   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
       *#define OXM_OF_IPV6_EXTHDR_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
       * </pre>
       *
       * <code>uint32 ipv6_exthdr = 42;</code>
       */
      public Builder setIpv6Exthdr(int value) {
        valueCase_ = 42;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *#define OXM_OF_IPV6_EXTHDR   OXM_HEADER  (0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
       *#define OXM_OF_IPV6_EXTHDR_W OXM_HEADER_W(0x8000, OFPXMT_OFB_IPV6_EXTHDR, 2)
       * </pre>
       *
       * <code>uint32 ipv6_exthdr = 42;</code>
       */
      public Builder clearIpv6Exthdr() {
        if (valueCase_ == 42) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_METADATA 
       * </pre>
       *
       * <code>uint64 table_metadata_mask = 105;</code>
       */
      public long getTableMetadataMask() {
        if (maskCase_ == 105) {
          return (java.lang.Long) mask_;
        }
        return 0L;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_METADATA 
       * </pre>
       *
       * <code>uint64 table_metadata_mask = 105;</code>
       */
      public Builder setTableMetadataMask(long value) {
        maskCase_ = 105;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_METADATA 
       * </pre>
       *
       * <code>uint64 table_metadata_mask = 105;</code>
       */
      public Builder clearTableMetadataMask() {
        if (maskCase_ == 105) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_ETH_DST (exactly 6 bytes)
       * </pre>
       *
       * <code>bytes eth_dst_mask = 106;</code>
       */
      public com.google.protobuf.ByteString getEthDstMask() {
        if (maskCase_ == 106) {
          return (com.google.protobuf.ByteString) mask_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ETH_DST (exactly 6 bytes)
       * </pre>
       *
       * <code>bytes eth_dst_mask = 106;</code>
       */
      public Builder setEthDstMask(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  maskCase_ = 106;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ETH_DST (exactly 6 bytes)
       * </pre>
       *
       * <code>bytes eth_dst_mask = 106;</code>
       */
      public Builder clearEthDstMask() {
        if (maskCase_ == 106) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_ETH_SRC (exactly 6 bytes)
       * </pre>
       *
       * <code>bytes eth_src_mask = 107;</code>
       */
      public com.google.protobuf.ByteString getEthSrcMask() {
        if (maskCase_ == 107) {
          return (com.google.protobuf.ByteString) mask_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ETH_SRC (exactly 6 bytes)
       * </pre>
       *
       * <code>bytes eth_src_mask = 107;</code>
       */
      public Builder setEthSrcMask(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  maskCase_ = 107;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ETH_SRC (exactly 6 bytes)
       * </pre>
       *
       * <code>bytes eth_src_mask = 107;</code>
       */
      public Builder clearEthSrcMask() {
        if (maskCase_ == 107) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_VLAN_VID 
       * </pre>
       *
       * <code>uint32 vlan_vid_mask = 109;</code>
       */
      public int getVlanVidMask() {
        if (maskCase_ == 109) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_VLAN_VID 
       * </pre>
       *
       * <code>uint32 vlan_vid_mask = 109;</code>
       */
      public Builder setVlanVidMask(int value) {
        maskCase_ = 109;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_VLAN_VID 
       * </pre>
       *
       * <code>uint32 vlan_vid_mask = 109;</code>
       */
      public Builder clearVlanVidMask() {
        if (maskCase_ == 109) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_IPV4_SRC 
       * </pre>
       *
       * <code>uint32 ipv4_src_mask = 114;</code>
       */
      public int getIpv4SrcMask() {
        if (maskCase_ == 114) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV4_SRC 
       * </pre>
       *
       * <code>uint32 ipv4_src_mask = 114;</code>
       */
      public Builder setIpv4SrcMask(int value) {
        maskCase_ = 114;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV4_SRC 
       * </pre>
       *
       * <code>uint32 ipv4_src_mask = 114;</code>
       */
      public Builder clearIpv4SrcMask() {
        if (maskCase_ == 114) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_IPV4_DST 
       * </pre>
       *
       * <code>uint32 ipv4_dst_mask = 115;</code>
       */
      public int getIpv4DstMask() {
        if (maskCase_ == 115) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV4_DST 
       * </pre>
       *
       * <code>uint32 ipv4_dst_mask = 115;</code>
       */
      public Builder setIpv4DstMask(int value) {
        maskCase_ = 115;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV4_DST 
       * </pre>
       *
       * <code>uint32 ipv4_dst_mask = 115;</code>
       */
      public Builder clearIpv4DstMask() {
        if (maskCase_ == 115) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_ARP_SPA 
       * </pre>
       *
       * <code>uint32 arp_spa_mask = 125;</code>
       */
      public int getArpSpaMask() {
        if (maskCase_ == 125) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_SPA 
       * </pre>
       *
       * <code>uint32 arp_spa_mask = 125;</code>
       */
      public Builder setArpSpaMask(int value) {
        maskCase_ = 125;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_SPA 
       * </pre>
       *
       * <code>uint32 arp_spa_mask = 125;</code>
       */
      public Builder clearArpSpaMask() {
        if (maskCase_ == 125) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_ARP_TPA 
       * </pre>
       *
       * <code>uint32 arp_tpa_mask = 126;</code>
       */
      public int getArpTpaMask() {
        if (maskCase_ == 126) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_TPA 
       * </pre>
       *
       * <code>uint32 arp_tpa_mask = 126;</code>
       */
      public Builder setArpTpaMask(int value) {
        maskCase_ = 126;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_ARP_TPA 
       * </pre>
       *
       * <code>uint32 arp_tpa_mask = 126;</code>
       */
      public Builder clearArpTpaMask() {
        if (maskCase_ == 126) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_SRC 
       * </pre>
       *
       * <code>bytes ipv6_src_mask = 129;</code>
       */
      public com.google.protobuf.ByteString getIpv6SrcMask() {
        if (maskCase_ == 129) {
          return (com.google.protobuf.ByteString) mask_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_SRC 
       * </pre>
       *
       * <code>bytes ipv6_src_mask = 129;</code>
       */
      public Builder setIpv6SrcMask(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  maskCase_ = 129;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_SRC 
       * </pre>
       *
       * <code>bytes ipv6_src_mask = 129;</code>
       */
      public Builder clearIpv6SrcMask() {
        if (maskCase_ == 129) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_DST 
       * </pre>
       *
       * <code>bytes ipv6_dst_mask = 130;</code>
       */
      public com.google.protobuf.ByteString getIpv6DstMask() {
        if (maskCase_ == 130) {
          return (com.google.protobuf.ByteString) mask_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_DST 
       * </pre>
       *
       * <code>bytes ipv6_dst_mask = 130;</code>
       */
      public Builder setIpv6DstMask(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  maskCase_ = 130;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_DST 
       * </pre>
       *
       * <code>bytes ipv6_dst_mask = 130;</code>
       */
      public Builder clearIpv6DstMask() {
        if (maskCase_ == 130) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_FLABEL 
       * </pre>
       *
       * <code>uint32 ipv6_flabel_mask = 131;</code>
       */
      public int getIpv6FlabelMask() {
        if (maskCase_ == 131) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_FLABEL 
       * </pre>
       *
       * <code>uint32 ipv6_flabel_mask = 131;</code>
       */
      public Builder setIpv6FlabelMask(int value) {
        maskCase_ = 131;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_FLABEL 
       * </pre>
       *
       * <code>uint32 ipv6_flabel_mask = 131;</code>
       */
      public Builder clearIpv6FlabelMask() {
        if (maskCase_ == 131) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_PBB_ISID 
       * </pre>
       *
       * <code>uint32 pbb_isid_mask = 140;</code>
       */
      public int getPbbIsidMask() {
        if (maskCase_ == 140) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_PBB_ISID 
       * </pre>
       *
       * <code>uint32 pbb_isid_mask = 140;</code>
       */
      public Builder setPbbIsidMask(int value) {
        maskCase_ = 140;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_PBB_ISID 
       * </pre>
       *
       * <code>uint32 pbb_isid_mask = 140;</code>
       */
      public Builder clearPbbIsidMask() {
        if (maskCase_ == 140) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_TUNNEL_ID 
       * </pre>
       *
       * <code>uint64 tunnel_id_mask = 141;</code>
       */
      public long getTunnelIdMask() {
        if (maskCase_ == 141) {
          return (java.lang.Long) mask_;
        }
        return 0L;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_TUNNEL_ID 
       * </pre>
       *
       * <code>uint64 tunnel_id_mask = 141;</code>
       */
      public Builder setTunnelIdMask(long value) {
        maskCase_ = 141;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_TUNNEL_ID 
       * </pre>
       *
       * <code>uint64 tunnel_id_mask = 141;</code>
       */
      public Builder clearTunnelIdMask() {
        if (maskCase_ == 141) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_EXTHDR 
       * </pre>
       *
       * <code>uint32 ipv6_exthdr_mask = 142;</code>
       */
      public int getIpv6ExthdrMask() {
        if (maskCase_ == 142) {
          return (java.lang.Integer) mask_;
        }
        return 0;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_EXTHDR 
       * </pre>
       *
       * <code>uint32 ipv6_exthdr_mask = 142;</code>
       */
      public Builder setIpv6ExthdrMask(int value) {
        maskCase_ = 142;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPXMT_OFB_IPV6_EXTHDR 
       * </pre>
       *
       * <code>uint32 ipv6_exthdr_mask = 142;</code>
       */
      public Builder clearIpv6ExthdrMask() {
        if (maskCase_ == 142) {
          maskCase_ = 0;
          mask_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_oxm_ofb_field)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_oxm_ofb_field)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_oxm_ofb_field>
        PARSER = new com.google.protobuf.AbstractParser<ofp_oxm_ofb_field>() {
      @java.lang.Override
      public ofp_oxm_ofb_field parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_oxm_ofb_field(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_oxm_ofb_field> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_oxm_ofb_field> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_ofb_field getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_oxm_experimenter_fieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_oxm_experimenter_field)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * oxm_class = OFPXMC_EXPERIMENTER 
     * </pre>
     *
     * <code>uint32 oxm_header = 1;</code>
     */
    int getOxmHeader();

    /**
     * <pre>
     * Experimenter ID which takes the same
     *form as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 2;</code>
     */
    int getExperimenter();
  }
  /**
   * <pre>
   * Header for OXM experimenter match fields.
   * The experimenter class should not use OXM_HEADER() macros for defining
   * fields due to this extra header. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_oxm_experimenter_field}
   */
  public  static final class ofp_oxm_experimenter_field extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_oxm_experimenter_field)
      ofp_oxm_experimenter_fieldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_oxm_experimenter_field.newBuilder() to construct.
    private ofp_oxm_experimenter_field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_oxm_experimenter_field() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_oxm_experimenter_field();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_oxm_experimenter_field(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              oxmHeader_ = input.readUInt32();
              break;
            }
            case 16: {

              experimenter_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_experimenter_field_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_experimenter_field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder.class);
    }

    public static final int OXM_HEADER_FIELD_NUMBER = 1;
    private int oxmHeader_;
    /**
     * <pre>
     * oxm_class = OFPXMC_EXPERIMENTER 
     * </pre>
     *
     * <code>uint32 oxm_header = 1;</code>
     */
    public int getOxmHeader() {
      return oxmHeader_;
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 2;
    private int experimenter_;
    /**
     * <pre>
     * Experimenter ID which takes the same
     *form as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 2;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (oxmHeader_ != 0) {
        output.writeUInt32(1, oxmHeader_);
      }
      if (experimenter_ != 0) {
        output.writeUInt32(2, experimenter_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (oxmHeader_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, oxmHeader_);
      }
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, experimenter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field other = (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) obj;

      if (getOxmHeader()
          != other.getOxmHeader()) return false;
      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OXM_HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getOxmHeader();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Header for OXM experimenter match fields.
     * The experimenter class should not use OXM_HEADER() macros for defining
     * fields due to this extra header. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_oxm_experimenter_field}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_oxm_experimenter_field)
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_fieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_experimenter_field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_experimenter_field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        oxmHeader_ = 0;

        experimenter_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_oxm_experimenter_field_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field result = new org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field(this);
        result.oxmHeader_ = oxmHeader_;
        result.experimenter_ = experimenter_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field.getDefaultInstance()) return this;
        if (other.getOxmHeader() != 0) {
          setOxmHeader(other.getOxmHeader());
        }
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int oxmHeader_ ;
      /**
       * <pre>
       * oxm_class = OFPXMC_EXPERIMENTER 
       * </pre>
       *
       * <code>uint32 oxm_header = 1;</code>
       */
      public int getOxmHeader() {
        return oxmHeader_;
      }
      /**
       * <pre>
       * oxm_class = OFPXMC_EXPERIMENTER 
       * </pre>
       *
       * <code>uint32 oxm_header = 1;</code>
       */
      public Builder setOxmHeader(int value) {
        
        oxmHeader_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * oxm_class = OFPXMC_EXPERIMENTER 
       * </pre>
       *
       * <code>uint32 oxm_header = 1;</code>
       */
      public Builder clearOxmHeader() {
        
        oxmHeader_ = 0;
        onChanged();
        return this;
      }

      private int experimenter_ ;
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_oxm_experimenter_field)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_oxm_experimenter_field)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_oxm_experimenter_field>
        PARSER = new com.google.protobuf.AbstractParser<ofp_oxm_experimenter_field>() {
      @java.lang.Override
      public ofp_oxm_experimenter_field parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_oxm_experimenter_field(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_oxm_experimenter_field> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_oxm_experimenter_field> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_experimenter_field getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_actionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPAT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_action_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of OFPAT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_action_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_type getType();

    /**
     * <code>.openflow_13.ofp_action_output output = 2;</code>
     */
    boolean hasOutput();
    /**
     * <code>.openflow_13.ofp_action_output output = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_output getOutput();
    /**
     * <code>.openflow_13.ofp_action_output output = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_outputOrBuilder getOutputOrBuilder();

    /**
     * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
     */
    boolean hasMplsTtl();
    /**
     * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl getMplsTtl();
    /**
     * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttlOrBuilder getMplsTtlOrBuilder();

    /**
     * <code>.openflow_13.ofp_action_push push = 4;</code>
     */
    boolean hasPush();
    /**
     * <code>.openflow_13.ofp_action_push push = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_push getPush();
    /**
     * <code>.openflow_13.ofp_action_push push = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_pushOrBuilder getPushOrBuilder();

    /**
     * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
     */
    boolean hasPopMpls();
    /**
     * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls getPopMpls();
    /**
     * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mplsOrBuilder getPopMplsOrBuilder();

    /**
     * <code>.openflow_13.ofp_action_group group = 6;</code>
     */
    boolean hasGroup();
    /**
     * <code>.openflow_13.ofp_action_group group = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_group getGroup();
    /**
     * <code>.openflow_13.ofp_action_group group = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_groupOrBuilder getGroupOrBuilder();

    /**
     * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
     */
    boolean hasNwTtl();
    /**
     * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl getNwTtl();
    /**
     * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttlOrBuilder getNwTtlOrBuilder();

    /**
     * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
     */
    boolean hasSetField();
    /**
     * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field getSetField();
    /**
     * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_set_fieldOrBuilder getSetFieldOrBuilder();

    /**
     * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
     */
    boolean hasExperimenter();
    /**
     * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter getExperimenter();
    /**
     * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenterOrBuilder getExperimenterOrBuilder();

    public org.opencord.voltha.openflow13.Openflow13.ofp_action.ActionCase getActionCase();
  }
  /**
   * <pre>
   * Action header that is common to all actions.  The length includes the
   * header and any padding used to make the action 64-bit aligned.
   * NB: The length of an action *must* always be a multiple of eight. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action}
   */
  public  static final class ofp_action extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action)
      ofp_actionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action.newBuilder() to construct.
    private ofp_action(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder subBuilder = null;
              if (actionCase_ == 2) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_output.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 2;
              break;
            }
            case 26: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder subBuilder = null;
              if (actionCase_ == 3) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 3;
              break;
            }
            case 34: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder subBuilder = null;
              if (actionCase_ == 4) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_push.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 4;
              break;
            }
            case 42: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder subBuilder = null;
              if (actionCase_ == 5) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 5;
              break;
            }
            case 50: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder subBuilder = null;
              if (actionCase_ == 6) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_group.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 6;
              break;
            }
            case 58: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder subBuilder = null;
              if (actionCase_ == 7) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 7;
              break;
            }
            case 66: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder subBuilder = null;
              if (actionCase_ == 8) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 8;
              break;
            }
            case 74: {
              org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder subBuilder = null;
              if (actionCase_ == 9) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_).toBuilder();
              }
              action_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_);
                action_ = subBuilder.buildPartial();
              }
              actionCase_ = 9;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action.class, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder.class);
    }

    private int actionCase_ = 0;
    private java.lang.Object action_;
    public enum ActionCase
        implements com.google.protobuf.Internal.EnumLite {
      OUTPUT(2),
      MPLS_TTL(3),
      PUSH(4),
      POP_MPLS(5),
      GROUP(6),
      NW_TTL(7),
      SET_FIELD(8),
      EXPERIMENTER(9),
      ACTION_NOT_SET(0);
      private final int value;
      private ActionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ActionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ActionCase forNumber(int value) {
        switch (value) {
          case 2: return OUTPUT;
          case 3: return MPLS_TTL;
          case 4: return PUSH;
          case 5: return POP_MPLS;
          case 6: return GROUP;
          case 7: return NW_TTL;
          case 8: return SET_FIELD;
          case 9: return EXPERIMENTER;
          case 0: return ACTION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ActionCase
    getActionCase() {
      return ActionCase.forNumber(
          actionCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * One of OFPAT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_action_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of OFPAT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_action_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_action_type result = org.opencord.voltha.openflow13.Openflow13.ofp_action_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_action_type.UNRECOGNIZED : result;
    }

    public static final int OUTPUT_FIELD_NUMBER = 2;
    /**
     * <code>.openflow_13.ofp_action_output output = 2;</code>
     */
    public boolean hasOutput() {
      return actionCase_ == 2;
    }
    /**
     * <code>.openflow_13.ofp_action_output output = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_output getOutput() {
      if (actionCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_output output = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_outputOrBuilder getOutputOrBuilder() {
      if (actionCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance();
    }

    public static final int MPLS_TTL_FIELD_NUMBER = 3;
    /**
     * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
     */
    public boolean hasMplsTtl() {
      return actionCase_ == 3;
    }
    /**
     * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl getMplsTtl() {
      if (actionCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttlOrBuilder getMplsTtlOrBuilder() {
      if (actionCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance();
    }

    public static final int PUSH_FIELD_NUMBER = 4;
    /**
     * <code>.openflow_13.ofp_action_push push = 4;</code>
     */
    public boolean hasPush() {
      return actionCase_ == 4;
    }
    /**
     * <code>.openflow_13.ofp_action_push push = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_push getPush() {
      if (actionCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_push push = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_pushOrBuilder getPushOrBuilder() {
      if (actionCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance();
    }

    public static final int POP_MPLS_FIELD_NUMBER = 5;
    /**
     * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
     */
    public boolean hasPopMpls() {
      return actionCase_ == 5;
    }
    /**
     * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls getPopMpls() {
      if (actionCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mplsOrBuilder getPopMplsOrBuilder() {
      if (actionCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance();
    }

    public static final int GROUP_FIELD_NUMBER = 6;
    /**
     * <code>.openflow_13.ofp_action_group group = 6;</code>
     */
    public boolean hasGroup() {
      return actionCase_ == 6;
    }
    /**
     * <code>.openflow_13.ofp_action_group group = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_group getGroup() {
      if (actionCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_group group = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_groupOrBuilder getGroupOrBuilder() {
      if (actionCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance();
    }

    public static final int NW_TTL_FIELD_NUMBER = 7;
    /**
     * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
     */
    public boolean hasNwTtl() {
      return actionCase_ == 7;
    }
    /**
     * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl getNwTtl() {
      if (actionCase_ == 7) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttlOrBuilder getNwTtlOrBuilder() {
      if (actionCase_ == 7) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance();
    }

    public static final int SET_FIELD_FIELD_NUMBER = 8;
    /**
     * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
     */
    public boolean hasSetField() {
      return actionCase_ == 8;
    }
    /**
     * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field getSetField() {
      if (actionCase_ == 8) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_fieldOrBuilder getSetFieldOrBuilder() {
      if (actionCase_ == 8) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance();
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 9;
    /**
     * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
     */
    public boolean hasExperimenter() {
      return actionCase_ == 9;
    }
    /**
     * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter getExperimenter() {
      if (actionCase_ == 9) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenterOrBuilder getExperimenterOrBuilder() {
      if (actionCase_ == 9) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_type.OFPAT_OUTPUT.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (actionCase_ == 2) {
        output.writeMessage(2, (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_);
      }
      if (actionCase_ == 3) {
        output.writeMessage(3, (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_);
      }
      if (actionCase_ == 4) {
        output.writeMessage(4, (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_);
      }
      if (actionCase_ == 5) {
        output.writeMessage(5, (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_);
      }
      if (actionCase_ == 6) {
        output.writeMessage(6, (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_);
      }
      if (actionCase_ == 7) {
        output.writeMessage(7, (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_);
      }
      if (actionCase_ == 8) {
        output.writeMessage(8, (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_);
      }
      if (actionCase_ == 9) {
        output.writeMessage(9, (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_type.OFPAT_OUTPUT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (actionCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_);
      }
      if (actionCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_);
      }
      if (actionCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_);
      }
      if (actionCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_);
      }
      if (actionCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_);
      }
      if (actionCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_);
      }
      if (actionCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_);
      }
      if (actionCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action other = (org.opencord.voltha.openflow13.Openflow13.ofp_action) obj;

      if (type_ != other.type_) return false;
      if (!getActionCase().equals(other.getActionCase())) return false;
      switch (actionCase_) {
        case 2:
          if (!getOutput()
              .equals(other.getOutput())) return false;
          break;
        case 3:
          if (!getMplsTtl()
              .equals(other.getMplsTtl())) return false;
          break;
        case 4:
          if (!getPush()
              .equals(other.getPush())) return false;
          break;
        case 5:
          if (!getPopMpls()
              .equals(other.getPopMpls())) return false;
          break;
        case 6:
          if (!getGroup()
              .equals(other.getGroup())) return false;
          break;
        case 7:
          if (!getNwTtl()
              .equals(other.getNwTtl())) return false;
          break;
        case 8:
          if (!getSetField()
              .equals(other.getSetField())) return false;
          break;
        case 9:
          if (!getExperimenter()
              .equals(other.getExperimenter())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      switch (actionCase_) {
        case 2:
          hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
          hash = (53 * hash) + getOutput().hashCode();
          break;
        case 3:
          hash = (37 * hash) + MPLS_TTL_FIELD_NUMBER;
          hash = (53 * hash) + getMplsTtl().hashCode();
          break;
        case 4:
          hash = (37 * hash) + PUSH_FIELD_NUMBER;
          hash = (53 * hash) + getPush().hashCode();
          break;
        case 5:
          hash = (37 * hash) + POP_MPLS_FIELD_NUMBER;
          hash = (53 * hash) + getPopMpls().hashCode();
          break;
        case 6:
          hash = (37 * hash) + GROUP_FIELD_NUMBER;
          hash = (53 * hash) + getGroup().hashCode();
          break;
        case 7:
          hash = (37 * hash) + NW_TTL_FIELD_NUMBER;
          hash = (53 * hash) + getNwTtl().hashCode();
          break;
        case 8:
          hash = (37 * hash) + SET_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getSetField().hashCode();
          break;
        case 9:
          hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
          hash = (53 * hash) + getExperimenter().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action header that is common to all actions.  The length includes the
     * header and any padding used to make the action 64-bit aligned.
     * NB: The length of an action *must* always be a multiple of eight. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action)
        org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action.class, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        actionCase_ = 0;
        action_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action result = new org.opencord.voltha.openflow13.Openflow13.ofp_action(this);
        result.type_ = type_;
        if (actionCase_ == 2) {
          if (outputBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = outputBuilder_.build();
          }
        }
        if (actionCase_ == 3) {
          if (mplsTtlBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = mplsTtlBuilder_.build();
          }
        }
        if (actionCase_ == 4) {
          if (pushBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = pushBuilder_.build();
          }
        }
        if (actionCase_ == 5) {
          if (popMplsBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = popMplsBuilder_.build();
          }
        }
        if (actionCase_ == 6) {
          if (groupBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = groupBuilder_.build();
          }
        }
        if (actionCase_ == 7) {
          if (nwTtlBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = nwTtlBuilder_.build();
          }
        }
        if (actionCase_ == 8) {
          if (setFieldBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = setFieldBuilder_.build();
          }
        }
        if (actionCase_ == 9) {
          if (experimenterBuilder_ == null) {
            result.action_ = action_;
          } else {
            result.action_ = experimenterBuilder_.build();
          }
        }
        result.actionCase_ = actionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        switch (other.getActionCase()) {
          case OUTPUT: {
            mergeOutput(other.getOutput());
            break;
          }
          case MPLS_TTL: {
            mergeMplsTtl(other.getMplsTtl());
            break;
          }
          case PUSH: {
            mergePush(other.getPush());
            break;
          }
          case POP_MPLS: {
            mergePopMpls(other.getPopMpls());
            break;
          }
          case GROUP: {
            mergeGroup(other.getGroup());
            break;
          }
          case NW_TTL: {
            mergeNwTtl(other.getNwTtl());
            break;
          }
          case SET_FIELD: {
            mergeSetField(other.getSetField());
            break;
          }
          case EXPERIMENTER: {
            mergeExperimenter(other.getExperimenter());
            break;
          }
          case ACTION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int actionCase_ = 0;
      private java.lang.Object action_;
      public ActionCase
          getActionCase() {
        return ActionCase.forNumber(
            actionCase_);
      }

      public Builder clearAction() {
        actionCase_ = 0;
        action_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * One of OFPAT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_action_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of OFPAT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_action_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPAT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_action_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_action_type result = org.opencord.voltha.openflow13.Openflow13.ofp_action_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_action_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPAT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_action_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_action_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPAT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_action_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_output, org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_outputOrBuilder> outputBuilder_;
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public boolean hasOutput() {
        return actionCase_ == 2;
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_output getOutput() {
        if (outputBuilder_ == null) {
          if (actionCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance();
        } else {
          if (actionCase_ == 2) {
            return outputBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public Builder setOutput(org.opencord.voltha.openflow13.Openflow13.ofp_action_output value) {
        if (outputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          outputBuilder_.setMessage(value);
        }
        actionCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public Builder setOutput(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder builderForValue) {
        if (outputBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          outputBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public Builder mergeOutput(org.opencord.voltha.openflow13.Openflow13.ofp_action_output value) {
        if (outputBuilder_ == null) {
          if (actionCase_ == 2 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_output.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 2) {
            outputBuilder_.mergeFrom(value);
          }
          outputBuilder_.setMessage(value);
        }
        actionCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public Builder clearOutput() {
        if (outputBuilder_ == null) {
          if (actionCase_ == 2) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 2) {
            actionCase_ = 0;
            action_ = null;
          }
          outputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder getOutputBuilder() {
        return getOutputFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_outputOrBuilder getOutputOrBuilder() {
        if ((actionCase_ == 2) && (outputBuilder_ != null)) {
          return outputBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_output output = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_output, org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_outputOrBuilder> 
          getOutputFieldBuilder() {
        if (outputBuilder_ == null) {
          if (!(actionCase_ == 2)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance();
          }
          outputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_output, org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_outputOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 2;
        onChanged();;
        return outputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttlOrBuilder> mplsTtlBuilder_;
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public boolean hasMplsTtl() {
        return actionCase_ == 3;
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl getMplsTtl() {
        if (mplsTtlBuilder_ == null) {
          if (actionCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance();
        } else {
          if (actionCase_ == 3) {
            return mplsTtlBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public Builder setMplsTtl(org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl value) {
        if (mplsTtlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          mplsTtlBuilder_.setMessage(value);
        }
        actionCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public Builder setMplsTtl(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder builderForValue) {
        if (mplsTtlBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          mplsTtlBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public Builder mergeMplsTtl(org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl value) {
        if (mplsTtlBuilder_ == null) {
          if (actionCase_ == 3 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 3) {
            mplsTtlBuilder_.mergeFrom(value);
          }
          mplsTtlBuilder_.setMessage(value);
        }
        actionCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public Builder clearMplsTtl() {
        if (mplsTtlBuilder_ == null) {
          if (actionCase_ == 3) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 3) {
            actionCase_ = 0;
            action_ = null;
          }
          mplsTtlBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder getMplsTtlBuilder() {
        return getMplsTtlFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttlOrBuilder getMplsTtlOrBuilder() {
        if ((actionCase_ == 3) && (mplsTtlBuilder_ != null)) {
          return mplsTtlBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_mpls_ttl mpls_ttl = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttlOrBuilder> 
          getMplsTtlFieldBuilder() {
        if (mplsTtlBuilder_ == null) {
          if (!(actionCase_ == 3)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance();
          }
          mplsTtlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttlOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 3;
        onChanged();;
        return mplsTtlBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_push, org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_pushOrBuilder> pushBuilder_;
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public boolean hasPush() {
        return actionCase_ == 4;
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_push getPush() {
        if (pushBuilder_ == null) {
          if (actionCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance();
        } else {
          if (actionCase_ == 4) {
            return pushBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public Builder setPush(org.opencord.voltha.openflow13.Openflow13.ofp_action_push value) {
        if (pushBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          pushBuilder_.setMessage(value);
        }
        actionCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public Builder setPush(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder builderForValue) {
        if (pushBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          pushBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public Builder mergePush(org.opencord.voltha.openflow13.Openflow13.ofp_action_push value) {
        if (pushBuilder_ == null) {
          if (actionCase_ == 4 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_push.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 4) {
            pushBuilder_.mergeFrom(value);
          }
          pushBuilder_.setMessage(value);
        }
        actionCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public Builder clearPush() {
        if (pushBuilder_ == null) {
          if (actionCase_ == 4) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 4) {
            actionCase_ = 0;
            action_ = null;
          }
          pushBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder getPushBuilder() {
        return getPushFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_pushOrBuilder getPushOrBuilder() {
        if ((actionCase_ == 4) && (pushBuilder_ != null)) {
          return pushBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_push push = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_push, org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_pushOrBuilder> 
          getPushFieldBuilder() {
        if (pushBuilder_ == null) {
          if (!(actionCase_ == 4)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance();
          }
          pushBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_push, org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_pushOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 4;
        onChanged();;
        return pushBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mplsOrBuilder> popMplsBuilder_;
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public boolean hasPopMpls() {
        return actionCase_ == 5;
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls getPopMpls() {
        if (popMplsBuilder_ == null) {
          if (actionCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance();
        } else {
          if (actionCase_ == 5) {
            return popMplsBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public Builder setPopMpls(org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls value) {
        if (popMplsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          popMplsBuilder_.setMessage(value);
        }
        actionCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public Builder setPopMpls(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder builderForValue) {
        if (popMplsBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          popMplsBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public Builder mergePopMpls(org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls value) {
        if (popMplsBuilder_ == null) {
          if (actionCase_ == 5 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 5) {
            popMplsBuilder_.mergeFrom(value);
          }
          popMplsBuilder_.setMessage(value);
        }
        actionCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public Builder clearPopMpls() {
        if (popMplsBuilder_ == null) {
          if (actionCase_ == 5) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 5) {
            actionCase_ = 0;
            action_ = null;
          }
          popMplsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder getPopMplsBuilder() {
        return getPopMplsFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mplsOrBuilder getPopMplsOrBuilder() {
        if ((actionCase_ == 5) && (popMplsBuilder_ != null)) {
          return popMplsBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_pop_mpls pop_mpls = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mplsOrBuilder> 
          getPopMplsFieldBuilder() {
        if (popMplsBuilder_ == null) {
          if (!(actionCase_ == 5)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance();
          }
          popMplsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mplsOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 5;
        onChanged();;
        return popMplsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_group, org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_groupOrBuilder> groupBuilder_;
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public boolean hasGroup() {
        return actionCase_ == 6;
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_group getGroup() {
        if (groupBuilder_ == null) {
          if (actionCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance();
        } else {
          if (actionCase_ == 6) {
            return groupBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public Builder setGroup(org.opencord.voltha.openflow13.Openflow13.ofp_action_group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          groupBuilder_.setMessage(value);
        }
        actionCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public Builder setGroup(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          groupBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public Builder mergeGroup(org.opencord.voltha.openflow13.Openflow13.ofp_action_group value) {
        if (groupBuilder_ == null) {
          if (actionCase_ == 6 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_group.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 6) {
            groupBuilder_.mergeFrom(value);
          }
          groupBuilder_.setMessage(value);
        }
        actionCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          if (actionCase_ == 6) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 6) {
            actionCase_ = 0;
            action_ = null;
          }
          groupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder getGroupBuilder() {
        return getGroupFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_groupOrBuilder getGroupOrBuilder() {
        if ((actionCase_ == 6) && (groupBuilder_ != null)) {
          return groupBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_group group = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_group, org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_groupOrBuilder> 
          getGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          if (!(actionCase_ == 6)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance();
          }
          groupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_group, org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_groupOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 6;
        onChanged();;
        return groupBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttlOrBuilder> nwTtlBuilder_;
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public boolean hasNwTtl() {
        return actionCase_ == 7;
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl getNwTtl() {
        if (nwTtlBuilder_ == null) {
          if (actionCase_ == 7) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance();
        } else {
          if (actionCase_ == 7) {
            return nwTtlBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public Builder setNwTtl(org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl value) {
        if (nwTtlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          nwTtlBuilder_.setMessage(value);
        }
        actionCase_ = 7;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public Builder setNwTtl(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder builderForValue) {
        if (nwTtlBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          nwTtlBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 7;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public Builder mergeNwTtl(org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl value) {
        if (nwTtlBuilder_ == null) {
          if (actionCase_ == 7 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 7) {
            nwTtlBuilder_.mergeFrom(value);
          }
          nwTtlBuilder_.setMessage(value);
        }
        actionCase_ = 7;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public Builder clearNwTtl() {
        if (nwTtlBuilder_ == null) {
          if (actionCase_ == 7) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 7) {
            actionCase_ = 0;
            action_ = null;
          }
          nwTtlBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder getNwTtlBuilder() {
        return getNwTtlFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttlOrBuilder getNwTtlOrBuilder() {
        if ((actionCase_ == 7) && (nwTtlBuilder_ != null)) {
          return nwTtlBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 7) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_nw_ttl nw_ttl = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttlOrBuilder> 
          getNwTtlFieldBuilder() {
        if (nwTtlBuilder_ == null) {
          if (!(actionCase_ == 7)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance();
          }
          nwTtlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttlOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 7;
        onChanged();;
        return nwTtlBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_fieldOrBuilder> setFieldBuilder_;
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public boolean hasSetField() {
        return actionCase_ == 8;
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field getSetField() {
        if (setFieldBuilder_ == null) {
          if (actionCase_ == 8) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance();
        } else {
          if (actionCase_ == 8) {
            return setFieldBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public Builder setSetField(org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field value) {
        if (setFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          setFieldBuilder_.setMessage(value);
        }
        actionCase_ = 8;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public Builder setSetField(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder builderForValue) {
        if (setFieldBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          setFieldBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 8;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public Builder mergeSetField(org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field value) {
        if (setFieldBuilder_ == null) {
          if (actionCase_ == 8 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 8) {
            setFieldBuilder_.mergeFrom(value);
          }
          setFieldBuilder_.setMessage(value);
        }
        actionCase_ = 8;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public Builder clearSetField() {
        if (setFieldBuilder_ == null) {
          if (actionCase_ == 8) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 8) {
            actionCase_ = 0;
            action_ = null;
          }
          setFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder getSetFieldBuilder() {
        return getSetFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_fieldOrBuilder getSetFieldOrBuilder() {
        if ((actionCase_ == 8) && (setFieldBuilder_ != null)) {
          return setFieldBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 8) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_set_field set_field = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_fieldOrBuilder> 
          getSetFieldFieldBuilder() {
        if (setFieldBuilder_ == null) {
          if (!(actionCase_ == 8)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance();
          }
          setFieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_fieldOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 8;
        onChanged();;
        return setFieldBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenterOrBuilder> experimenterBuilder_;
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public boolean hasExperimenter() {
        return actionCase_ == 9;
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter getExperimenter() {
        if (experimenterBuilder_ == null) {
          if (actionCase_ == 9) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance();
        } else {
          if (actionCase_ == 9) {
            return experimenterBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public Builder setExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          experimenterBuilder_.setMessage(value);
        }
        actionCase_ = 9;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public Builder setExperimenter(
          org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder builderForValue) {
        if (experimenterBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          experimenterBuilder_.setMessage(builderForValue.build());
        }
        actionCase_ = 9;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public Builder mergeExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (actionCase_ == 9 &&
              action_ != org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance()) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_)
                .mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          if (actionCase_ == 9) {
            experimenterBuilder_.mergeFrom(value);
          }
          experimenterBuilder_.setMessage(value);
        }
        actionCase_ = 9;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public Builder clearExperimenter() {
        if (experimenterBuilder_ == null) {
          if (actionCase_ == 9) {
            actionCase_ = 0;
            action_ = null;
            onChanged();
          }
        } else {
          if (actionCase_ == 9) {
            actionCase_ = 0;
            action_ = null;
          }
          experimenterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder getExperimenterBuilder() {
        return getExperimenterFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenterOrBuilder getExperimenterOrBuilder() {
        if ((actionCase_ == 9) && (experimenterBuilder_ != null)) {
          return experimenterBuilder_.getMessageOrBuilder();
        } else {
          if (actionCase_ == 9) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_action_experimenter experimenter = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenterOrBuilder> 
          getExperimenterFieldBuilder() {
        if (experimenterBuilder_ == null) {
          if (!(actionCase_ == 9)) {
            action_ = org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance();
          }
          experimenterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenterOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        actionCase_ = 9;
        onChanged();;
        return experimenterBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action>() {
      @java.lang.Override
      public ofp_action parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_outputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_output)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Output port. 
     * </pre>
     *
     * <code>uint32 port = 1;</code>
     */
    int getPort();

    /**
     * <pre>
     * Max length to send to controller. 
     * </pre>
     *
     * <code>uint32 max_len = 2;</code>
     */
    int getMaxLen();
  }
  /**
   * <pre>
   * Action structure for OFPAT_OUTPUT, which sends packets out 'port'.
   * When the 'port' is the OFPP_CONTROLLER, 'max_len' indicates the max
   * number of bytes to send.  A 'max_len' of zero means no bytes of the
   * packet should be sent. A 'max_len' of OFPCML_NO_BUFFER means that
   * the packet is not buffered and the complete packet is to be sent to
   * the controller. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_output}
   */
  public  static final class ofp_action_output extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_output)
      ofp_action_outputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_output.newBuilder() to construct.
    private ofp_action_output(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_output() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_output();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_output(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              port_ = input.readUInt32();
              break;
            }
            case 16: {

              maxLen_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_output_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_output_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_output.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private int port_;
    /**
     * <pre>
     * Output port. 
     * </pre>
     *
     * <code>uint32 port = 1;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int MAX_LEN_FIELD_NUMBER = 2;
    private int maxLen_;
    /**
     * <pre>
     * Max length to send to controller. 
     * </pre>
     *
     * <code>uint32 max_len = 2;</code>
     */
    public int getMaxLen() {
      return maxLen_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != 0) {
        output.writeUInt32(1, port_);
      }
      if (maxLen_ != 0) {
        output.writeUInt32(2, maxLen_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, port_);
      }
      if (maxLen_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, maxLen_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_output)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_output other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) obj;

      if (getPort()
          != other.getPort()) return false;
      if (getMaxLen()
          != other.getMaxLen()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + MAX_LEN_FIELD_NUMBER;
      hash = (53 * hash) + getMaxLen();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_output prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action structure for OFPAT_OUTPUT, which sends packets out 'port'.
     * When the 'port' is the OFPP_CONTROLLER, 'max_len' indicates the max
     * number of bytes to send.  A 'max_len' of zero means no bytes of the
     * packet should be sent. A 'max_len' of OFPCML_NO_BUFFER means that
     * the packet is not buffered and the complete packet is to be sent to
     * the controller. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_output}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_output)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_outputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_output_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_output_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_output.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_output.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_output.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        port_ = 0;

        maxLen_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_output_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_output getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_output build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_output result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_output buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_output result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_output(this);
        result.port_ = port_;
        result.maxLen_ = maxLen_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_output) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_output)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_output other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_output.getDefaultInstance()) return this;
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.getMaxLen() != 0) {
          setMaxLen(other.getMaxLen());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_output parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_output) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * Output port. 
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * Output port. 
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output port. 
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private int maxLen_ ;
      /**
       * <pre>
       * Max length to send to controller. 
       * </pre>
       *
       * <code>uint32 max_len = 2;</code>
       */
      public int getMaxLen() {
        return maxLen_;
      }
      /**
       * <pre>
       * Max length to send to controller. 
       * </pre>
       *
       * <code>uint32 max_len = 2;</code>
       */
      public Builder setMaxLen(int value) {
        
        maxLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max length to send to controller. 
       * </pre>
       *
       * <code>uint32 max_len = 2;</code>
       */
      public Builder clearMaxLen() {
        
        maxLen_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_output)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_output)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_output DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_output();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_output getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_output>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_output>() {
      @java.lang.Override
      public ofp_action_output parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_output(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_output> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_output> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_output getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_mpls_ttlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_mpls_ttl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * MPLS TTL 
     * </pre>
     *
     * <code>uint32 mpls_ttl = 1;</code>
     */
    int getMplsTtl();
  }
  /**
   * <pre>
   * Action structure for OFPAT_SET_MPLS_TTL. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_mpls_ttl}
   */
  public  static final class ofp_action_mpls_ttl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_mpls_ttl)
      ofp_action_mpls_ttlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_mpls_ttl.newBuilder() to construct.
    private ofp_action_mpls_ttl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_mpls_ttl() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_mpls_ttl();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_mpls_ttl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              mplsTtl_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_mpls_ttl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_mpls_ttl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder.class);
    }

    public static final int MPLS_TTL_FIELD_NUMBER = 1;
    private int mplsTtl_;
    /**
     * <pre>
     * MPLS TTL 
     * </pre>
     *
     * <code>uint32 mpls_ttl = 1;</code>
     */
    public int getMplsTtl() {
      return mplsTtl_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mplsTtl_ != 0) {
        output.writeUInt32(1, mplsTtl_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mplsTtl_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, mplsTtl_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) obj;

      if (getMplsTtl()
          != other.getMplsTtl()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MPLS_TTL_FIELD_NUMBER;
      hash = (53 * hash) + getMplsTtl();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action structure for OFPAT_SET_MPLS_TTL. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_mpls_ttl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_mpls_ttl)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_mpls_ttl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_mpls_ttl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mplsTtl_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_mpls_ttl_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl(this);
        result.mplsTtl_ = mplsTtl_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl.getDefaultInstance()) return this;
        if (other.getMplsTtl() != 0) {
          setMplsTtl(other.getMplsTtl());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mplsTtl_ ;
      /**
       * <pre>
       * MPLS TTL 
       * </pre>
       *
       * <code>uint32 mpls_ttl = 1;</code>
       */
      public int getMplsTtl() {
        return mplsTtl_;
      }
      /**
       * <pre>
       * MPLS TTL 
       * </pre>
       *
       * <code>uint32 mpls_ttl = 1;</code>
       */
      public Builder setMplsTtl(int value) {
        
        mplsTtl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MPLS TTL 
       * </pre>
       *
       * <code>uint32 mpls_ttl = 1;</code>
       */
      public Builder clearMplsTtl() {
        
        mplsTtl_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_mpls_ttl)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_mpls_ttl)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_mpls_ttl>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_mpls_ttl>() {
      @java.lang.Override
      public ofp_action_mpls_ttl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_mpls_ttl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_mpls_ttl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_mpls_ttl> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_mpls_ttl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_pushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_push)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Ethertype 
     * </pre>
     *
     * <code>uint32 ethertype = 1;</code>
     */
    int getEthertype();
  }
  /**
   * <pre>
   * Action structure for OFPAT_PUSH_VLAN/MPLS/PBB. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_push}
   */
  public  static final class ofp_action_push extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_push)
      ofp_action_pushOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_push.newBuilder() to construct.
    private ofp_action_push(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_push() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_push();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_push(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              ethertype_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_push_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_push_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_push.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder.class);
    }

    public static final int ETHERTYPE_FIELD_NUMBER = 1;
    private int ethertype_;
    /**
     * <pre>
     * Ethertype 
     * </pre>
     *
     * <code>uint32 ethertype = 1;</code>
     */
    public int getEthertype() {
      return ethertype_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ethertype_ != 0) {
        output.writeUInt32(1, ethertype_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ethertype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ethertype_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_push)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_push other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) obj;

      if (getEthertype()
          != other.getEthertype()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ETHERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getEthertype();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_push prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action structure for OFPAT_PUSH_VLAN/MPLS/PBB. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_push}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_push)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_pushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_push_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_push_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_push.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_push.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_push.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ethertype_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_push_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_push getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_push build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_push result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_push buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_push result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_push(this);
        result.ethertype_ = ethertype_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_push) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_push)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_push other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_push.getDefaultInstance()) return this;
        if (other.getEthertype() != 0) {
          setEthertype(other.getEthertype());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_push parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_push) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int ethertype_ ;
      /**
       * <pre>
       * Ethertype 
       * </pre>
       *
       * <code>uint32 ethertype = 1;</code>
       */
      public int getEthertype() {
        return ethertype_;
      }
      /**
       * <pre>
       * Ethertype 
       * </pre>
       *
       * <code>uint32 ethertype = 1;</code>
       */
      public Builder setEthertype(int value) {
        
        ethertype_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ethertype 
       * </pre>
       *
       * <code>uint32 ethertype = 1;</code>
       */
      public Builder clearEthertype() {
        
        ethertype_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_push)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_push)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_push DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_push();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_push getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_push>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_push>() {
      @java.lang.Override
      public ofp_action_push parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_push(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_push> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_push> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_push getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_pop_mplsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_pop_mpls)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Ethertype 
     * </pre>
     *
     * <code>uint32 ethertype = 1;</code>
     */
    int getEthertype();
  }
  /**
   * <pre>
   * Action structure for OFPAT_POP_MPLS. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_pop_mpls}
   */
  public  static final class ofp_action_pop_mpls extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_pop_mpls)
      ofp_action_pop_mplsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_pop_mpls.newBuilder() to construct.
    private ofp_action_pop_mpls(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_pop_mpls() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_pop_mpls();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_pop_mpls(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              ethertype_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_pop_mpls_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_pop_mpls_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder.class);
    }

    public static final int ETHERTYPE_FIELD_NUMBER = 1;
    private int ethertype_;
    /**
     * <pre>
     * Ethertype 
     * </pre>
     *
     * <code>uint32 ethertype = 1;</code>
     */
    public int getEthertype() {
      return ethertype_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ethertype_ != 0) {
        output.writeUInt32(1, ethertype_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ethertype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ethertype_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) obj;

      if (getEthertype()
          != other.getEthertype()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ETHERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getEthertype();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action structure for OFPAT_POP_MPLS. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_pop_mpls}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_pop_mpls)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mplsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_pop_mpls_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_pop_mpls_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ethertype_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_pop_mpls_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls(this);
        result.ethertype_ = ethertype_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls.getDefaultInstance()) return this;
        if (other.getEthertype() != 0) {
          setEthertype(other.getEthertype());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int ethertype_ ;
      /**
       * <pre>
       * Ethertype 
       * </pre>
       *
       * <code>uint32 ethertype = 1;</code>
       */
      public int getEthertype() {
        return ethertype_;
      }
      /**
       * <pre>
       * Ethertype 
       * </pre>
       *
       * <code>uint32 ethertype = 1;</code>
       */
      public Builder setEthertype(int value) {
        
        ethertype_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ethertype 
       * </pre>
       *
       * <code>uint32 ethertype = 1;</code>
       */
      public Builder clearEthertype() {
        
        ethertype_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_pop_mpls)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_pop_mpls)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_pop_mpls>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_pop_mpls>() {
      @java.lang.Override
      public ofp_action_pop_mpls parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_pop_mpls(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_pop_mpls> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_pop_mpls> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_pop_mpls getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_groupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_group)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 1;</code>
     */
    int getGroupId();
  }
  /**
   * <pre>
   * Action structure for OFPAT_GROUP. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_group}
   */
  public  static final class ofp_action_group extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_group)
      ofp_action_groupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_group.newBuilder() to construct.
    private ofp_action_group(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_group() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_group();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_group(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              groupId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_group_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_group_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_group.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder.class);
    }

    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private int groupId_;
    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 1;</code>
     */
    public int getGroupId() {
      return groupId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (groupId_ != 0) {
        output.writeUInt32(1, groupId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, groupId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_group)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_group other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) obj;

      if (getGroupId()
          != other.getGroupId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_group prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action structure for OFPAT_GROUP. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_group}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_group)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_groupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_group_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_group_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_group.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_group.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_group.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        groupId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_group_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_group getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_group build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_group result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_group buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_group result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_group(this);
        result.groupId_ = groupId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_group) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_group)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_group other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_group.getDefaultInstance()) return this;
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_group parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_group) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int groupId_ ;
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public Builder setGroupId(int value) {
        
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public Builder clearGroupId() {
        
        groupId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_group)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_group)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_group DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_group();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_group getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_group>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_group>() {
      @java.lang.Override
      public ofp_action_group parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_group(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_group> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_group> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_group getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_nw_ttlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_nw_ttl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * IP TTL 
     * </pre>
     *
     * <code>uint32 nw_ttl = 1;</code>
     */
    int getNwTtl();
  }
  /**
   * <pre>
   * Action structure for OFPAT_SET_NW_TTL. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_nw_ttl}
   */
  public  static final class ofp_action_nw_ttl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_nw_ttl)
      ofp_action_nw_ttlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_nw_ttl.newBuilder() to construct.
    private ofp_action_nw_ttl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_nw_ttl() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_nw_ttl();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_nw_ttl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              nwTtl_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_nw_ttl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_nw_ttl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder.class);
    }

    public static final int NW_TTL_FIELD_NUMBER = 1;
    private int nwTtl_;
    /**
     * <pre>
     * IP TTL 
     * </pre>
     *
     * <code>uint32 nw_ttl = 1;</code>
     */
    public int getNwTtl() {
      return nwTtl_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nwTtl_ != 0) {
        output.writeUInt32(1, nwTtl_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nwTtl_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, nwTtl_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) obj;

      if (getNwTtl()
          != other.getNwTtl()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NW_TTL_FIELD_NUMBER;
      hash = (53 * hash) + getNwTtl();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action structure for OFPAT_SET_NW_TTL. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_nw_ttl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_nw_ttl)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_nw_ttl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_nw_ttl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nwTtl_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_nw_ttl_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl(this);
        result.nwTtl_ = nwTtl_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl.getDefaultInstance()) return this;
        if (other.getNwTtl() != 0) {
          setNwTtl(other.getNwTtl());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int nwTtl_ ;
      /**
       * <pre>
       * IP TTL 
       * </pre>
       *
       * <code>uint32 nw_ttl = 1;</code>
       */
      public int getNwTtl() {
        return nwTtl_;
      }
      /**
       * <pre>
       * IP TTL 
       * </pre>
       *
       * <code>uint32 nw_ttl = 1;</code>
       */
      public Builder setNwTtl(int value) {
        
        nwTtl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IP TTL 
       * </pre>
       *
       * <code>uint32 nw_ttl = 1;</code>
       */
      public Builder clearNwTtl() {
        
        nwTtl_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_nw_ttl)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_nw_ttl)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_nw_ttl>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_nw_ttl>() {
      @java.lang.Override
      public ofp_action_nw_ttl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_nw_ttl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_nw_ttl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_nw_ttl> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_nw_ttl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_set_fieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_set_field)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.ofp_oxm_field field = 1;</code>
     */
    boolean hasField();
    /**
     * <code>.openflow_13.ofp_oxm_field field = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getField();
    /**
     * <code>.openflow_13.ofp_oxm_field field = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder getFieldOrBuilder();
  }
  /**
   * <pre>
   * Action structure for OFPAT_SET_FIELD. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_set_field}
   */
  public  static final class ofp_action_set_field extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_set_field)
      ofp_action_set_fieldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_set_field.newBuilder() to construct.
    private ofp_action_set_field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_set_field() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_set_field();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_set_field(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder subBuilder = null;
              if (field_ != null) {
                subBuilder = field_.toBuilder();
              }
              field_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(field_);
                field_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_field_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder.class);
    }

    public static final int FIELD_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field field_;
    /**
     * <code>.openflow_13.ofp_oxm_field field = 1;</code>
     */
    public boolean hasField() {
      return field_ != null;
    }
    /**
     * <code>.openflow_13.ofp_oxm_field field = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getField() {
      return field_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.getDefaultInstance() : field_;
    }
    /**
     * <code>.openflow_13.ofp_oxm_field field = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder getFieldOrBuilder() {
      return getField();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (field_ != null) {
        output.writeMessage(1, getField());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (field_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getField());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) obj;

      if (hasField() != other.hasField()) return false;
      if (hasField()) {
        if (!getField()
            .equals(other.getField())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasField()) {
        hash = (37 * hash) + FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getField().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action structure for OFPAT_SET_FIELD. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_set_field}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_set_field)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_fieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = null;
        } else {
          field_ = null;
          fieldBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_field_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field(this);
        if (fieldBuilder_ == null) {
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field.getDefaultInstance()) return this;
        if (other.hasField()) {
          mergeField(other.getField());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field field_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder> fieldBuilder_;
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public boolean hasField() {
        return fieldBuilder_ != null || field_ != null;
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field getField() {
        if (fieldBuilder_ == null) {
          return field_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.getDefaultInstance() : field_;
        } else {
          return fieldBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public Builder setField(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          fieldBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public Builder setField(
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          fieldBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public Builder mergeField(org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field value) {
        if (fieldBuilder_ == null) {
          if (field_ != null) {
            field_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.newBuilder(field_).mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          fieldBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = null;
          onChanged();
        } else {
          field_ = null;
          fieldBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder getFieldBuilder() {
        
        onChanged();
        return getFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder getFieldOrBuilder() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilder();
        } else {
          return field_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.getDefaultInstance() : field_;
        }
      }
      /**
       * <code>.openflow_13.ofp_oxm_field field = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_field.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_oxm_fieldOrBuilder>(
                  getField(),
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_set_field)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_set_field)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_set_field>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_set_field>() {
      @java.lang.Override
      public ofp_action_set_field parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_set_field(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_set_field> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_set_field> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_field getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_experimenterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_experimenter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Experimenter ID which takes the same
     *form as in struct
     *ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    int getExperimenter();

    /**
     * <code>bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Action header for OFPAT_EXPERIMENTER.
   * The rest of the body is experimenter-defined. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_experimenter}
   */
  public  static final class ofp_action_experimenter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_experimenter)
      ofp_action_experimenterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_experimenter.newBuilder() to construct.
    private ofp_action_experimenter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_experimenter() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_experimenter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_experimenter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              experimenter_ = input.readUInt32();
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_experimenter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_experimenter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder.class);
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 1;
    private int experimenter_;
    /**
     * <pre>
     * Experimenter ID which takes the same
     *form as in struct
     *ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (experimenter_ != 0) {
        output.writeUInt32(1, experimenter_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, experimenter_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) obj;

      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Action header for OFPAT_EXPERIMENTER.
     * The rest of the body is experimenter-defined. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_experimenter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_experimenter)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_experimenter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_experimenter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        experimenter_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_experimenter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter(this);
        result.experimenter_ = experimenter_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter.getDefaultInstance()) return this;
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int experimenter_ ;
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_experimenter)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_experimenter)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_experimenter>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_experimenter>() {
      @java.lang.Override
      public ofp_action_experimenter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_experimenter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_experimenter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_experimenter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_experimenter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_instructionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_instruction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Instruction type 
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    int getType();

    /**
     * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
     */
    boolean hasGotoTable();
    /**
     * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table getGotoTable();
    /**
     * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_tableOrBuilder getGotoTableOrBuilder();

    /**
     * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
     */
    boolean hasWriteMetadata();
    /**
     * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata getWriteMetadata();
    /**
     * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadataOrBuilder getWriteMetadataOrBuilder();

    /**
     * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
     */
    boolean hasActions();
    /**
     * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions getActions();
    /**
     * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actionsOrBuilder getActionsOrBuilder();

    /**
     * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
     */
    boolean hasMeter();
    /**
     * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter getMeter();
    /**
     * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meterOrBuilder getMeterOrBuilder();

    /**
     * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
     */
    boolean hasExperimenter();
    /**
     * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter getExperimenter();
    /**
     * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenterOrBuilder getExperimenterOrBuilder();

    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.DataCase getDataCase();
  }
  /**
   * <pre>
   * Instruction header that is common to all instructions.  The length includes
   * the header and any padding used to make the instruction 64-bit aligned.
   * NB: The length of an instruction *must* always be a multiple of eight. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_instruction}
   */
  public  static final class ofp_instruction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_instruction)
      ofp_instructionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_instruction.newBuilder() to construct.
    private ofp_instruction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_instruction() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_instruction();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_instruction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              type_ = input.readUInt32();
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder subBuilder = null;
              if (dataCase_ == 2) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 2;
              break;
            }
            case 26: {
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder subBuilder = null;
              if (dataCase_ == 3) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 3;
              break;
            }
            case 34: {
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder subBuilder = null;
              if (dataCase_ == 4) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 4;
              break;
            }
            case 42: {
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder subBuilder = null;
              if (dataCase_ == 5) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 5;
              break;
            }
            case 50: {
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder subBuilder = null;
              if (dataCase_ == 6) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 6;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      GOTO_TABLE(2),
      WRITE_METADATA(3),
      ACTIONS(4),
      METER(5),
      EXPERIMENTER(6),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 2: return GOTO_TABLE;
          case 3: return WRITE_METADATA;
          case 4: return ACTIONS;
          case 5: return METER;
          case 6: return EXPERIMENTER;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Instruction type 
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int GOTO_TABLE_FIELD_NUMBER = 2;
    /**
     * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
     */
    public boolean hasGotoTable() {
      return dataCase_ == 2;
    }
    /**
     * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table getGotoTable() {
      if (dataCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_tableOrBuilder getGotoTableOrBuilder() {
      if (dataCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance();
    }

    public static final int WRITE_METADATA_FIELD_NUMBER = 3;
    /**
     * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
     */
    public boolean hasWriteMetadata() {
      return dataCase_ == 3;
    }
    /**
     * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata getWriteMetadata() {
      if (dataCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadataOrBuilder getWriteMetadataOrBuilder() {
      if (dataCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance();
    }

    public static final int ACTIONS_FIELD_NUMBER = 4;
    /**
     * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
     */
    public boolean hasActions() {
      return dataCase_ == 4;
    }
    /**
     * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions getActions() {
      if (dataCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actionsOrBuilder getActionsOrBuilder() {
      if (dataCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance();
    }

    public static final int METER_FIELD_NUMBER = 5;
    /**
     * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
     */
    public boolean hasMeter() {
      return dataCase_ == 5;
    }
    /**
     * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter getMeter() {
      if (dataCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meterOrBuilder getMeterOrBuilder() {
      if (dataCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance();
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 6;
    /**
     * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
     */
    public boolean hasExperimenter() {
      return dataCase_ == 6;
    }
    /**
     * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter getExperimenter() {
      if (dataCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenterOrBuilder getExperimenterOrBuilder() {
      if (dataCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (dataCase_ == 2) {
        output.writeMessage(2, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_);
      }
      if (dataCase_ == 3) {
        output.writeMessage(3, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_);
      }
      if (dataCase_ == 4) {
        output.writeMessage(4, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_);
      }
      if (dataCase_ == 5) {
        output.writeMessage(5, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_);
      }
      if (dataCase_ == 6) {
        output.writeMessage(6, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (dataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_);
      }
      if (dataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_);
      }
      if (dataCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_);
      }
      if (dataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_);
      }
      if (dataCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_instruction other = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction) obj;

      if (getType()
          != other.getType()) return false;
      if (!getDataCase().equals(other.getDataCase())) return false;
      switch (dataCase_) {
        case 2:
          if (!getGotoTable()
              .equals(other.getGotoTable())) return false;
          break;
        case 3:
          if (!getWriteMetadata()
              .equals(other.getWriteMetadata())) return false;
          break;
        case 4:
          if (!getActions()
              .equals(other.getActions())) return false;
          break;
        case 5:
          if (!getMeter()
              .equals(other.getMeter())) return false;
          break;
        case 6:
          if (!getExperimenter()
              .equals(other.getExperimenter())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      switch (dataCase_) {
        case 2:
          hash = (37 * hash) + GOTO_TABLE_FIELD_NUMBER;
          hash = (53 * hash) + getGotoTable().hashCode();
          break;
        case 3:
          hash = (37 * hash) + WRITE_METADATA_FIELD_NUMBER;
          hash = (53 * hash) + getWriteMetadata().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
          hash = (53 * hash) + getActions().hashCode();
          break;
        case 5:
          hash = (37 * hash) + METER_FIELD_NUMBER;
          hash = (53 * hash) + getMeter().hashCode();
          break;
        case 6:
          hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
          hash = (53 * hash) + getExperimenter().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_instruction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Instruction header that is common to all instructions.  The length includes
     * the header and any padding used to make the instruction 64-bit aligned.
     * NB: The length of an instruction *must* always be a multiple of eight. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_instruction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_instruction)
        org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_instruction.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_instruction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction result = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction(this);
        result.type_ = type_;
        if (dataCase_ == 2) {
          if (gotoTableBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = gotoTableBuilder_.build();
          }
        }
        if (dataCase_ == 3) {
          if (writeMetadataBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = writeMetadataBuilder_.build();
          }
        }
        if (dataCase_ == 4) {
          if (actionsBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = actionsBuilder_.build();
          }
        }
        if (dataCase_ == 5) {
          if (meterBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = meterBuilder_.build();
          }
        }
        if (dataCase_ == 6) {
          if (experimenterBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = experimenterBuilder_.build();
          }
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_instruction other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        switch (other.getDataCase()) {
          case GOTO_TABLE: {
            mergeGotoTable(other.getGotoTable());
            break;
          }
          case WRITE_METADATA: {
            mergeWriteMetadata(other.getWriteMetadata());
            break;
          }
          case ACTIONS: {
            mergeActions(other.getActions());
            break;
          }
          case METER: {
            mergeMeter(other.getMeter());
            break;
          }
          case EXPERIMENTER: {
            mergeExperimenter(other.getExperimenter());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private int type_ ;
      /**
       * <pre>
       * Instruction type 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * Instruction type 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Instruction type 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_tableOrBuilder> gotoTableBuilder_;
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public boolean hasGotoTable() {
        return dataCase_ == 2;
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table getGotoTable() {
        if (gotoTableBuilder_ == null) {
          if (dataCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance();
        } else {
          if (dataCase_ == 2) {
            return gotoTableBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public Builder setGotoTable(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table value) {
        if (gotoTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          gotoTableBuilder_.setMessage(value);
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public Builder setGotoTable(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder builderForValue) {
        if (gotoTableBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          gotoTableBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public Builder mergeGotoTable(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table value) {
        if (gotoTableBuilder_ == null) {
          if (dataCase_ == 2 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 2) {
            gotoTableBuilder_.mergeFrom(value);
          }
          gotoTableBuilder_.setMessage(value);
        }
        dataCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public Builder clearGotoTable() {
        if (gotoTableBuilder_ == null) {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 2) {
            dataCase_ = 0;
            data_ = null;
          }
          gotoTableBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder getGotoTableBuilder() {
        return getGotoTableFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_tableOrBuilder getGotoTableOrBuilder() {
        if ((dataCase_ == 2) && (gotoTableBuilder_ != null)) {
          return gotoTableBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_goto_table goto_table = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_tableOrBuilder> 
          getGotoTableFieldBuilder() {
        if (gotoTableBuilder_ == null) {
          if (!(dataCase_ == 2)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance();
          }
          gotoTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_tableOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 2;
        onChanged();;
        return gotoTableBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadataOrBuilder> writeMetadataBuilder_;
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public boolean hasWriteMetadata() {
        return dataCase_ == 3;
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata getWriteMetadata() {
        if (writeMetadataBuilder_ == null) {
          if (dataCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance();
        } else {
          if (dataCase_ == 3) {
            return writeMetadataBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public Builder setWriteMetadata(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata value) {
        if (writeMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          writeMetadataBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public Builder setWriteMetadata(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder builderForValue) {
        if (writeMetadataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          writeMetadataBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public Builder mergeWriteMetadata(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata value) {
        if (writeMetadataBuilder_ == null) {
          if (dataCase_ == 3 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 3) {
            writeMetadataBuilder_.mergeFrom(value);
          }
          writeMetadataBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public Builder clearWriteMetadata() {
        if (writeMetadataBuilder_ == null) {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
          }
          writeMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder getWriteMetadataBuilder() {
        return getWriteMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadataOrBuilder getWriteMetadataOrBuilder() {
        if ((dataCase_ == 3) && (writeMetadataBuilder_ != null)) {
          return writeMetadataBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_write_metadata write_metadata = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadataOrBuilder> 
          getWriteMetadataFieldBuilder() {
        if (writeMetadataBuilder_ == null) {
          if (!(dataCase_ == 3)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance();
          }
          writeMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadataOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 3;
        onChanged();;
        return writeMetadataBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actionsOrBuilder> actionsBuilder_;
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public boolean hasActions() {
        return dataCase_ == 4;
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions getActions() {
        if (actionsBuilder_ == null) {
          if (dataCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance();
        } else {
          if (dataCase_ == 4) {
            return actionsBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public Builder setActions(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          actionsBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public Builder setActions(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          actionsBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public Builder mergeActions(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions value) {
        if (actionsBuilder_ == null) {
          if (dataCase_ == 4 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 4) {
            actionsBuilder_.mergeFrom(value);
          }
          actionsBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
          }
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder getActionsBuilder() {
        return getActionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actionsOrBuilder getActionsOrBuilder() {
        if ((dataCase_ == 4) && (actionsBuilder_ != null)) {
          return actionsBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_actions actions = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actionsOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          if (!(dataCase_ == 4)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance();
          }
          actionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actionsOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 4;
        onChanged();;
        return actionsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meterOrBuilder> meterBuilder_;
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public boolean hasMeter() {
        return dataCase_ == 5;
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter getMeter() {
        if (meterBuilder_ == null) {
          if (dataCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance();
        } else {
          if (dataCase_ == 5) {
            return meterBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public Builder setMeter(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter value) {
        if (meterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          meterBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public Builder setMeter(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder builderForValue) {
        if (meterBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          meterBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public Builder mergeMeter(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter value) {
        if (meterBuilder_ == null) {
          if (dataCase_ == 5 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 5) {
            meterBuilder_.mergeFrom(value);
          }
          meterBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public Builder clearMeter() {
        if (meterBuilder_ == null) {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
          }
          meterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder getMeterBuilder() {
        return getMeterFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meterOrBuilder getMeterOrBuilder() {
        if ((dataCase_ == 5) && (meterBuilder_ != null)) {
          return meterBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_meter meter = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meterOrBuilder> 
          getMeterFieldBuilder() {
        if (meterBuilder_ == null) {
          if (!(dataCase_ == 5)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance();
          }
          meterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meterOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 5;
        onChanged();;
        return meterBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenterOrBuilder> experimenterBuilder_;
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public boolean hasExperimenter() {
        return dataCase_ == 6;
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter getExperimenter() {
        if (experimenterBuilder_ == null) {
          if (dataCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance();
        } else {
          if (dataCase_ == 6) {
            return experimenterBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public Builder setExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          experimenterBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public Builder setExperimenter(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder builderForValue) {
        if (experimenterBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          experimenterBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public Builder mergeExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (dataCase_ == 6 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 6) {
            experimenterBuilder_.mergeFrom(value);
          }
          experimenterBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public Builder clearExperimenter() {
        if (experimenterBuilder_ == null) {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
          }
          experimenterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder getExperimenterBuilder() {
        return getExperimenterFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenterOrBuilder getExperimenterOrBuilder() {
        if ((dataCase_ == 6) && (experimenterBuilder_ != null)) {
          return experimenterBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_instruction_experimenter experimenter = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenterOrBuilder> 
          getExperimenterFieldBuilder() {
        if (experimenterBuilder_ == null) {
          if (!(dataCase_ == 6)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance();
          }
          experimenterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenterOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 6;
        onChanged();;
        return experimenterBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_instruction)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_instruction)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_instruction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_instruction>
        PARSER = new com.google.protobuf.AbstractParser<ofp_instruction>() {
      @java.lang.Override
      public ofp_instruction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_instruction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_instruction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_instruction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_instruction_goto_tableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_instruction_goto_table)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Set next table in the lookup pipeline 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    int getTableId();
  }
  /**
   * <pre>
   * Instruction structure for OFPIT_GOTO_TABLE 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_instruction_goto_table}
   */
  public  static final class ofp_instruction_goto_table extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_instruction_goto_table)
      ofp_instruction_goto_tableOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_instruction_goto_table.newBuilder() to construct.
    private ofp_instruction_goto_table(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_instruction_goto_table() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_instruction_goto_table();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_instruction_goto_table(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_goto_table_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_goto_table_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder.class);
    }

    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     * Set next table in the lookup pipeline 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeUInt32(1, tableId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table other = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) obj;

      if (getTableId()
          != other.getTableId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Instruction structure for OFPIT_GOTO_TABLE 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_instruction_goto_table}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_instruction_goto_table)
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_tableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_goto_table_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_goto_table_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_goto_table_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table result = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table(this);
        result.tableId_ = tableId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table.getDefaultInstance()) return this;
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * Set next table in the lookup pipeline 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * Set next table in the lookup pipeline 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set next table in the lookup pipeline 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_instruction_goto_table)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_instruction_goto_table)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_instruction_goto_table>
        PARSER = new com.google.protobuf.AbstractParser<ofp_instruction_goto_table>() {
      @java.lang.Override
      public ofp_instruction_goto_table parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_instruction_goto_table(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_instruction_goto_table> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_instruction_goto_table> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_goto_table getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_instruction_write_metadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_instruction_write_metadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Metadata value to write 
     * </pre>
     *
     * <code>uint64 metadata = 1;</code>
     */
    long getMetadata();

    /**
     * <pre>
     * Metadata write bitmask 
     * </pre>
     *
     * <code>uint64 metadata_mask = 2;</code>
     */
    long getMetadataMask();
  }
  /**
   * <pre>
   * Instruction structure for OFPIT_WRITE_METADATA 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_instruction_write_metadata}
   */
  public  static final class ofp_instruction_write_metadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_instruction_write_metadata)
      ofp_instruction_write_metadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_instruction_write_metadata.newBuilder() to construct.
    private ofp_instruction_write_metadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_instruction_write_metadata() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_instruction_write_metadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_instruction_write_metadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              metadata_ = input.readUInt64();
              break;
            }
            case 16: {

              metadataMask_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_write_metadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_write_metadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder.class);
    }

    public static final int METADATA_FIELD_NUMBER = 1;
    private long metadata_;
    /**
     * <pre>
     * Metadata value to write 
     * </pre>
     *
     * <code>uint64 metadata = 1;</code>
     */
    public long getMetadata() {
      return metadata_;
    }

    public static final int METADATA_MASK_FIELD_NUMBER = 2;
    private long metadataMask_;
    /**
     * <pre>
     * Metadata write bitmask 
     * </pre>
     *
     * <code>uint64 metadata_mask = 2;</code>
     */
    public long getMetadataMask() {
      return metadataMask_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != 0L) {
        output.writeUInt64(1, metadata_);
      }
      if (metadataMask_ != 0L) {
        output.writeUInt64(2, metadataMask_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, metadata_);
      }
      if (metadataMask_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, metadataMask_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata other = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) obj;

      if (getMetadata()
          != other.getMetadata()) return false;
      if (getMetadataMask()
          != other.getMetadataMask()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMetadata());
      hash = (37 * hash) + METADATA_MASK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMetadataMask());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Instruction structure for OFPIT_WRITE_METADATA 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_instruction_write_metadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_instruction_write_metadata)
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_write_metadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_write_metadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        metadata_ = 0L;

        metadataMask_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_write_metadata_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata result = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata(this);
        result.metadata_ = metadata_;
        result.metadataMask_ = metadataMask_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata.getDefaultInstance()) return this;
        if (other.getMetadata() != 0L) {
          setMetadata(other.getMetadata());
        }
        if (other.getMetadataMask() != 0L) {
          setMetadataMask(other.getMetadataMask());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long metadata_ ;
      /**
       * <pre>
       * Metadata value to write 
       * </pre>
       *
       * <code>uint64 metadata = 1;</code>
       */
      public long getMetadata() {
        return metadata_;
      }
      /**
       * <pre>
       * Metadata value to write 
       * </pre>
       *
       * <code>uint64 metadata = 1;</code>
       */
      public Builder setMetadata(long value) {
        
        metadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata value to write 
       * </pre>
       *
       * <code>uint64 metadata = 1;</code>
       */
      public Builder clearMetadata() {
        
        metadata_ = 0L;
        onChanged();
        return this;
      }

      private long metadataMask_ ;
      /**
       * <pre>
       * Metadata write bitmask 
       * </pre>
       *
       * <code>uint64 metadata_mask = 2;</code>
       */
      public long getMetadataMask() {
        return metadataMask_;
      }
      /**
       * <pre>
       * Metadata write bitmask 
       * </pre>
       *
       * <code>uint64 metadata_mask = 2;</code>
       */
      public Builder setMetadataMask(long value) {
        
        metadataMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata write bitmask 
       * </pre>
       *
       * <code>uint64 metadata_mask = 2;</code>
       */
      public Builder clearMetadataMask() {
        
        metadataMask_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_instruction_write_metadata)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_instruction_write_metadata)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_instruction_write_metadata>
        PARSER = new com.google.protobuf.AbstractParser<ofp_instruction_write_metadata>() {
      @java.lang.Override
      public ofp_instruction_write_metadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_instruction_write_metadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_instruction_write_metadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_instruction_write_metadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_write_metadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_instruction_actionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_instruction_actions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> 
        getActionsList();
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index);
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    int getActionsCount();
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList();
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Instruction structure for OFPIT_WRITE/APPLY/CLEAR_ACTIONS 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_instruction_actions}
   */
  public  static final class ofp_instruction_actions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_instruction_actions)
      ofp_instruction_actionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_instruction_actions.newBuilder() to construct.
    private ofp_instruction_actions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_instruction_actions() {
      actions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_instruction_actions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_instruction_actions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>();
                mutable_bitField0_ |= 0x00000001;
              }
              actions_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          actions_ = java.util.Collections.unmodifiableList(actions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_actions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_actions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder.class);
    }

    public static final int ACTIONS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_;
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
      return actions_;
    }
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList() {
      return actions_;
    }
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public int getActionsCount() {
      return actions_.size();
    }
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
      return actions_.get(index);
    }
    /**
     * <pre>
     * 0 or more actions associated
     *with OFPIT_WRITE_ACTIONS and
     *OFPIT_APPLY_ACTIONS 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(1, actions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, actions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions other = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) obj;

      if (!getActionsList()
          .equals(other.getActionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getActionsCount() > 0) {
        hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getActionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Instruction structure for OFPIT_WRITE/APPLY/CLEAR_ACTIONS 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_instruction_actions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_instruction_actions)
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_actions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_actions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getActionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_actions_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions result = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions(this);
        int from_bitField0_ = bitField0_;
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions.getDefaultInstance()) return this;
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>(actions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> actionsBuilder_;

      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(
          org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addAllActions(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_action> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <pre>
       * 0 or more actions associated
       *with OFPIT_WRITE_ACTIONS and
       *OFPIT_APPLY_ACTIONS 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder> 
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_instruction_actions)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_instruction_actions)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_instruction_actions>
        PARSER = new com.google.protobuf.AbstractParser<ofp_instruction_actions>() {
      @java.lang.Override
      public ofp_instruction_actions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_instruction_actions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_instruction_actions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_instruction_actions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_actions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_instruction_meterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_instruction_meter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 1;</code>
     */
    int getMeterId();
  }
  /**
   * <pre>
   * Instruction structure for OFPIT_METER 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_instruction_meter}
   */
  public  static final class ofp_instruction_meter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_instruction_meter)
      ofp_instruction_meterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_instruction_meter.newBuilder() to construct.
    private ofp_instruction_meter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_instruction_meter() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_instruction_meter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_instruction_meter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              meterId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_meter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_meter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder.class);
    }

    public static final int METER_ID_FIELD_NUMBER = 1;
    private int meterId_;
    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 1;</code>
     */
    public int getMeterId() {
      return meterId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meterId_ != 0) {
        output.writeUInt32(1, meterId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, meterId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter other = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) obj;

      if (getMeterId()
          != other.getMeterId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMeterId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Instruction structure for OFPIT_METER 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_instruction_meter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_instruction_meter)
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_meter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_meter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        meterId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_meter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter result = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter(this);
        result.meterId_ = meterId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter.getDefaultInstance()) return this;
        if (other.getMeterId() != 0) {
          setMeterId(other.getMeterId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int meterId_ ;
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public int getMeterId() {
        return meterId_;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public Builder setMeterId(int value) {
        
        meterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public Builder clearMeterId() {
        
        meterId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_instruction_meter)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_instruction_meter)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_instruction_meter>
        PARSER = new com.google.protobuf.AbstractParser<ofp_instruction_meter>() {
      @java.lang.Override
      public ofp_instruction_meter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_instruction_meter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_instruction_meter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_instruction_meter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_meter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_instruction_experimenterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_instruction_experimenter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Experimenter ID which takes the same form
     *as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    int getExperimenter();

    /**
     * <pre>
     * Experimenter-defined arbitrary additional data. 
     * </pre>
     *
     * <code>bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Instruction structure for experimental instructions 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_instruction_experimenter}
   */
  public  static final class ofp_instruction_experimenter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_instruction_experimenter)
      ofp_instruction_experimenterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_instruction_experimenter.newBuilder() to construct.
    private ofp_instruction_experimenter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_instruction_experimenter() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_instruction_experimenter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_instruction_experimenter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              experimenter_ = input.readUInt32();
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_experimenter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_experimenter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder.class);
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 1;
    private int experimenter_;
    /**
     * <pre>
     * Experimenter ID which takes the same form
     *as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Experimenter-defined arbitrary additional data. 
     * </pre>
     *
     * <code>bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (experimenter_ != 0) {
        output.writeUInt32(1, experimenter_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, experimenter_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter other = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) obj;

      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Instruction structure for experimental instructions 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_instruction_experimenter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_instruction_experimenter)
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_experimenter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_experimenter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        experimenter_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_instruction_experimenter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter result = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter(this);
        result.experimenter_ = experimenter_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter.getDefaultInstance()) return this;
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int experimenter_ ;
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_instruction_experimenter)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_instruction_experimenter)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_instruction_experimenter>
        PARSER = new com.google.protobuf.AbstractParser<ofp_instruction_experimenter>() {
      @java.lang.Override
      public ofp_instruction_experimenter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_instruction_experimenter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_instruction_experimenter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_instruction_experimenter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction_experimenter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_flow_modOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_flow_mod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint64 cookie = 1;</code>
     */
    long getCookie();

    /**
     * <pre>
     * Mask used to restrict the cookie bits
     *that must match when the command is
     *OFPFC_MODIFY* or OFPFC_DELETE*. A value
     *of 0 indicates no restriction. 
     * </pre>
     *
     * <code>uint64 cookie_mask = 2;</code>
     */
    long getCookieMask();

    /**
     * <pre>
     * ID of the table to put the flow in.
     *For OFPFC_DELETE_* commands, OFPTT_ALL
     *can also be used to delete matching
     *flows from all tables. 
     * </pre>
     *
     * <code>uint32 table_id = 3;</code>
     */
    int getTableId();

    /**
     * <pre>
     * One of OFPFC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
     */
    int getCommandValue();
    /**
     * <pre>
     * One of OFPFC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command getCommand();

    /**
     * <pre>
     * Idle time before discarding (seconds). 
     * </pre>
     *
     * <code>uint32 idle_timeout = 5;</code>
     */
    int getIdleTimeout();

    /**
     * <pre>
     * Max time before discarding (seconds). 
     * </pre>
     *
     * <code>uint32 hard_timeout = 6;</code>
     */
    int getHardTimeout();

    /**
     * <pre>
     * Priority level of flow entry. 
     * </pre>
     *
     * <code>uint32 priority = 7;</code>
     */
    int getPriority();

    /**
     * <pre>
     * Buffered packet to apply to, or
     *OFP_NO_BUFFER.
     *Not meaningful for OFPFC_DELETE*. 
     * </pre>
     *
     * <code>uint32 buffer_id = 8;</code>
     */
    int getBufferId();

    /**
     * <pre>
     * For OFPFC_DELETE* commands, require
     *matching entries to include this as an
     *output port.  A value of OFPP_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_port = 9;</code>
     */
    int getOutPort();

    /**
     * <pre>
     * For OFPFC_DELETE* commands, require
     *matching entries to include this as an
     *output group.  A value of OFPG_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_group = 10;</code>
     */
    int getOutGroup();

    /**
     * <pre>
     * Bitmap of OFPFF_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 11;</code>
     */
    int getFlags();

    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    boolean hasMatch();
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch();
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder();

    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> 
        getInstructionsList();
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index);
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    int getInstructionsCount();
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
        getInstructionsOrBuilderList();
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Flow setup and teardown (controller -&gt; datapath). 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_flow_mod}
   */
  public  static final class ofp_flow_mod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_flow_mod)
      ofp_flow_modOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_flow_mod.newBuilder() to construct.
    private ofp_flow_mod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_flow_mod() {
      command_ = 0;
      instructions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_flow_mod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_flow_mod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              cookie_ = input.readUInt64();
              break;
            }
            case 16: {

              cookieMask_ = input.readUInt64();
              break;
            }
            case 24: {

              tableId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              command_ = rawValue;
              break;
            }
            case 40: {

              idleTimeout_ = input.readUInt32();
              break;
            }
            case 48: {

              hardTimeout_ = input.readUInt32();
              break;
            }
            case 56: {

              priority_ = input.readUInt32();
              break;
            }
            case 64: {

              bufferId_ = input.readUInt32();
              break;
            }
            case 72: {

              outPort_ = input.readUInt32();
              break;
            }
            case 80: {

              outGroup_ = input.readUInt32();
              break;
            }
            case 88: {

              flags_ = input.readUInt32();
              break;
            }
            case 98: {
              org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder subBuilder = null;
              if (match_ != null) {
                subBuilder = match_.toBuilder();
              }
              match_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_match.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(match_);
                match_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                instructions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_instruction>();
                mutable_bitField0_ |= 0x00000001;
              }
              instructions_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          instructions_ = java.util.Collections.unmodifiableList(instructions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_mod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_mod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder.class);
    }

    public static final int COOKIE_FIELD_NUMBER = 1;
    private long cookie_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint64 cookie = 1;</code>
     */
    public long getCookie() {
      return cookie_;
    }

    public static final int COOKIE_MASK_FIELD_NUMBER = 2;
    private long cookieMask_;
    /**
     * <pre>
     * Mask used to restrict the cookie bits
     *that must match when the command is
     *OFPFC_MODIFY* or OFPFC_DELETE*. A value
     *of 0 indicates no restriction. 
     * </pre>
     *
     * <code>uint64 cookie_mask = 2;</code>
     */
    public long getCookieMask() {
      return cookieMask_;
    }

    public static final int TABLE_ID_FIELD_NUMBER = 3;
    private int tableId_;
    /**
     * <pre>
     * ID of the table to put the flow in.
     *For OFPFC_DELETE_* commands, OFPTT_ALL
     *can also be used to delete matching
     *flows from all tables. 
     * </pre>
     *
     * <code>uint32 table_id = 3;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int COMMAND_FIELD_NUMBER = 4;
    private int command_;
    /**
     * <pre>
     * One of OFPFC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
     */
    public int getCommandValue() {
      return command_;
    }
    /**
     * <pre>
     * One of OFPFC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command getCommand() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command result = org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command.valueOf(command_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command.UNRECOGNIZED : result;
    }

    public static final int IDLE_TIMEOUT_FIELD_NUMBER = 5;
    private int idleTimeout_;
    /**
     * <pre>
     * Idle time before discarding (seconds). 
     * </pre>
     *
     * <code>uint32 idle_timeout = 5;</code>
     */
    public int getIdleTimeout() {
      return idleTimeout_;
    }

    public static final int HARD_TIMEOUT_FIELD_NUMBER = 6;
    private int hardTimeout_;
    /**
     * <pre>
     * Max time before discarding (seconds). 
     * </pre>
     *
     * <code>uint32 hard_timeout = 6;</code>
     */
    public int getHardTimeout() {
      return hardTimeout_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 7;
    private int priority_;
    /**
     * <pre>
     * Priority level of flow entry. 
     * </pre>
     *
     * <code>uint32 priority = 7;</code>
     */
    public int getPriority() {
      return priority_;
    }

    public static final int BUFFER_ID_FIELD_NUMBER = 8;
    private int bufferId_;
    /**
     * <pre>
     * Buffered packet to apply to, or
     *OFP_NO_BUFFER.
     *Not meaningful for OFPFC_DELETE*. 
     * </pre>
     *
     * <code>uint32 buffer_id = 8;</code>
     */
    public int getBufferId() {
      return bufferId_;
    }

    public static final int OUT_PORT_FIELD_NUMBER = 9;
    private int outPort_;
    /**
     * <pre>
     * For OFPFC_DELETE* commands, require
     *matching entries to include this as an
     *output port.  A value of OFPP_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_port = 9;</code>
     */
    public int getOutPort() {
      return outPort_;
    }

    public static final int OUT_GROUP_FIELD_NUMBER = 10;
    private int outGroup_;
    /**
     * <pre>
     * For OFPFC_DELETE* commands, require
     *matching entries to include this as an
     *output group.  A value of OFPG_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_group = 10;</code>
     */
    public int getOutGroup() {
      return outGroup_;
    }

    public static final int FLAGS_FIELD_NUMBER = 11;
    private int flags_;
    /**
     * <pre>
     * Bitmap of OFPFF_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 11;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int MATCH_FIELD_NUMBER = 12;
    private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    public boolean hasMatch() {
      return match_ != null;
    }
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
      return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
    }
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
      return getMatch();
    }

    public static final int INSTRUCTIONS_FIELD_NUMBER = 13;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> instructions_;
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> getInstructionsList() {
      return instructions_;
    }
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
        getInstructionsOrBuilderList() {
      return instructions_;
    }
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public int getInstructionsCount() {
      return instructions_.size();
    }
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index) {
      return instructions_.get(index);
    }
    /**
     * <pre>
     * 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
        int index) {
      return instructions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cookie_ != 0L) {
        output.writeUInt64(1, cookie_);
      }
      if (cookieMask_ != 0L) {
        output.writeUInt64(2, cookieMask_);
      }
      if (tableId_ != 0) {
        output.writeUInt32(3, tableId_);
      }
      if (command_ != org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command.OFPFC_ADD.getNumber()) {
        output.writeEnum(4, command_);
      }
      if (idleTimeout_ != 0) {
        output.writeUInt32(5, idleTimeout_);
      }
      if (hardTimeout_ != 0) {
        output.writeUInt32(6, hardTimeout_);
      }
      if (priority_ != 0) {
        output.writeUInt32(7, priority_);
      }
      if (bufferId_ != 0) {
        output.writeUInt32(8, bufferId_);
      }
      if (outPort_ != 0) {
        output.writeUInt32(9, outPort_);
      }
      if (outGroup_ != 0) {
        output.writeUInt32(10, outGroup_);
      }
      if (flags_ != 0) {
        output.writeUInt32(11, flags_);
      }
      if (match_ != null) {
        output.writeMessage(12, getMatch());
      }
      for (int i = 0; i < instructions_.size(); i++) {
        output.writeMessage(13, instructions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cookie_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, cookie_);
      }
      if (cookieMask_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, cookieMask_);
      }
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tableId_);
      }
      if (command_ != org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command.OFPFC_ADD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, command_);
      }
      if (idleTimeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, idleTimeout_);
      }
      if (hardTimeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, hardTimeout_);
      }
      if (priority_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, priority_);
      }
      if (bufferId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, bufferId_);
      }
      if (outPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, outPort_);
      }
      if (outGroup_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, outGroup_);
      }
      if (flags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, flags_);
      }
      if (match_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getMatch());
      }
      for (int i = 0; i < instructions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, instructions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod other = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod) obj;

      if (getCookie()
          != other.getCookie()) return false;
      if (getCookieMask()
          != other.getCookieMask()) return false;
      if (getTableId()
          != other.getTableId()) return false;
      if (command_ != other.command_) return false;
      if (getIdleTimeout()
          != other.getIdleTimeout()) return false;
      if (getHardTimeout()
          != other.getHardTimeout()) return false;
      if (getPriority()
          != other.getPriority()) return false;
      if (getBufferId()
          != other.getBufferId()) return false;
      if (getOutPort()
          != other.getOutPort()) return false;
      if (getOutGroup()
          != other.getOutGroup()) return false;
      if (getFlags()
          != other.getFlags()) return false;
      if (hasMatch() != other.hasMatch()) return false;
      if (hasMatch()) {
        if (!getMatch()
            .equals(other.getMatch())) return false;
      }
      if (!getInstructionsList()
          .equals(other.getInstructionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COOKIE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookie());
      hash = (37 * hash) + COOKIE_MASK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookieMask());
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + command_;
      hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getIdleTimeout();
      hash = (37 * hash) + HARD_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getHardTimeout();
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + getPriority();
      hash = (37 * hash) + BUFFER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBufferId();
      hash = (37 * hash) + OUT_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getOutPort();
      hash = (37 * hash) + OUT_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getOutGroup();
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags();
      if (hasMatch()) {
        hash = (37 * hash) + MATCH_FIELD_NUMBER;
        hash = (53 * hash) + getMatch().hashCode();
      }
      if (getInstructionsCount() > 0) {
        hash = (37 * hash) + INSTRUCTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInstructionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Flow setup and teardown (controller -&gt; datapath). 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_flow_mod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_flow_mod)
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_modOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_mod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_mod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInstructionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cookie_ = 0L;

        cookieMask_ = 0L;

        tableId_ = 0;

        command_ = 0;

        idleTimeout_ = 0;

        hardTimeout_ = 0;

        priority_ = 0;

        bufferId_ = 0;

        outPort_ = 0;

        outGroup_ = 0;

        flags_ = 0;

        if (matchBuilder_ == null) {
          match_ = null;
        } else {
          match_ = null;
          matchBuilder_ = null;
        }
        if (instructionsBuilder_ == null) {
          instructions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          instructionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_mod_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod result = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod(this);
        int from_bitField0_ = bitField0_;
        result.cookie_ = cookie_;
        result.cookieMask_ = cookieMask_;
        result.tableId_ = tableId_;
        result.command_ = command_;
        result.idleTimeout_ = idleTimeout_;
        result.hardTimeout_ = hardTimeout_;
        result.priority_ = priority_;
        result.bufferId_ = bufferId_;
        result.outPort_ = outPort_;
        result.outGroup_ = outGroup_;
        result.flags_ = flags_;
        if (matchBuilder_ == null) {
          result.match_ = match_;
        } else {
          result.match_ = matchBuilder_.build();
        }
        if (instructionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            instructions_ = java.util.Collections.unmodifiableList(instructions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.instructions_ = instructions_;
        } else {
          result.instructions_ = instructionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.getDefaultInstance()) return this;
        if (other.getCookie() != 0L) {
          setCookie(other.getCookie());
        }
        if (other.getCookieMask() != 0L) {
          setCookieMask(other.getCookieMask());
        }
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.command_ != 0) {
          setCommandValue(other.getCommandValue());
        }
        if (other.getIdleTimeout() != 0) {
          setIdleTimeout(other.getIdleTimeout());
        }
        if (other.getHardTimeout() != 0) {
          setHardTimeout(other.getHardTimeout());
        }
        if (other.getPriority() != 0) {
          setPriority(other.getPriority());
        }
        if (other.getBufferId() != 0) {
          setBufferId(other.getBufferId());
        }
        if (other.getOutPort() != 0) {
          setOutPort(other.getOutPort());
        }
        if (other.getOutGroup() != 0) {
          setOutGroup(other.getOutGroup());
        }
        if (other.getFlags() != 0) {
          setFlags(other.getFlags());
        }
        if (other.hasMatch()) {
          mergeMatch(other.getMatch());
        }
        if (instructionsBuilder_ == null) {
          if (!other.instructions_.isEmpty()) {
            if (instructions_.isEmpty()) {
              instructions_ = other.instructions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInstructionsIsMutable();
              instructions_.addAll(other.instructions_);
            }
            onChanged();
          }
        } else {
          if (!other.instructions_.isEmpty()) {
            if (instructionsBuilder_.isEmpty()) {
              instructionsBuilder_.dispose();
              instructionsBuilder_ = null;
              instructions_ = other.instructions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              instructionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInstructionsFieldBuilder() : null;
            } else {
              instructionsBuilder_.addAllMessages(other.instructions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long cookie_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 cookie = 1;</code>
       */
      public long getCookie() {
        return cookie_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 cookie = 1;</code>
       */
      public Builder setCookie(long value) {
        
        cookie_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 cookie = 1;</code>
       */
      public Builder clearCookie() {
        
        cookie_ = 0L;
        onChanged();
        return this;
      }

      private long cookieMask_ ;
      /**
       * <pre>
       * Mask used to restrict the cookie bits
       *that must match when the command is
       *OFPFC_MODIFY* or OFPFC_DELETE*. A value
       *of 0 indicates no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 2;</code>
       */
      public long getCookieMask() {
        return cookieMask_;
      }
      /**
       * <pre>
       * Mask used to restrict the cookie bits
       *that must match when the command is
       *OFPFC_MODIFY* or OFPFC_DELETE*. A value
       *of 0 indicates no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 2;</code>
       */
      public Builder setCookieMask(long value) {
        
        cookieMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mask used to restrict the cookie bits
       *that must match when the command is
       *OFPFC_MODIFY* or OFPFC_DELETE*. A value
       *of 0 indicates no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 2;</code>
       */
      public Builder clearCookieMask() {
        
        cookieMask_ = 0L;
        onChanged();
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * ID of the table to put the flow in.
       *For OFPFC_DELETE_* commands, OFPTT_ALL
       *can also be used to delete matching
       *flows from all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 3;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * ID of the table to put the flow in.
       *For OFPFC_DELETE_* commands, OFPTT_ALL
       *can also be used to delete matching
       *flows from all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 3;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the table to put the flow in.
       *For OFPFC_DELETE_* commands, OFPTT_ALL
       *can also be used to delete matching
       *flows from all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 3;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int command_ = 0;
      /**
       * <pre>
       * One of OFPFC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
       */
      public int getCommandValue() {
        return command_;
      }
      /**
       * <pre>
       * One of OFPFC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
       */
      public Builder setCommandValue(int value) {
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPFC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command getCommand() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command result = org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command.valueOf(command_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPFC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
       */
      public Builder setCommand(org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod_command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPFC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_mod_command command = 4;</code>
       */
      public Builder clearCommand() {
        
        command_ = 0;
        onChanged();
        return this;
      }

      private int idleTimeout_ ;
      /**
       * <pre>
       * Idle time before discarding (seconds). 
       * </pre>
       *
       * <code>uint32 idle_timeout = 5;</code>
       */
      public int getIdleTimeout() {
        return idleTimeout_;
      }
      /**
       * <pre>
       * Idle time before discarding (seconds). 
       * </pre>
       *
       * <code>uint32 idle_timeout = 5;</code>
       */
      public Builder setIdleTimeout(int value) {
        
        idleTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Idle time before discarding (seconds). 
       * </pre>
       *
       * <code>uint32 idle_timeout = 5;</code>
       */
      public Builder clearIdleTimeout() {
        
        idleTimeout_ = 0;
        onChanged();
        return this;
      }

      private int hardTimeout_ ;
      /**
       * <pre>
       * Max time before discarding (seconds). 
       * </pre>
       *
       * <code>uint32 hard_timeout = 6;</code>
       */
      public int getHardTimeout() {
        return hardTimeout_;
      }
      /**
       * <pre>
       * Max time before discarding (seconds). 
       * </pre>
       *
       * <code>uint32 hard_timeout = 6;</code>
       */
      public Builder setHardTimeout(int value) {
        
        hardTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max time before discarding (seconds). 
       * </pre>
       *
       * <code>uint32 hard_timeout = 6;</code>
       */
      public Builder clearHardTimeout() {
        
        hardTimeout_ = 0;
        onChanged();
        return this;
      }

      private int priority_ ;
      /**
       * <pre>
       * Priority level of flow entry. 
       * </pre>
       *
       * <code>uint32 priority = 7;</code>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <pre>
       * Priority level of flow entry. 
       * </pre>
       *
       * <code>uint32 priority = 7;</code>
       */
      public Builder setPriority(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority level of flow entry. 
       * </pre>
       *
       * <code>uint32 priority = 7;</code>
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private int bufferId_ ;
      /**
       * <pre>
       * Buffered packet to apply to, or
       *OFP_NO_BUFFER.
       *Not meaningful for OFPFC_DELETE*. 
       * </pre>
       *
       * <code>uint32 buffer_id = 8;</code>
       */
      public int getBufferId() {
        return bufferId_;
      }
      /**
       * <pre>
       * Buffered packet to apply to, or
       *OFP_NO_BUFFER.
       *Not meaningful for OFPFC_DELETE*. 
       * </pre>
       *
       * <code>uint32 buffer_id = 8;</code>
       */
      public Builder setBufferId(int value) {
        
        bufferId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Buffered packet to apply to, or
       *OFP_NO_BUFFER.
       *Not meaningful for OFPFC_DELETE*. 
       * </pre>
       *
       * <code>uint32 buffer_id = 8;</code>
       */
      public Builder clearBufferId() {
        
        bufferId_ = 0;
        onChanged();
        return this;
      }

      private int outPort_ ;
      /**
       * <pre>
       * For OFPFC_DELETE* commands, require
       *matching entries to include this as an
       *output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 9;</code>
       */
      public int getOutPort() {
        return outPort_;
      }
      /**
       * <pre>
       * For OFPFC_DELETE* commands, require
       *matching entries to include this as an
       *output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 9;</code>
       */
      public Builder setOutPort(int value) {
        
        outPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPFC_DELETE* commands, require
       *matching entries to include this as an
       *output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 9;</code>
       */
      public Builder clearOutPort() {
        
        outPort_ = 0;
        onChanged();
        return this;
      }

      private int outGroup_ ;
      /**
       * <pre>
       * For OFPFC_DELETE* commands, require
       *matching entries to include this as an
       *output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 10;</code>
       */
      public int getOutGroup() {
        return outGroup_;
      }
      /**
       * <pre>
       * For OFPFC_DELETE* commands, require
       *matching entries to include this as an
       *output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 10;</code>
       */
      public Builder setOutGroup(int value) {
        
        outGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For OFPFC_DELETE* commands, require
       *matching entries to include this as an
       *output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 10;</code>
       */
      public Builder clearOutGroup() {
        
        outGroup_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <pre>
       * Bitmap of OFPFF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 11;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       * Bitmap of OFPFF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 11;</code>
       */
      public Builder setFlags(int value) {
        
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPFF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 11;</code>
       */
      public Builder clearFlags() {
        
        flags_ = 0;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> matchBuilder_;
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public boolean hasMatch() {
        return matchBuilder_ != null || match_ != null;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
        if (matchBuilder_ == null) {
          return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        } else {
          return matchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder setMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          match_ = value;
          onChanged();
        } else {
          matchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder setMatch(
          org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder builderForValue) {
        if (matchBuilder_ == null) {
          match_ = builderForValue.build();
          onChanged();
        } else {
          matchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder mergeMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (match_ != null) {
            match_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_match.newBuilder(match_).mergeFrom(value).buildPartial();
          } else {
            match_ = value;
          }
          onChanged();
        } else {
          matchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder clearMatch() {
        if (matchBuilder_ == null) {
          match_ = null;
          onChanged();
        } else {
          match_ = null;
          matchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder getMatchBuilder() {
        
        onChanged();
        return getMatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
        if (matchBuilder_ != null) {
          return matchBuilder_.getMessageOrBuilder();
        } else {
          return match_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        }
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> 
          getMatchFieldBuilder() {
        if (matchBuilder_ == null) {
          matchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder>(
                  getMatch(),
                  getParentForChildren(),
                  isClean());
          match_ = null;
        }
        return matchBuilder_;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> instructions_ =
        java.util.Collections.emptyList();
      private void ensureInstructionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          instructions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_instruction>(instructions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> instructionsBuilder_;

      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> getInstructionsList() {
        if (instructionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(instructions_);
        } else {
          return instructionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public int getInstructionsCount() {
        if (instructionsBuilder_ == null) {
          return instructions_.size();
        } else {
          return instructionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index) {
        if (instructionsBuilder_ == null) {
          return instructions_.get(index);
        } else {
          return instructionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder setInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.set(index, value);
          onChanged();
        } else {
          instructionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder setInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.set(index, builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.add(value);
          onChanged();
        } else {
          instructionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.add(index, value);
          onChanged();
        } else {
          instructionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.add(builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.add(index, builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addAllInstructions(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instruction> values) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, instructions_);
          onChanged();
        } else {
          instructionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder clearInstructions() {
        if (instructionsBuilder_ == null) {
          instructions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          instructionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder removeInstructions(int index) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.remove(index);
          onChanged();
        } else {
          instructionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder getInstructionsBuilder(
          int index) {
        return getInstructionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
          int index) {
        if (instructionsBuilder_ == null) {
          return instructions_.get(index);  } else {
          return instructionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
           getInstructionsOrBuilderList() {
        if (instructionsBuilder_ != null) {
          return instructionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(instructions_);
        }
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder addInstructionsBuilder() {
        return getInstructionsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance());
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder addInstructionsBuilder(
          int index) {
        return getInstructionsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance());
      }
      /**
       * <pre>
       * 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder> 
           getInstructionsBuilderList() {
        return getInstructionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
          getInstructionsFieldBuilder() {
        if (instructionsBuilder_ == null) {
          instructionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder>(
                  instructions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          instructions_ = null;
        }
        return instructionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_flow_mod)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_flow_mod)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_flow_mod>
        PARSER = new com.google.protobuf.AbstractParser<ofp_flow_mod>() {
      @java.lang.Override
      public ofp_flow_mod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_flow_mod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_flow_mod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_flow_mod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_bucketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_bucket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Relative weight of bucket.  Only
     *defined for select groups. 
     * </pre>
     *
     * <code>uint32 weight = 1;</code>
     */
    int getWeight();

    /**
     * <pre>
     * Port whose state affects whether this
     *bucket is live.  Only required for fast
     *failover groups. 
     * </pre>
     *
     * <code>uint32 watch_port = 2;</code>
     */
    int getWatchPort();

    /**
     * <pre>
     * Group whose state affects whether this
     *bucket is live.  Only required for fast
     *failover groups. 
     * </pre>
     *
     * <code>uint32 watch_group = 3;</code>
     */
    int getWatchGroup();

    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> 
        getActionsList();
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index);
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    int getActionsCount();
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList();
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Bucket for use in groups. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_bucket}
   */
  public  static final class ofp_bucket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_bucket)
      ofp_bucketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_bucket.newBuilder() to construct.
    private ofp_bucket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_bucket() {
      actions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_bucket();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_bucket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              weight_ = input.readUInt32();
              break;
            }
            case 16: {

              watchPort_ = input.readUInt32();
              break;
            }
            case 24: {

              watchGroup_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>();
                mutable_bitField0_ |= 0x00000001;
              }
              actions_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          actions_ = java.util.Collections.unmodifiableList(actions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_bucket.class, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder.class);
    }

    public static final int WEIGHT_FIELD_NUMBER = 1;
    private int weight_;
    /**
     * <pre>
     * Relative weight of bucket.  Only
     *defined for select groups. 
     * </pre>
     *
     * <code>uint32 weight = 1;</code>
     */
    public int getWeight() {
      return weight_;
    }

    public static final int WATCH_PORT_FIELD_NUMBER = 2;
    private int watchPort_;
    /**
     * <pre>
     * Port whose state affects whether this
     *bucket is live.  Only required for fast
     *failover groups. 
     * </pre>
     *
     * <code>uint32 watch_port = 2;</code>
     */
    public int getWatchPort() {
      return watchPort_;
    }

    public static final int WATCH_GROUP_FIELD_NUMBER = 3;
    private int watchGroup_;
    /**
     * <pre>
     * Group whose state affects whether this
     *bucket is live.  Only required for fast
     *failover groups. 
     * </pre>
     *
     * <code>uint32 watch_group = 3;</code>
     */
    public int getWatchGroup() {
      return watchGroup_;
    }

    public static final int ACTIONS_FIELD_NUMBER = 4;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_;
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
      return actions_;
    }
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList() {
      return actions_;
    }
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    public int getActionsCount() {
      return actions_.size();
    }
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
      return actions_.get(index);
    }
    /**
     * <code>repeated .openflow_13.ofp_action actions = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (weight_ != 0) {
        output.writeUInt32(1, weight_);
      }
      if (watchPort_ != 0) {
        output.writeUInt32(2, watchPort_);
      }
      if (watchGroup_ != 0) {
        output.writeUInt32(3, watchGroup_);
      }
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(4, actions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (weight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, weight_);
      }
      if (watchPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, watchPort_);
      }
      if (watchGroup_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, watchGroup_);
      }
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, actions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_bucket)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_bucket other = (org.opencord.voltha.openflow13.Openflow13.ofp_bucket) obj;

      if (getWeight()
          != other.getWeight()) return false;
      if (getWatchPort()
          != other.getWatchPort()) return false;
      if (getWatchGroup()
          != other.getWatchGroup()) return false;
      if (!getActionsList()
          .equals(other.getActionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getWeight();
      hash = (37 * hash) + WATCH_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getWatchPort();
      hash = (37 * hash) + WATCH_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getWatchGroup();
      if (getActionsCount() > 0) {
        hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getActionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_bucket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Bucket for use in groups. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_bucket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_bucket)
        org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_bucket.class, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_bucket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getActionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        weight_ = 0;

        watchPort_ = 0;

        watchGroup_ = 0;

        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_bucket.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_bucket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_bucket result = new org.opencord.voltha.openflow13.Openflow13.ofp_bucket(this);
        int from_bitField0_ = bitField0_;
        result.weight_ = weight_;
        result.watchPort_ = watchPort_;
        result.watchGroup_ = watchGroup_;
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_bucket) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_bucket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_bucket other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_bucket.getDefaultInstance()) return this;
        if (other.getWeight() != 0) {
          setWeight(other.getWeight());
        }
        if (other.getWatchPort() != 0) {
          setWatchPort(other.getWatchPort());
        }
        if (other.getWatchGroup() != 0) {
          setWatchGroup(other.getWatchGroup());
        }
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_bucket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_bucket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int weight_ ;
      /**
       * <pre>
       * Relative weight of bucket.  Only
       *defined for select groups. 
       * </pre>
       *
       * <code>uint32 weight = 1;</code>
       */
      public int getWeight() {
        return weight_;
      }
      /**
       * <pre>
       * Relative weight of bucket.  Only
       *defined for select groups. 
       * </pre>
       *
       * <code>uint32 weight = 1;</code>
       */
      public Builder setWeight(int value) {
        
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Relative weight of bucket.  Only
       *defined for select groups. 
       * </pre>
       *
       * <code>uint32 weight = 1;</code>
       */
      public Builder clearWeight() {
        
        weight_ = 0;
        onChanged();
        return this;
      }

      private int watchPort_ ;
      /**
       * <pre>
       * Port whose state affects whether this
       *bucket is live.  Only required for fast
       *failover groups. 
       * </pre>
       *
       * <code>uint32 watch_port = 2;</code>
       */
      public int getWatchPort() {
        return watchPort_;
      }
      /**
       * <pre>
       * Port whose state affects whether this
       *bucket is live.  Only required for fast
       *failover groups. 
       * </pre>
       *
       * <code>uint32 watch_port = 2;</code>
       */
      public Builder setWatchPort(int value) {
        
        watchPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Port whose state affects whether this
       *bucket is live.  Only required for fast
       *failover groups. 
       * </pre>
       *
       * <code>uint32 watch_port = 2;</code>
       */
      public Builder clearWatchPort() {
        
        watchPort_ = 0;
        onChanged();
        return this;
      }

      private int watchGroup_ ;
      /**
       * <pre>
       * Group whose state affects whether this
       *bucket is live.  Only required for fast
       *failover groups. 
       * </pre>
       *
       * <code>uint32 watch_group = 3;</code>
       */
      public int getWatchGroup() {
        return watchGroup_;
      }
      /**
       * <pre>
       * Group whose state affects whether this
       *bucket is live.  Only required for fast
       *failover groups. 
       * </pre>
       *
       * <code>uint32 watch_group = 3;</code>
       */
      public Builder setWatchGroup(int value) {
        
        watchGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Group whose state affects whether this
       *bucket is live.  Only required for fast
       *failover groups. 
       * </pre>
       *
       * <code>uint32 watch_group = 3;</code>
       */
      public Builder clearWatchGroup() {
        
        watchGroup_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>(actions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> actionsBuilder_;

      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder addActions(org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder addActions(
          org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder addAllActions(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_action> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_action actions = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder> 
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_bucket)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_bucket)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_bucket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_bucket();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_bucket>
        PARSER = new com.google.protobuf.AbstractParser<ofp_bucket>() {
      @java.lang.Override
      public ofp_bucket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_bucket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_bucket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_bucket> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_group_modOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_group_mod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
     */
    int getCommandValue();
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command getCommand();

    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 2;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_type getType();

    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 3;</code>
     */
    int getGroupId();

    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> 
        getBucketsList();
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_bucket getBuckets(int index);
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    int getBucketsCount();
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
        getBucketsOrBuilderList();
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder getBucketsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Group setup and teardown (controller -&gt; datapath). 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_group_mod}
   */
  public  static final class ofp_group_mod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_group_mod)
      ofp_group_modOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_group_mod.newBuilder() to construct.
    private ofp_group_mod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_group_mod() {
      command_ = 0;
      type_ = 0;
      buckets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_group_mod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_group_mod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              command_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 24: {

              groupId_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                buckets_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_bucket>();
                mutable_bitField0_ |= 0x00000001;
              }
              buckets_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_bucket.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          buckets_ = java.util.Collections.unmodifiableList(buckets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_mod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_mod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder.class);
    }

    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
     */
    public int getCommandValue() {
      return command_;
    }
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command getCommand() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command result = org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command.valueOf(command_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command.UNRECOGNIZED : result;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_group_type result = org.opencord.voltha.openflow13.Openflow13.ofp_group_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_type.UNRECOGNIZED : result;
    }

    public static final int GROUP_ID_FIELD_NUMBER = 3;
    private int groupId_;
    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 3;</code>
     */
    public int getGroupId() {
      return groupId_;
    }

    public static final int BUCKETS_FIELD_NUMBER = 4;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> buckets_;
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> getBucketsList() {
      return buckets_;
    }
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
        getBucketsOrBuilderList() {
      return buckets_;
    }
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    public int getBucketsCount() {
      return buckets_.size();
    }
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucket getBuckets(int index) {
      return buckets_.get(index);
    }
    /**
     * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder getBucketsOrBuilder(
        int index) {
      return buckets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (command_ != org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command.OFPGC_ADD.getNumber()) {
        output.writeEnum(1, command_);
      }
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_group_type.OFPGT_ALL.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (groupId_ != 0) {
        output.writeUInt32(3, groupId_);
      }
      for (int i = 0; i < buckets_.size(); i++) {
        output.writeMessage(4, buckets_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (command_ != org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command.OFPGC_ADD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, command_);
      }
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_group_type.OFPGT_ALL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, groupId_);
      }
      for (int i = 0; i < buckets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, buckets_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_mod)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_group_mod other = (org.opencord.voltha.openflow13.Openflow13.ofp_group_mod) obj;

      if (command_ != other.command_) return false;
      if (type_ != other.type_) return false;
      if (getGroupId()
          != other.getGroupId()) return false;
      if (!getBucketsList()
          .equals(other.getBucketsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + command_;
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      if (getBucketsCount() > 0) {
        hash = (37 * hash) + BUCKETS_FIELD_NUMBER;
        hash = (53 * hash) + getBucketsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_group_mod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Group setup and teardown (controller -&gt; datapath). 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_group_mod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_group_mod)
        org.opencord.voltha.openflow13.Openflow13.ofp_group_modOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_mod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_mod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBucketsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        command_ = 0;

        type_ = 0;

        groupId_ = 0;

        if (bucketsBuilder_ == null) {
          buckets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bucketsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_mod_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_mod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_mod result = new org.opencord.voltha.openflow13.Openflow13.ofp_group_mod(this);
        int from_bitField0_ = bitField0_;
        result.command_ = command_;
        result.type_ = type_;
        result.groupId_ = groupId_;
        if (bucketsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            buckets_ = java.util.Collections.unmodifiableList(buckets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.buckets_ = buckets_;
        } else {
          result.buckets_ = bucketsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_mod) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_group_mod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_group_mod other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.getDefaultInstance()) return this;
        if (other.command_ != 0) {
          setCommandValue(other.getCommandValue());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        if (bucketsBuilder_ == null) {
          if (!other.buckets_.isEmpty()) {
            if (buckets_.isEmpty()) {
              buckets_ = other.buckets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBucketsIsMutable();
              buckets_.addAll(other.buckets_);
            }
            onChanged();
          }
        } else {
          if (!other.buckets_.isEmpty()) {
            if (bucketsBuilder_.isEmpty()) {
              bucketsBuilder_.dispose();
              bucketsBuilder_ = null;
              buckets_ = other.buckets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bucketsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBucketsFieldBuilder() : null;
            } else {
              bucketsBuilder_.addAllMessages(other.buckets_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_mod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_group_mod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int command_ = 0;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
       */
      public int getCommandValue() {
        return command_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
       */
      public Builder setCommandValue(int value) {
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command getCommand() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command result = org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command.valueOf(command_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
       */
      public Builder setCommand(org.opencord.voltha.openflow13.Openflow13.ofp_group_mod_command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_group_mod_command command = 1;</code>
       */
      public Builder clearCommand() {
        
        command_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_group_type result = org.opencord.voltha.openflow13.Openflow13.ofp_group_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 2;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_group_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int groupId_ ;
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 3;</code>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 3;</code>
       */
      public Builder setGroupId(int value) {
        
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 3;</code>
       */
      public Builder clearGroupId() {
        
        groupId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> buckets_ =
        java.util.Collections.emptyList();
      private void ensureBucketsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          buckets_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_bucket>(buckets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> bucketsBuilder_;

      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> getBucketsList() {
        if (bucketsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buckets_);
        } else {
          return bucketsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public int getBucketsCount() {
        if (bucketsBuilder_ == null) {
          return buckets_.size();
        } else {
          return bucketsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket getBuckets(int index) {
        if (bucketsBuilder_ == null) {
          return buckets_.get(index);
        } else {
          return bucketsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder setBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket value) {
        if (bucketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketsIsMutable();
          buckets_.set(index, value);
          onChanged();
        } else {
          bucketsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder setBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder builderForValue) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.set(index, builderForValue.build());
          onChanged();
        } else {
          bucketsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder addBuckets(org.opencord.voltha.openflow13.Openflow13.ofp_bucket value) {
        if (bucketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketsIsMutable();
          buckets_.add(value);
          onChanged();
        } else {
          bucketsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder addBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket value) {
        if (bucketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketsIsMutable();
          buckets_.add(index, value);
          onChanged();
        } else {
          bucketsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder addBuckets(
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder builderForValue) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.add(builderForValue.build());
          onChanged();
        } else {
          bucketsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder addBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder builderForValue) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.add(index, builderForValue.build());
          onChanged();
        } else {
          bucketsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder addAllBuckets(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucket> values) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, buckets_);
          onChanged();
        } else {
          bucketsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder clearBuckets() {
        if (bucketsBuilder_ == null) {
          buckets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bucketsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public Builder removeBuckets(int index) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.remove(index);
          onChanged();
        } else {
          bucketsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder getBucketsBuilder(
          int index) {
        return getBucketsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder getBucketsOrBuilder(
          int index) {
        if (bucketsBuilder_ == null) {
          return buckets_.get(index);  } else {
          return bucketsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
           getBucketsOrBuilderList() {
        if (bucketsBuilder_ != null) {
          return bucketsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buckets_);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder addBucketsBuilder() {
        return getBucketsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_bucket.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder addBucketsBuilder(
          int index) {
        return getBucketsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_bucket buckets = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder> 
           getBucketsBuilderList() {
        return getBucketsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
          getBucketsFieldBuilder() {
        if (bucketsBuilder_ == null) {
          bucketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_bucket, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder>(
                  buckets_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          buckets_ = null;
        }
        return bucketsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_group_mod)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_group_mod)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_group_mod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_group_mod();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_mod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_group_mod>
        PARSER = new com.google.protobuf.AbstractParser<ofp_group_mod>() {
      @java.lang.Override
      public ofp_group_mod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_group_mod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_group_mod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_group_mod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_packet_outOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_packet_out)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 buffer_id = 1;</code>
     */
    int getBufferId();

    /**
     * <pre>
     * Packet's input port or OFPP_CONTROLLER.
     * </pre>
     *
     * <code>uint32 in_port = 2;</code>
     */
    int getInPort();

    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> 
        getActionsList();
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index);
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    int getActionsCount();
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList();
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index);

    /**
     * <pre>
     * The variable size action list is optionally followed by packet data.
     * This data is only present and meaningful if buffer_id == -1. 
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Send packet (controller -&gt; datapath). 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_packet_out}
   */
  public  static final class ofp_packet_out extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_packet_out)
      ofp_packet_outOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_packet_out.newBuilder() to construct.
    private ofp_packet_out(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_packet_out() {
      actions_ = java.util.Collections.emptyList();
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_packet_out();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_packet_out(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              bufferId_ = input.readUInt32();
              break;
            }
            case 16: {

              inPort_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>();
                mutable_bitField0_ |= 0x00000001;
              }
              actions_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action.parser(), extensionRegistry));
              break;
            }
            case 34: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          actions_ = java.util.Collections.unmodifiableList(actions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_out_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_out_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.class, org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder.class);
    }

    public static final int BUFFER_ID_FIELD_NUMBER = 1;
    private int bufferId_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 buffer_id = 1;</code>
     */
    public int getBufferId() {
      return bufferId_;
    }

    public static final int IN_PORT_FIELD_NUMBER = 2;
    private int inPort_;
    /**
     * <pre>
     * Packet's input port or OFPP_CONTROLLER.
     * </pre>
     *
     * <code>uint32 in_port = 2;</code>
     */
    public int getInPort() {
      return inPort_;
    }

    public static final int ACTIONS_FIELD_NUMBER = 3;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_;
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
      return actions_;
    }
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList() {
      return actions_;
    }
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    public int getActionsCount() {
      return actions_.size();
    }
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
      return actions_.get(index);
    }
    /**
     * <pre>
     * Action list - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The variable size action list is optionally followed by packet data.
     * This data is only present and meaningful if buffer_id == -1. 
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bufferId_ != 0) {
        output.writeUInt32(1, bufferId_);
      }
      if (inPort_ != 0) {
        output.writeUInt32(2, inPort_);
      }
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(3, actions_.get(i));
      }
      if (!data_.isEmpty()) {
        output.writeBytes(4, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bufferId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, bufferId_);
      }
      if (inPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, inPort_);
      }
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, actions_.get(i));
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_packet_out)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_packet_out other = (org.opencord.voltha.openflow13.Openflow13.ofp_packet_out) obj;

      if (getBufferId()
          != other.getBufferId()) return false;
      if (getInPort()
          != other.getInPort()) return false;
      if (!getActionsList()
          .equals(other.getActionsList())) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BUFFER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBufferId();
      hash = (37 * hash) + IN_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getInPort();
      if (getActionsCount() > 0) {
        hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getActionsList().hashCode();
      }
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_packet_out prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Send packet (controller -&gt; datapath). 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_packet_out}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_packet_out)
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_outOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_out_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_out_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.class, org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getActionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bufferId_ = 0;

        inPort_ = 0;

        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          actionsBuilder_.clear();
        }
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_out_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_out getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_out build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_out result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_out buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_out result = new org.opencord.voltha.openflow13.Openflow13.ofp_packet_out(this);
        int from_bitField0_ = bitField0_;
        result.bufferId_ = bufferId_;
        result.inPort_ = inPort_;
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_packet_out) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_packet_out)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_packet_out other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.getDefaultInstance()) return this;
        if (other.getBufferId() != 0) {
          setBufferId(other.getBufferId());
        }
        if (other.getInPort() != 0) {
          setInPort(other.getInPort());
        }
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_out parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_packet_out) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int bufferId_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 buffer_id = 1;</code>
       */
      public int getBufferId() {
        return bufferId_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 buffer_id = 1;</code>
       */
      public Builder setBufferId(int value) {
        
        bufferId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 buffer_id = 1;</code>
       */
      public Builder clearBufferId() {
        
        bufferId_ = 0;
        onChanged();
        return this;
      }

      private int inPort_ ;
      /**
       * <pre>
       * Packet's input port or OFPP_CONTROLLER.
       * </pre>
       *
       * <code>uint32 in_port = 2;</code>
       */
      public int getInPort() {
        return inPort_;
      }
      /**
       * <pre>
       * Packet's input port or OFPP_CONTROLLER.
       * </pre>
       *
       * <code>uint32 in_port = 2;</code>
       */
      public Builder setInPort(int value) {
        
        inPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Packet's input port or OFPP_CONTROLLER.
       * </pre>
       *
       * <code>uint32 in_port = 2;</code>
       */
      public Builder clearInPort() {
        
        inPort_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>(actions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> actionsBuilder_;

      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder addActions(org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder addActions(
          org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder addAllActions(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_action> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <pre>
       * Action list - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 3;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder> 
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The variable size action list is optionally followed by packet data.
       * This data is only present and meaningful if buffer_id == -1. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * The variable size action list is optionally followed by packet data.
       * This data is only present and meaningful if buffer_id == -1. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variable size action list is optionally followed by packet data.
       * This data is only present and meaningful if buffer_id == -1. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_packet_out)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_packet_out)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_packet_out DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_packet_out();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_out getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_packet_out>
        PARSER = new com.google.protobuf.AbstractParser<ofp_packet_out>() {
      @java.lang.Override
      public ofp_packet_out parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_packet_out(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_packet_out> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_packet_out> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_out getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_packet_inOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_packet_in)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 buffer_id = 1;</code>
     */
    int getBufferId();

    /**
     * <pre>
     * Reason packet is being sent 
     * </pre>
     *
     * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
     */
    int getReasonValue();
    /**
     * <pre>
     * Reason packet is being sent 
     * </pre>
     *
     * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason getReason();

    /**
     * <pre>
     * ID of the table that was looked up 
     * </pre>
     *
     * <code>uint32 table_id = 3;</code>
     */
    int getTableId();

    /**
     * <pre>
     * Cookie of the flow entry that was looked up. 
     * </pre>
     *
     * <code>uint64 cookie = 4;</code>
     */
    long getCookie();

    /**
     * <pre>
     * Packet metadata. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 5;</code>
     */
    boolean hasMatch();
    /**
     * <pre>
     * Packet metadata. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch();
    /**
     * <pre>
     * Packet metadata. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder();

    /**
     * <pre>
     * Ethernet frame 
     * </pre>
     *
     * <code>bytes data = 6;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Packet received on port (datapath -&gt; controller). 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_packet_in}
   */
  public  static final class ofp_packet_in extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_packet_in)
      ofp_packet_inOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_packet_in.newBuilder() to construct.
    private ofp_packet_in(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_packet_in() {
      reason_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_packet_in();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_packet_in(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              bufferId_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              reason_ = rawValue;
              break;
            }
            case 24: {

              tableId_ = input.readUInt32();
              break;
            }
            case 32: {

              cookie_ = input.readUInt64();
              break;
            }
            case 42: {
              org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder subBuilder = null;
              if (match_ != null) {
                subBuilder = match_.toBuilder();
              }
              match_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_match.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(match_);
                match_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_in_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_in_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.class, org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder.class);
    }

    public static final int BUFFER_ID_FIELD_NUMBER = 1;
    private int bufferId_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 buffer_id = 1;</code>
     */
    public int getBufferId() {
      return bufferId_;
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private int reason_;
    /**
     * <pre>
     * Reason packet is being sent 
     * </pre>
     *
     * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
     */
    public int getReasonValue() {
      return reason_;
    }
    /**
     * <pre>
     * Reason packet is being sent 
     * </pre>
     *
     * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason getReason() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason result = org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason.valueOf(reason_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason.UNRECOGNIZED : result;
    }

    public static final int TABLE_ID_FIELD_NUMBER = 3;
    private int tableId_;
    /**
     * <pre>
     * ID of the table that was looked up 
     * </pre>
     *
     * <code>uint32 table_id = 3;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int COOKIE_FIELD_NUMBER = 4;
    private long cookie_;
    /**
     * <pre>
     * Cookie of the flow entry that was looked up. 
     * </pre>
     *
     * <code>uint64 cookie = 4;</code>
     */
    public long getCookie() {
      return cookie_;
    }

    public static final int MATCH_FIELD_NUMBER = 5;
    private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
    /**
     * <pre>
     * Packet metadata. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 5;</code>
     */
    public boolean hasMatch() {
      return match_ != null;
    }
    /**
     * <pre>
     * Packet metadata. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
      return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
    }
    /**
     * <pre>
     * Packet metadata. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
      return getMatch();
    }

    public static final int DATA_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Ethernet frame 
     * </pre>
     *
     * <code>bytes data = 6;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bufferId_ != 0) {
        output.writeUInt32(1, bufferId_);
      }
      if (reason_ != org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason.OFPR_NO_MATCH.getNumber()) {
        output.writeEnum(2, reason_);
      }
      if (tableId_ != 0) {
        output.writeUInt32(3, tableId_);
      }
      if (cookie_ != 0L) {
        output.writeUInt64(4, cookie_);
      }
      if (match_ != null) {
        output.writeMessage(5, getMatch());
      }
      if (!data_.isEmpty()) {
        output.writeBytes(6, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bufferId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, bufferId_);
      }
      if (reason_ != org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason.OFPR_NO_MATCH.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, reason_);
      }
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tableId_);
      }
      if (cookie_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, cookie_);
      }
      if (match_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMatch());
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_packet_in)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_packet_in other = (org.opencord.voltha.openflow13.Openflow13.ofp_packet_in) obj;

      if (getBufferId()
          != other.getBufferId()) return false;
      if (reason_ != other.reason_) return false;
      if (getTableId()
          != other.getTableId()) return false;
      if (getCookie()
          != other.getCookie()) return false;
      if (hasMatch() != other.hasMatch()) return false;
      if (hasMatch()) {
        if (!getMatch()
            .equals(other.getMatch())) return false;
      }
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BUFFER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBufferId();
      hash = (37 * hash) + REASON_FIELD_NUMBER;
      hash = (53 * hash) + reason_;
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + COOKIE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookie());
      if (hasMatch()) {
        hash = (37 * hash) + MATCH_FIELD_NUMBER;
        hash = (53 * hash) + getMatch().hashCode();
      }
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_packet_in prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packet received on port (datapath -&gt; controller). 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_packet_in}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_packet_in)
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_inOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_in_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_in_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.class, org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bufferId_ = 0;

        reason_ = 0;

        tableId_ = 0;

        cookie_ = 0L;

        if (matchBuilder_ == null) {
          match_ = null;
        } else {
          match_ = null;
          matchBuilder_ = null;
        }
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_in_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_in result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_in result = new org.opencord.voltha.openflow13.Openflow13.ofp_packet_in(this);
        result.bufferId_ = bufferId_;
        result.reason_ = reason_;
        result.tableId_ = tableId_;
        result.cookie_ = cookie_;
        if (matchBuilder_ == null) {
          result.match_ = match_;
        } else {
          result.match_ = matchBuilder_.build();
        }
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_packet_in) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_packet_in)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_packet_in other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.getDefaultInstance()) return this;
        if (other.getBufferId() != 0) {
          setBufferId(other.getBufferId());
        }
        if (other.reason_ != 0) {
          setReasonValue(other.getReasonValue());
        }
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.getCookie() != 0L) {
          setCookie(other.getCookie());
        }
        if (other.hasMatch()) {
          mergeMatch(other.getMatch());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_in parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_packet_in) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bufferId_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 buffer_id = 1;</code>
       */
      public int getBufferId() {
        return bufferId_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 buffer_id = 1;</code>
       */
      public Builder setBufferId(int value) {
        
        bufferId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 buffer_id = 1;</code>
       */
      public Builder clearBufferId() {
        
        bufferId_ = 0;
        onChanged();
        return this;
      }

      private int reason_ = 0;
      /**
       * <pre>
       * Reason packet is being sent 
       * </pre>
       *
       * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
       */
      public int getReasonValue() {
        return reason_;
      }
      /**
       * <pre>
       * Reason packet is being sent 
       * </pre>
       *
       * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
       */
      public Builder setReasonValue(int value) {
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reason packet is being sent 
       * </pre>
       *
       * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason getReason() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason result = org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason.valueOf(reason_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Reason packet is being sent 
       * </pre>
       *
       * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
       */
      public Builder setReason(org.opencord.voltha.openflow13.Openflow13.ofp_packet_in_reason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        reason_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reason packet is being sent 
       * </pre>
       *
       * <code>.openflow_13.ofp_packet_in_reason reason = 2;</code>
       */
      public Builder clearReason() {
        
        reason_ = 0;
        onChanged();
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * ID of the table that was looked up 
       * </pre>
       *
       * <code>uint32 table_id = 3;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * ID of the table that was looked up 
       * </pre>
       *
       * <code>uint32 table_id = 3;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the table that was looked up 
       * </pre>
       *
       * <code>uint32 table_id = 3;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private long cookie_ ;
      /**
       * <pre>
       * Cookie of the flow entry that was looked up. 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public long getCookie() {
        return cookie_;
      }
      /**
       * <pre>
       * Cookie of the flow entry that was looked up. 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public Builder setCookie(long value) {
        
        cookie_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cookie of the flow entry that was looked up. 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public Builder clearCookie() {
        
        cookie_ = 0L;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> matchBuilder_;
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public boolean hasMatch() {
        return matchBuilder_ != null || match_ != null;
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
        if (matchBuilder_ == null) {
          return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        } else {
          return matchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public Builder setMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          match_ = value;
          onChanged();
        } else {
          matchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public Builder setMatch(
          org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder builderForValue) {
        if (matchBuilder_ == null) {
          match_ = builderForValue.build();
          onChanged();
        } else {
          matchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public Builder mergeMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (match_ != null) {
            match_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_match.newBuilder(match_).mergeFrom(value).buildPartial();
          } else {
            match_ = value;
          }
          onChanged();
        } else {
          matchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public Builder clearMatch() {
        if (matchBuilder_ == null) {
          match_ = null;
          onChanged();
        } else {
          match_ = null;
          matchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder getMatchBuilder() {
        
        onChanged();
        return getMatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
        if (matchBuilder_ != null) {
          return matchBuilder_.getMessageOrBuilder();
        } else {
          return match_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        }
      }
      /**
       * <pre>
       * Packet metadata. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> 
          getMatchFieldBuilder() {
        if (matchBuilder_ == null) {
          matchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder>(
                  getMatch(),
                  getParentForChildren(),
                  isClean());
          match_ = null;
        }
        return matchBuilder_;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Ethernet frame 
       * </pre>
       *
       * <code>bytes data = 6;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Ethernet frame 
       * </pre>
       *
       * <code>bytes data = 6;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ethernet frame 
       * </pre>
       *
       * <code>bytes data = 6;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_packet_in)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_packet_in)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_packet_in DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_packet_in();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_in getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_packet_in>
        PARSER = new com.google.protobuf.AbstractParser<ofp_packet_in>() {
      @java.lang.Override
      public ofp_packet_in parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_packet_in(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_packet_in> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_packet_in> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_flow_removedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_flow_removed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint64 cookie = 1;</code>
     */
    long getCookie();

    /**
     * <pre>
     * Priority level of flow entry. 
     * </pre>
     *
     * <code>uint32 priority = 2;</code>
     */
    int getPriority();

    /**
     * <pre>
     * One of OFPRR_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
     */
    int getReasonValue();
    /**
     * <pre>
     * One of OFPRR_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason getReason();

    /**
     * <pre>
     * ID of the table 
     * </pre>
     *
     * <code>uint32 table_id = 4;</code>
     */
    int getTableId();

    /**
     * <pre>
     * Time flow was alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 5;</code>
     */
    int getDurationSec();

    /**
     * <pre>
     * Time flow was alive in nanoseconds beyond
     *duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 6;</code>
     */
    int getDurationNsec();

    /**
     * <pre>
     * Idle timeout from original flow mod. 
     * </pre>
     *
     * <code>uint32 idle_timeout = 7;</code>
     */
    int getIdleTimeout();

    /**
     * <pre>
     * Hard timeout from original flow mod. 
     * </pre>
     *
     * <code>uint32 hard_timeout = 8;</code>
     */
    int getHardTimeout();

    /**
     * <code>uint64 packet_count = 9;</code>
     */
    long getPacketCount();

    /**
     * <code>uint64 byte_count = 10;</code>
     */
    long getByteCount();

    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 121;</code>
     */
    boolean hasMatch();
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 121;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch();
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 121;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder();
  }
  /**
   * <pre>
   * Flow removed (datapath -&gt; controller). 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_flow_removed}
   */
  public  static final class ofp_flow_removed extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_flow_removed)
      ofp_flow_removedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_flow_removed.newBuilder() to construct.
    private ofp_flow_removed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_flow_removed() {
      reason_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_flow_removed();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_flow_removed(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              cookie_ = input.readUInt64();
              break;
            }
            case 16: {

              priority_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              reason_ = rawValue;
              break;
            }
            case 32: {

              tableId_ = input.readUInt32();
              break;
            }
            case 40: {

              durationSec_ = input.readUInt32();
              break;
            }
            case 48: {

              durationNsec_ = input.readUInt32();
              break;
            }
            case 56: {

              idleTimeout_ = input.readUInt32();
              break;
            }
            case 64: {

              hardTimeout_ = input.readUInt32();
              break;
            }
            case 72: {

              packetCount_ = input.readUInt64();
              break;
            }
            case 80: {

              byteCount_ = input.readUInt64();
              break;
            }
            case 970: {
              org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder subBuilder = null;
              if (match_ != null) {
                subBuilder = match_.toBuilder();
              }
              match_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_match.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(match_);
                match_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_removed_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_removed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed.Builder.class);
    }

    public static final int COOKIE_FIELD_NUMBER = 1;
    private long cookie_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint64 cookie = 1;</code>
     */
    public long getCookie() {
      return cookie_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 2;
    private int priority_;
    /**
     * <pre>
     * Priority level of flow entry. 
     * </pre>
     *
     * <code>uint32 priority = 2;</code>
     */
    public int getPriority() {
      return priority_;
    }

    public static final int REASON_FIELD_NUMBER = 3;
    private int reason_;
    /**
     * <pre>
     * One of OFPRR_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
     */
    public int getReasonValue() {
      return reason_;
    }
    /**
     * <pre>
     * One of OFPRR_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason getReason() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason result = org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason.valueOf(reason_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason.UNRECOGNIZED : result;
    }

    public static final int TABLE_ID_FIELD_NUMBER = 4;
    private int tableId_;
    /**
     * <pre>
     * ID of the table 
     * </pre>
     *
     * <code>uint32 table_id = 4;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int DURATION_SEC_FIELD_NUMBER = 5;
    private int durationSec_;
    /**
     * <pre>
     * Time flow was alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 5;</code>
     */
    public int getDurationSec() {
      return durationSec_;
    }

    public static final int DURATION_NSEC_FIELD_NUMBER = 6;
    private int durationNsec_;
    /**
     * <pre>
     * Time flow was alive in nanoseconds beyond
     *duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 6;</code>
     */
    public int getDurationNsec() {
      return durationNsec_;
    }

    public static final int IDLE_TIMEOUT_FIELD_NUMBER = 7;
    private int idleTimeout_;
    /**
     * <pre>
     * Idle timeout from original flow mod. 
     * </pre>
     *
     * <code>uint32 idle_timeout = 7;</code>
     */
    public int getIdleTimeout() {
      return idleTimeout_;
    }

    public static final int HARD_TIMEOUT_FIELD_NUMBER = 8;
    private int hardTimeout_;
    /**
     * <pre>
     * Hard timeout from original flow mod. 
     * </pre>
     *
     * <code>uint32 hard_timeout = 8;</code>
     */
    public int getHardTimeout() {
      return hardTimeout_;
    }

    public static final int PACKET_COUNT_FIELD_NUMBER = 9;
    private long packetCount_;
    /**
     * <code>uint64 packet_count = 9;</code>
     */
    public long getPacketCount() {
      return packetCount_;
    }

    public static final int BYTE_COUNT_FIELD_NUMBER = 10;
    private long byteCount_;
    /**
     * <code>uint64 byte_count = 10;</code>
     */
    public long getByteCount() {
      return byteCount_;
    }

    public static final int MATCH_FIELD_NUMBER = 121;
    private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 121;</code>
     */
    public boolean hasMatch() {
      return match_ != null;
    }
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 121;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
      return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
    }
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 121;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
      return getMatch();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cookie_ != 0L) {
        output.writeUInt64(1, cookie_);
      }
      if (priority_ != 0) {
        output.writeUInt32(2, priority_);
      }
      if (reason_ != org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason.OFPRR_IDLE_TIMEOUT.getNumber()) {
        output.writeEnum(3, reason_);
      }
      if (tableId_ != 0) {
        output.writeUInt32(4, tableId_);
      }
      if (durationSec_ != 0) {
        output.writeUInt32(5, durationSec_);
      }
      if (durationNsec_ != 0) {
        output.writeUInt32(6, durationNsec_);
      }
      if (idleTimeout_ != 0) {
        output.writeUInt32(7, idleTimeout_);
      }
      if (hardTimeout_ != 0) {
        output.writeUInt32(8, hardTimeout_);
      }
      if (packetCount_ != 0L) {
        output.writeUInt64(9, packetCount_);
      }
      if (byteCount_ != 0L) {
        output.writeUInt64(10, byteCount_);
      }
      if (match_ != null) {
        output.writeMessage(121, getMatch());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cookie_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, cookie_);
      }
      if (priority_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, priority_);
      }
      if (reason_ != org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason.OFPRR_IDLE_TIMEOUT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, reason_);
      }
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, tableId_);
      }
      if (durationSec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, durationSec_);
      }
      if (durationNsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, durationNsec_);
      }
      if (idleTimeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, idleTimeout_);
      }
      if (hardTimeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, hardTimeout_);
      }
      if (packetCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, packetCount_);
      }
      if (byteCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, byteCount_);
      }
      if (match_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(121, getMatch());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed other = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed) obj;

      if (getCookie()
          != other.getCookie()) return false;
      if (getPriority()
          != other.getPriority()) return false;
      if (reason_ != other.reason_) return false;
      if (getTableId()
          != other.getTableId()) return false;
      if (getDurationSec()
          != other.getDurationSec()) return false;
      if (getDurationNsec()
          != other.getDurationNsec()) return false;
      if (getIdleTimeout()
          != other.getIdleTimeout()) return false;
      if (getHardTimeout()
          != other.getHardTimeout()) return false;
      if (getPacketCount()
          != other.getPacketCount()) return false;
      if (getByteCount()
          != other.getByteCount()) return false;
      if (hasMatch() != other.hasMatch()) return false;
      if (hasMatch()) {
        if (!getMatch()
            .equals(other.getMatch())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COOKIE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookie());
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + getPriority();
      hash = (37 * hash) + REASON_FIELD_NUMBER;
      hash = (53 * hash) + reason_;
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + DURATION_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationSec();
      hash = (37 * hash) + DURATION_NSEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationNsec();
      hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getIdleTimeout();
      hash = (37 * hash) + HARD_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getHardTimeout();
      hash = (37 * hash) + PACKET_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPacketCount());
      hash = (37 * hash) + BYTE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteCount());
      if (hasMatch()) {
        hash = (37 * hash) + MATCH_FIELD_NUMBER;
        hash = (53 * hash) + getMatch().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Flow removed (datapath -&gt; controller). 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_flow_removed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_flow_removed)
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_removedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_removed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_removed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cookie_ = 0L;

        priority_ = 0;

        reason_ = 0;

        tableId_ = 0;

        durationSec_ = 0;

        durationNsec_ = 0;

        idleTimeout_ = 0;

        hardTimeout_ = 0;

        packetCount_ = 0L;

        byteCount_ = 0L;

        if (matchBuilder_ == null) {
          match_ = null;
        } else {
          match_ = null;
          matchBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_removed_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed result = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed(this);
        result.cookie_ = cookie_;
        result.priority_ = priority_;
        result.reason_ = reason_;
        result.tableId_ = tableId_;
        result.durationSec_ = durationSec_;
        result.durationNsec_ = durationNsec_;
        result.idleTimeout_ = idleTimeout_;
        result.hardTimeout_ = hardTimeout_;
        result.packetCount_ = packetCount_;
        result.byteCount_ = byteCount_;
        if (matchBuilder_ == null) {
          result.match_ = match_;
        } else {
          result.match_ = matchBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed.getDefaultInstance()) return this;
        if (other.getCookie() != 0L) {
          setCookie(other.getCookie());
        }
        if (other.getPriority() != 0) {
          setPriority(other.getPriority());
        }
        if (other.reason_ != 0) {
          setReasonValue(other.getReasonValue());
        }
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.getDurationSec() != 0) {
          setDurationSec(other.getDurationSec());
        }
        if (other.getDurationNsec() != 0) {
          setDurationNsec(other.getDurationNsec());
        }
        if (other.getIdleTimeout() != 0) {
          setIdleTimeout(other.getIdleTimeout());
        }
        if (other.getHardTimeout() != 0) {
          setHardTimeout(other.getHardTimeout());
        }
        if (other.getPacketCount() != 0L) {
          setPacketCount(other.getPacketCount());
        }
        if (other.getByteCount() != 0L) {
          setByteCount(other.getByteCount());
        }
        if (other.hasMatch()) {
          mergeMatch(other.getMatch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long cookie_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 cookie = 1;</code>
       */
      public long getCookie() {
        return cookie_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 cookie = 1;</code>
       */
      public Builder setCookie(long value) {
        
        cookie_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint64 cookie = 1;</code>
       */
      public Builder clearCookie() {
        
        cookie_ = 0L;
        onChanged();
        return this;
      }

      private int priority_ ;
      /**
       * <pre>
       * Priority level of flow entry. 
       * </pre>
       *
       * <code>uint32 priority = 2;</code>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <pre>
       * Priority level of flow entry. 
       * </pre>
       *
       * <code>uint32 priority = 2;</code>
       */
      public Builder setPriority(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority level of flow entry. 
       * </pre>
       *
       * <code>uint32 priority = 2;</code>
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private int reason_ = 0;
      /**
       * <pre>
       * One of OFPRR_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
       */
      public int getReasonValue() {
        return reason_;
      }
      /**
       * <pre>
       * One of OFPRR_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
       */
      public Builder setReasonValue(int value) {
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPRR_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason getReason() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason result = org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason.valueOf(reason_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPRR_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
       */
      public Builder setReason(org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed_reason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        reason_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPRR_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_flow_removed_reason reason = 3;</code>
       */
      public Builder clearReason() {
        
        reason_ = 0;
        onChanged();
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * ID of the table 
       * </pre>
       *
       * <code>uint32 table_id = 4;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * ID of the table 
       * </pre>
       *
       * <code>uint32 table_id = 4;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the table 
       * </pre>
       *
       * <code>uint32 table_id = 4;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int durationSec_ ;
      /**
       * <pre>
       * Time flow was alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public int getDurationSec() {
        return durationSec_;
      }
      /**
       * <pre>
       * Time flow was alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public Builder setDurationSec(int value) {
        
        durationSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time flow was alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public Builder clearDurationSec() {
        
        durationSec_ = 0;
        onChanged();
        return this;
      }

      private int durationNsec_ ;
      /**
       * <pre>
       * Time flow was alive in nanoseconds beyond
       *duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public int getDurationNsec() {
        return durationNsec_;
      }
      /**
       * <pre>
       * Time flow was alive in nanoseconds beyond
       *duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public Builder setDurationNsec(int value) {
        
        durationNsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time flow was alive in nanoseconds beyond
       *duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public Builder clearDurationNsec() {
        
        durationNsec_ = 0;
        onChanged();
        return this;
      }

      private int idleTimeout_ ;
      /**
       * <pre>
       * Idle timeout from original flow mod. 
       * </pre>
       *
       * <code>uint32 idle_timeout = 7;</code>
       */
      public int getIdleTimeout() {
        return idleTimeout_;
      }
      /**
       * <pre>
       * Idle timeout from original flow mod. 
       * </pre>
       *
       * <code>uint32 idle_timeout = 7;</code>
       */
      public Builder setIdleTimeout(int value) {
        
        idleTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Idle timeout from original flow mod. 
       * </pre>
       *
       * <code>uint32 idle_timeout = 7;</code>
       */
      public Builder clearIdleTimeout() {
        
        idleTimeout_ = 0;
        onChanged();
        return this;
      }

      private int hardTimeout_ ;
      /**
       * <pre>
       * Hard timeout from original flow mod. 
       * </pre>
       *
       * <code>uint32 hard_timeout = 8;</code>
       */
      public int getHardTimeout() {
        return hardTimeout_;
      }
      /**
       * <pre>
       * Hard timeout from original flow mod. 
       * </pre>
       *
       * <code>uint32 hard_timeout = 8;</code>
       */
      public Builder setHardTimeout(int value) {
        
        hardTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hard timeout from original flow mod. 
       * </pre>
       *
       * <code>uint32 hard_timeout = 8;</code>
       */
      public Builder clearHardTimeout() {
        
        hardTimeout_ = 0;
        onChanged();
        return this;
      }

      private long packetCount_ ;
      /**
       * <code>uint64 packet_count = 9;</code>
       */
      public long getPacketCount() {
        return packetCount_;
      }
      /**
       * <code>uint64 packet_count = 9;</code>
       */
      public Builder setPacketCount(long value) {
        
        packetCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 packet_count = 9;</code>
       */
      public Builder clearPacketCount() {
        
        packetCount_ = 0L;
        onChanged();
        return this;
      }

      private long byteCount_ ;
      /**
       * <code>uint64 byte_count = 10;</code>
       */
      public long getByteCount() {
        return byteCount_;
      }
      /**
       * <code>uint64 byte_count = 10;</code>
       */
      public Builder setByteCount(long value) {
        
        byteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 byte_count = 10;</code>
       */
      public Builder clearByteCount() {
        
        byteCount_ = 0L;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> matchBuilder_;
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public boolean hasMatch() {
        return matchBuilder_ != null || match_ != null;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
        if (matchBuilder_ == null) {
          return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        } else {
          return matchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public Builder setMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          match_ = value;
          onChanged();
        } else {
          matchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public Builder setMatch(
          org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder builderForValue) {
        if (matchBuilder_ == null) {
          match_ = builderForValue.build();
          onChanged();
        } else {
          matchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public Builder mergeMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (match_ != null) {
            match_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_match.newBuilder(match_).mergeFrom(value).buildPartial();
          } else {
            match_ = value;
          }
          onChanged();
        } else {
          matchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public Builder clearMatch() {
        if (matchBuilder_ == null) {
          match_ = null;
          onChanged();
        } else {
          match_ = null;
          matchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder getMatchBuilder() {
        
        onChanged();
        return getMatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
        if (matchBuilder_ != null) {
          return matchBuilder_.getMessageOrBuilder();
        } else {
          return match_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        }
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 121;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> 
          getMatchFieldBuilder() {
        if (matchBuilder_ == null) {
          matchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder>(
                  getMatch(),
                  getParentForChildren(),
                  isClean());
          match_ = null;
        }
        return matchBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_flow_removed)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_flow_removed)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_flow_removed>
        PARSER = new com.google.protobuf.AbstractParser<ofp_flow_removed>() {
      @java.lang.Override
      public ofp_flow_removed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_flow_removed(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_flow_removed> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_flow_removed> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_removed getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_band_headerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_band_header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPMBT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of OFPMBT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type getType();

    /**
     * <pre>
     * Rate for this band. 
     * </pre>
     *
     * <code>uint32 rate = 2;</code>
     */
    int getRate();

    /**
     * <pre>
     * Size of bursts. 
     * </pre>
     *
     * <code>uint32 burst_size = 3;</code>
     */
    int getBurstSize();

    /**
     * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
     */
    boolean hasDrop();
    /**
     * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop getDrop();
    /**
     * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dropOrBuilder getDropOrBuilder();

    /**
     * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
     */
    boolean hasDscpRemark();
    /**
     * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark getDscpRemark();
    /**
     * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remarkOrBuilder getDscpRemarkOrBuilder();

    /**
     * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
     */
    boolean hasExperimenter();
    /**
     * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter getExperimenter();
    /**
     * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenterOrBuilder getExperimenterOrBuilder();

    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.DataCase getDataCase();
  }
  /**
   * <pre>
   * Common header for all meter bands 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_band_header}
   */
  public  static final class ofp_meter_band_header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_band_header)
      ofp_meter_band_headerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_band_header.newBuilder() to construct.
    private ofp_meter_band_header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_band_header() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_band_header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_band_header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              rate_ = input.readUInt32();
              break;
            }
            case 24: {

              burstSize_ = input.readUInt32();
              break;
            }
            case 34: {
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder subBuilder = null;
              if (dataCase_ == 4) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 4;
              break;
            }
            case 42: {
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder subBuilder = null;
              if (dataCase_ == 5) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 5;
              break;
            }
            case 50: {
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder subBuilder = null;
              if (dataCase_ == 6) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_).toBuilder();
              }
              data_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 6;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      DROP(4),
      DSCP_REMARK(5),
      EXPERIMENTER(6),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 4: return DROP;
          case 5: return DSCP_REMARK;
          case 6: return EXPERIMENTER;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * One of OFPMBT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of OFPMBT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type result = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type.UNRECOGNIZED : result;
    }

    public static final int RATE_FIELD_NUMBER = 2;
    private int rate_;
    /**
     * <pre>
     * Rate for this band. 
     * </pre>
     *
     * <code>uint32 rate = 2;</code>
     */
    public int getRate() {
      return rate_;
    }

    public static final int BURST_SIZE_FIELD_NUMBER = 3;
    private int burstSize_;
    /**
     * <pre>
     * Size of bursts. 
     * </pre>
     *
     * <code>uint32 burst_size = 3;</code>
     */
    public int getBurstSize() {
      return burstSize_;
    }

    public static final int DROP_FIELD_NUMBER = 4;
    /**
     * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
     */
    public boolean hasDrop() {
      return dataCase_ == 4;
    }
    /**
     * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop getDrop() {
      if (dataCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dropOrBuilder getDropOrBuilder() {
      if (dataCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance();
    }

    public static final int DSCP_REMARK_FIELD_NUMBER = 5;
    /**
     * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
     */
    public boolean hasDscpRemark() {
      return dataCase_ == 5;
    }
    /**
     * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark getDscpRemark() {
      if (dataCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remarkOrBuilder getDscpRemarkOrBuilder() {
      if (dataCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance();
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 6;
    /**
     * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
     */
    public boolean hasExperimenter() {
      return dataCase_ == 6;
    }
    /**
     * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter getExperimenter() {
      if (dataCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenterOrBuilder getExperimenterOrBuilder() {
      if (dataCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type.OFPMBT_INVALID.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (rate_ != 0) {
        output.writeUInt32(2, rate_);
      }
      if (burstSize_ != 0) {
        output.writeUInt32(3, burstSize_);
      }
      if (dataCase_ == 4) {
        output.writeMessage(4, (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_);
      }
      if (dataCase_ == 5) {
        output.writeMessage(5, (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_);
      }
      if (dataCase_ == 6) {
        output.writeMessage(6, (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type.OFPMBT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (rate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, rate_);
      }
      if (burstSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, burstSize_);
      }
      if (dataCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_);
      }
      if (dataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_);
      }
      if (dataCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header) obj;

      if (type_ != other.type_) return false;
      if (getRate()
          != other.getRate()) return false;
      if (getBurstSize()
          != other.getBurstSize()) return false;
      if (!getDataCase().equals(other.getDataCase())) return false;
      switch (dataCase_) {
        case 4:
          if (!getDrop()
              .equals(other.getDrop())) return false;
          break;
        case 5:
          if (!getDscpRemark()
              .equals(other.getDscpRemark())) return false;
          break;
        case 6:
          if (!getExperimenter()
              .equals(other.getExperimenter())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + RATE_FIELD_NUMBER;
      hash = (53 * hash) + getRate();
      hash = (37 * hash) + BURST_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getBurstSize();
      switch (dataCase_) {
        case 4:
          hash = (37 * hash) + DROP_FIELD_NUMBER;
          hash = (53 * hash) + getDrop().hashCode();
          break;
        case 5:
          hash = (37 * hash) + DSCP_REMARK_FIELD_NUMBER;
          hash = (53 * hash) + getDscpRemark().hashCode();
          break;
        case 6:
          hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
          hash = (53 * hash) + getExperimenter().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Common header for all meter bands 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_band_header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_band_header)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        rate_ = 0;

        burstSize_ = 0;

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_header_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header(this);
        result.type_ = type_;
        result.rate_ = rate_;
        result.burstSize_ = burstSize_;
        if (dataCase_ == 4) {
          if (dropBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = dropBuilder_.build();
          }
        }
        if (dataCase_ == 5) {
          if (dscpRemarkBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = dscpRemarkBuilder_.build();
          }
        }
        if (dataCase_ == 6) {
          if (experimenterBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = experimenterBuilder_.build();
          }
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getRate() != 0) {
          setRate(other.getRate());
        }
        if (other.getBurstSize() != 0) {
          setBurstSize(other.getBurstSize());
        }
        switch (other.getDataCase()) {
          case DROP: {
            mergeDrop(other.getDrop());
            break;
          }
          case DSCP_REMARK: {
            mergeDscpRemark(other.getDscpRemark());
            break;
          }
          case EXPERIMENTER: {
            mergeExperimenter(other.getExperimenter());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * One of OFPMBT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of OFPMBT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPMBT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type result = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPMBT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPMBT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_band_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int rate_ ;
      /**
       * <pre>
       * Rate for this band. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public int getRate() {
        return rate_;
      }
      /**
       * <pre>
       * Rate for this band. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public Builder setRate(int value) {
        
        rate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Rate for this band. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public Builder clearRate() {
        
        rate_ = 0;
        onChanged();
        return this;
      }

      private int burstSize_ ;
      /**
       * <pre>
       * Size of bursts. 
       * </pre>
       *
       * <code>uint32 burst_size = 3;</code>
       */
      public int getBurstSize() {
        return burstSize_;
      }
      /**
       * <pre>
       * Size of bursts. 
       * </pre>
       *
       * <code>uint32 burst_size = 3;</code>
       */
      public Builder setBurstSize(int value) {
        
        burstSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Size of bursts. 
       * </pre>
       *
       * <code>uint32 burst_size = 3;</code>
       */
      public Builder clearBurstSize() {
        
        burstSize_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dropOrBuilder> dropBuilder_;
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public boolean hasDrop() {
        return dataCase_ == 4;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop getDrop() {
        if (dropBuilder_ == null) {
          if (dataCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance();
        } else {
          if (dataCase_ == 4) {
            return dropBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public Builder setDrop(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop value) {
        if (dropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dropBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public Builder setDrop(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder builderForValue) {
        if (dropBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dropBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public Builder mergeDrop(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop value) {
        if (dropBuilder_ == null) {
          if (dataCase_ == 4 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 4) {
            dropBuilder_.mergeFrom(value);
          }
          dropBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public Builder clearDrop() {
        if (dropBuilder_ == null) {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
          }
          dropBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder getDropBuilder() {
        return getDropFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dropOrBuilder getDropOrBuilder() {
        if ((dataCase_ == 4) && (dropBuilder_ != null)) {
          return dropBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_band_drop drop = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dropOrBuilder> 
          getDropFieldBuilder() {
        if (dropBuilder_ == null) {
          if (!(dataCase_ == 4)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance();
          }
          dropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dropOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 4;
        onChanged();;
        return dropBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remarkOrBuilder> dscpRemarkBuilder_;
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public boolean hasDscpRemark() {
        return dataCase_ == 5;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark getDscpRemark() {
        if (dscpRemarkBuilder_ == null) {
          if (dataCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance();
        } else {
          if (dataCase_ == 5) {
            return dscpRemarkBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public Builder setDscpRemark(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark value) {
        if (dscpRemarkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dscpRemarkBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public Builder setDscpRemark(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder builderForValue) {
        if (dscpRemarkBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dscpRemarkBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public Builder mergeDscpRemark(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark value) {
        if (dscpRemarkBuilder_ == null) {
          if (dataCase_ == 5 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 5) {
            dscpRemarkBuilder_.mergeFrom(value);
          }
          dscpRemarkBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public Builder clearDscpRemark() {
        if (dscpRemarkBuilder_ == null) {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
          }
          dscpRemarkBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder getDscpRemarkBuilder() {
        return getDscpRemarkFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remarkOrBuilder getDscpRemarkOrBuilder() {
        if ((dataCase_ == 5) && (dscpRemarkBuilder_ != null)) {
          return dscpRemarkBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_band_dscp_remark dscp_remark = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remarkOrBuilder> 
          getDscpRemarkFieldBuilder() {
        if (dscpRemarkBuilder_ == null) {
          if (!(dataCase_ == 5)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance();
          }
          dscpRemarkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remarkOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 5;
        onChanged();;
        return dscpRemarkBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenterOrBuilder> experimenterBuilder_;
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public boolean hasExperimenter() {
        return dataCase_ == 6;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter getExperimenter() {
        if (experimenterBuilder_ == null) {
          if (dataCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance();
        } else {
          if (dataCase_ == 6) {
            return experimenterBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public Builder setExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          experimenterBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public Builder setExperimenter(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder builderForValue) {
        if (experimenterBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          experimenterBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public Builder mergeExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (dataCase_ == 6 &&
              data_ != org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance()) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 6) {
            experimenterBuilder_.mergeFrom(value);
          }
          experimenterBuilder_.setMessage(value);
        }
        dataCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public Builder clearExperimenter() {
        if (experimenterBuilder_ == null) {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 6) {
            dataCase_ = 0;
            data_ = null;
          }
          experimenterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder getExperimenterBuilder() {
        return getExperimenterFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenterOrBuilder getExperimenterOrBuilder() {
        if ((dataCase_ == 6) && (experimenterBuilder_ != null)) {
          return experimenterBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_band_experimenter experimenter = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenterOrBuilder> 
          getExperimenterFieldBuilder() {
        if (experimenterBuilder_ == null) {
          if (!(dataCase_ == 6)) {
            data_ = org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance();
          }
          experimenterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenterOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 6;
        onChanged();;
        return experimenterBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_band_header)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_band_header)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_band_header>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_band_header>() {
      @java.lang.Override
      public ofp_meter_band_header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_band_header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_band_header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_band_header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_band_dropOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_band_drop)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * OFPMBT_DROP band - drop packets 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_band_drop}
   */
  public  static final class ofp_meter_band_drop extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_band_drop)
      ofp_meter_band_dropOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_band_drop.newBuilder() to construct.
    private ofp_meter_band_drop(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_band_drop() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_band_drop();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_band_drop(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_drop_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_drop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OFPMBT_DROP band - drop packets 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_band_drop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_band_drop)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dropOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_drop_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_drop_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_drop_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_band_drop)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_band_drop)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_band_drop>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_band_drop>() {
      @java.lang.Override
      public ofp_meter_band_drop parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_band_drop(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_band_drop> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_band_drop> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_drop getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_band_dscp_remarkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_band_dscp_remark)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of drop precedence level to add. 
     * </pre>
     *
     * <code>uint32 prec_level = 1;</code>
     */
    int getPrecLevel();
  }
  /**
   * <pre>
   * OFPMBT_DSCP_REMARK band - Remark DSCP in the IP header 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_band_dscp_remark}
   */
  public  static final class ofp_meter_band_dscp_remark extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_band_dscp_remark)
      ofp_meter_band_dscp_remarkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_band_dscp_remark.newBuilder() to construct.
    private ofp_meter_band_dscp_remark(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_band_dscp_remark() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_band_dscp_remark();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_band_dscp_remark(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              precLevel_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_dscp_remark_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_dscp_remark_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder.class);
    }

    public static final int PREC_LEVEL_FIELD_NUMBER = 1;
    private int precLevel_;
    /**
     * <pre>
     * Number of drop precedence level to add. 
     * </pre>
     *
     * <code>uint32 prec_level = 1;</code>
     */
    public int getPrecLevel() {
      return precLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (precLevel_ != 0) {
        output.writeUInt32(1, precLevel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (precLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, precLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) obj;

      if (getPrecLevel()
          != other.getPrecLevel()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PREC_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getPrecLevel();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OFPMBT_DSCP_REMARK band - Remark DSCP in the IP header 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_band_dscp_remark}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_band_dscp_remark)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remarkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_dscp_remark_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_dscp_remark_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        precLevel_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_dscp_remark_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark(this);
        result.precLevel_ = precLevel_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark.getDefaultInstance()) return this;
        if (other.getPrecLevel() != 0) {
          setPrecLevel(other.getPrecLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int precLevel_ ;
      /**
       * <pre>
       * Number of drop precedence level to add. 
       * </pre>
       *
       * <code>uint32 prec_level = 1;</code>
       */
      public int getPrecLevel() {
        return precLevel_;
      }
      /**
       * <pre>
       * Number of drop precedence level to add. 
       * </pre>
       *
       * <code>uint32 prec_level = 1;</code>
       */
      public Builder setPrecLevel(int value) {
        
        precLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of drop precedence level to add. 
       * </pre>
       *
       * <code>uint32 prec_level = 1;</code>
       */
      public Builder clearPrecLevel() {
        
        precLevel_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_band_dscp_remark)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_band_dscp_remark)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_band_dscp_remark>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_band_dscp_remark>() {
      @java.lang.Override
      public ofp_meter_band_dscp_remark parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_band_dscp_remark(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_band_dscp_remark> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_band_dscp_remark> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_dscp_remark getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_band_experimenterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_band_experimenter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Experimenter ID which takes the
     *same form as in struct
     *ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    int getExperimenter();
  }
  /**
   * <pre>
   * OFPMBT_EXPERIMENTER band - Experimenter type.
   * The rest of the band is experimenter-defined. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_band_experimenter}
   */
  public  static final class ofp_meter_band_experimenter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_band_experimenter)
      ofp_meter_band_experimenterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_band_experimenter.newBuilder() to construct.
    private ofp_meter_band_experimenter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_band_experimenter() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_band_experimenter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_band_experimenter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              experimenter_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_experimenter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_experimenter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder.class);
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 1;
    private int experimenter_;
    /**
     * <pre>
     * Experimenter ID which takes the
     *same form as in struct
     *ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (experimenter_ != 0) {
        output.writeUInt32(1, experimenter_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, experimenter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) obj;

      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OFPMBT_EXPERIMENTER band - Experimenter type.
     * The rest of the band is experimenter-defined. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_band_experimenter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_band_experimenter)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_experimenter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_experimenter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        experimenter_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_experimenter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter(this);
        result.experimenter_ = experimenter_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter.getDefaultInstance()) return this;
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int experimenter_ ;
      /**
       * <pre>
       * Experimenter ID which takes the
       *same form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * Experimenter ID which takes the
       *same form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter ID which takes the
       *same form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_band_experimenter)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_band_experimenter)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_band_experimenter>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_band_experimenter>() {
      @java.lang.Override
      public ofp_meter_band_experimenter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_band_experimenter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_band_experimenter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_band_experimenter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_experimenter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_modOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_mod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPMC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
     */
    int getCommandValue();
    /**
     * <pre>
     * One of OFPMC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command getCommand();

    /**
     * <pre>
     * Bitmap of OFPMF_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 2;</code>
     */
    int getFlags();

    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 3;</code>
     */
    int getMeterId();

    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> 
        getBandsList();
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getBands(int index);
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    int getBandsCount();
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
        getBandsOrBuilderList();
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder getBandsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Meter configuration. OFPT_METER_MOD. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_mod}
   */
  public  static final class ofp_meter_mod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_mod)
      ofp_meter_modOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_mod.newBuilder() to construct.
    private ofp_meter_mod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_mod() {
      command_ = 0;
      bands_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_mod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_mod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              command_ = rawValue;
              break;
            }
            case 16: {

              flags_ = input.readUInt32();
              break;
            }
            case 24: {

              meterId_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                bands_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header>();
                mutable_bitField0_ |= 0x00000001;
              }
              bands_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          bands_ = java.util.Collections.unmodifiableList(bands_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_mod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_mod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder.class);
    }

    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_;
    /**
     * <pre>
     * One of OFPMC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
     */
    public int getCommandValue() {
      return command_;
    }
    /**
     * <pre>
     * One of OFPMC_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command getCommand() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command result = org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command.valueOf(command_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command.UNRECOGNIZED : result;
    }

    public static final int FLAGS_FIELD_NUMBER = 2;
    private int flags_;
    /**
     * <pre>
     * Bitmap of OFPMF_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 2;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int METER_ID_FIELD_NUMBER = 3;
    private int meterId_;
    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 3;</code>
     */
    public int getMeterId() {
      return meterId_;
    }

    public static final int BANDS_FIELD_NUMBER = 4;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> bands_;
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> getBandsList() {
      return bands_;
    }
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
        getBandsOrBuilderList() {
      return bands_;
    }
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    public int getBandsCount() {
      return bands_.size();
    }
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getBands(int index) {
      return bands_.get(index);
    }
    /**
     * <pre>
     * The band list length is
     *inferred from the length field
     *in the header. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder getBandsOrBuilder(
        int index) {
      return bands_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (command_ != org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command.OFPMC_ADD.getNumber()) {
        output.writeEnum(1, command_);
      }
      if (flags_ != 0) {
        output.writeUInt32(2, flags_);
      }
      if (meterId_ != 0) {
        output.writeUInt32(3, meterId_);
      }
      for (int i = 0; i < bands_.size(); i++) {
        output.writeMessage(4, bands_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (command_ != org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command.OFPMC_ADD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, command_);
      }
      if (flags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, flags_);
      }
      if (meterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, meterId_);
      }
      for (int i = 0; i < bands_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, bands_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod) obj;

      if (command_ != other.command_) return false;
      if (getFlags()
          != other.getFlags()) return false;
      if (getMeterId()
          != other.getMeterId()) return false;
      if (!getBandsList()
          .equals(other.getBandsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + command_;
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags();
      hash = (37 * hash) + METER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMeterId();
      if (getBandsCount() > 0) {
        hash = (37 * hash) + BANDS_FIELD_NUMBER;
        hash = (53 * hash) + getBandsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Meter configuration. OFPT_METER_MOD. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_mod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_mod)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_modOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_mod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_mod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBandsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        command_ = 0;

        flags_ = 0;

        meterId_ = 0;

        if (bandsBuilder_ == null) {
          bands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bandsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_mod_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod(this);
        int from_bitField0_ = bitField0_;
        result.command_ = command_;
        result.flags_ = flags_;
        result.meterId_ = meterId_;
        if (bandsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            bands_ = java.util.Collections.unmodifiableList(bands_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.bands_ = bands_;
        } else {
          result.bands_ = bandsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.getDefaultInstance()) return this;
        if (other.command_ != 0) {
          setCommandValue(other.getCommandValue());
        }
        if (other.getFlags() != 0) {
          setFlags(other.getFlags());
        }
        if (other.getMeterId() != 0) {
          setMeterId(other.getMeterId());
        }
        if (bandsBuilder_ == null) {
          if (!other.bands_.isEmpty()) {
            if (bands_.isEmpty()) {
              bands_ = other.bands_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBandsIsMutable();
              bands_.addAll(other.bands_);
            }
            onChanged();
          }
        } else {
          if (!other.bands_.isEmpty()) {
            if (bandsBuilder_.isEmpty()) {
              bandsBuilder_.dispose();
              bandsBuilder_ = null;
              bands_ = other.bands_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bandsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBandsFieldBuilder() : null;
            } else {
              bandsBuilder_.addAllMessages(other.bands_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int command_ = 0;
      /**
       * <pre>
       * One of OFPMC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
       */
      public int getCommandValue() {
        return command_;
      }
      /**
       * <pre>
       * One of OFPMC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
       */
      public Builder setCommandValue(int value) {
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPMC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command getCommand() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command result = org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command.valueOf(command_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPMC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
       */
      public Builder setCommand(org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod_command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPMC_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_meter_mod_command command = 1;</code>
       */
      public Builder clearCommand() {
        
        command_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <pre>
       * Bitmap of OFPMF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       * Bitmap of OFPMF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public Builder setFlags(int value) {
        
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPMF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public Builder clearFlags() {
        
        flags_ = 0;
        onChanged();
        return this;
      }

      private int meterId_ ;
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 3;</code>
       */
      public int getMeterId() {
        return meterId_;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 3;</code>
       */
      public Builder setMeterId(int value) {
        
        meterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 3;</code>
       */
      public Builder clearMeterId() {
        
        meterId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> bands_ =
        java.util.Collections.emptyList();
      private void ensureBandsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          bands_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header>(bands_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> bandsBuilder_;

      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> getBandsList() {
        if (bandsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bands_);
        } else {
          return bandsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public int getBandsCount() {
        if (bandsBuilder_ == null) {
          return bands_.size();
        } else {
          return bandsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getBands(int index) {
        if (bandsBuilder_ == null) {
          return bands_.get(index);
        } else {
          return bandsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder setBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header value) {
        if (bandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandsIsMutable();
          bands_.set(index, value);
          onChanged();
        } else {
          bandsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder setBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder builderForValue) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.set(index, builderForValue.build());
          onChanged();
        } else {
          bandsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder addBands(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header value) {
        if (bandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandsIsMutable();
          bands_.add(value);
          onChanged();
        } else {
          bandsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder addBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header value) {
        if (bandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandsIsMutable();
          bands_.add(index, value);
          onChanged();
        } else {
          bandsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder addBands(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder builderForValue) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.add(builderForValue.build());
          onChanged();
        } else {
          bandsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder addBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder builderForValue) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.add(index, builderForValue.build());
          onChanged();
        } else {
          bandsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder addAllBands(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> values) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bands_);
          onChanged();
        } else {
          bandsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder clearBands() {
        if (bandsBuilder_ == null) {
          bands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bandsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public Builder removeBands(int index) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.remove(index);
          onChanged();
        } else {
          bandsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder getBandsBuilder(
          int index) {
        return getBandsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder getBandsOrBuilder(
          int index) {
        if (bandsBuilder_ == null) {
          return bands_.get(index);  } else {
          return bandsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
           getBandsOrBuilderList() {
        if (bandsBuilder_ != null) {
          return bandsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bands_);
        }
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder addBandsBuilder() {
        return getBandsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.getDefaultInstance());
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder addBandsBuilder(
          int index) {
        return getBandsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.getDefaultInstance());
      }
      /**
       * <pre>
       * The band list length is
       *inferred from the length field
       *in the header. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder> 
           getBandsBuilderList() {
        return getBandsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
          getBandsFieldBuilder() {
        if (bandsBuilder_ == null) {
          bandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder>(
                  bands_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          bands_ = null;
        }
        return bandsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_mod)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_mod)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_mod>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_mod>() {
      @java.lang.Override
      public ofp_meter_mod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_mod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_mod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_mod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_error_msgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_error_msg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.ofp_header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.openflow_13.ofp_header header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_header getHeader();
    /**
     * <code>.openflow_13.ofp_header header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_headerOrBuilder getHeaderOrBuilder();

    /**
     * <code>uint32 type = 2;</code>
     */
    int getType();

    /**
     * <code>uint32 code = 3;</code>
     */
    int getCode();

    /**
     * <pre>
     * Variable-length data.  Interpreted based
     *on the type and code.  No padding. 
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * OFPT_ERROR: Error message (datapath -&gt; controller). 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_error_msg}
   */
  public  static final class ofp_error_msg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_error_msg)
      ofp_error_msgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_error_msg.newBuilder() to construct.
    private ofp_error_msg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_error_msg() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_error_msg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_error_msg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              type_ = input.readUInt32();
              break;
            }
            case 24: {

              code_ = input.readUInt32();
              break;
            }
            case 34: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_msg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_msg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.class, org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.ofp_header header_;
    /**
     * <code>.openflow_13.ofp_header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.openflow_13.ofp_header header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_header getHeader() {
      return header_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_header.getDefaultInstance() : header_;
    }
    /**
     * <code>.openflow_13.ofp_header header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_headerOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>uint32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int CODE_FIELD_NUMBER = 3;
    private int code_;
    /**
     * <code>uint32 code = 3;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Variable-length data.  Interpreted based
     *on the type and code.  No padding. 
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (type_ != 0) {
        output.writeUInt32(2, type_);
      }
      if (code_ != 0) {
        output.writeUInt32(3, code_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(4, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, type_);
      }
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, code_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_error_msg)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_error_msg other = (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (getType()
          != other.getType()) return false;
      if (getCode()
          != other.getCode()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_error_msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OFPT_ERROR: Error message (datapath -&gt; controller). 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_error_msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_error_msg)
        org.opencord.voltha.openflow13.Openflow13.ofp_error_msgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_msg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_msg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.class, org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        type_ = 0;

        code_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_msg_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_msg getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_msg build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_error_msg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_msg buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_error_msg result = new org.opencord.voltha.openflow13.Openflow13.ofp_error_msg(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        result.type_ = type_;
        result.code_ = code_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_error_msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_error_msg other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_error_msg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_header, org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_headerOrBuilder> headerBuilder_;
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public Builder setHeader(org.opencord.voltha.openflow13.Openflow13.ofp_header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public Builder setHeader(
          org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public Builder mergeHeader(org.opencord.voltha.openflow13.Openflow13.ofp_header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_headerOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.openflow_13.ofp_header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_header, org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_headerOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_header, org.opencord.voltha.openflow13.Openflow13.ofp_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_headerOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private int type_ ;
      /**
       * <code>uint32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>uint32 type = 2;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int code_ ;
      /**
       * <code>uint32 code = 3;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>uint32 code = 3;</code>
       */
      public Builder setCode(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 code = 3;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Variable-length data.  Interpreted based
       *on the type and code.  No padding. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Variable-length data.  Interpreted based
       *on the type and code.  No padding. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Variable-length data.  Interpreted based
       *on the type and code.  No padding. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_error_msg)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_error_msg)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_error_msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_error_msg();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_error_msg>
        PARSER = new com.google.protobuf.AbstractParser<ofp_error_msg>() {
      @java.lang.Override
      public ofp_error_msg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_error_msg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_error_msg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_error_msg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_error_msg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_error_experimenter_msgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_error_experimenter_msg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * OFPET_EXPERIMENTER. 
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 2;</code>
     */
    int getExpType();

    /**
     * <pre>
     * Experimenter ID which takes the same form
     *as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 3;</code>
     */
    int getExperimenter();

    /**
     * <pre>
     * Variable-length data.  Interpreted based
     *on the type and code.  No padding. 
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * OFPET_EXPERIMENTER: Error message (datapath -&gt; controller). 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_error_experimenter_msg}
   */
  public  static final class ofp_error_experimenter_msg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_error_experimenter_msg)
      ofp_error_experimenter_msgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_error_experimenter_msg.newBuilder() to construct.
    private ofp_error_experimenter_msg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_error_experimenter_msg() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_error_experimenter_msg();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_error_experimenter_msg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              type_ = input.readUInt32();
              break;
            }
            case 16: {

              expType_ = input.readUInt32();
              break;
            }
            case 24: {

              experimenter_ = input.readUInt32();
              break;
            }
            case 34: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_experimenter_msg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_experimenter_msg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg.class, org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * OFPET_EXPERIMENTER. 
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int EXP_TYPE_FIELD_NUMBER = 2;
    private int expType_;
    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 2;</code>
     */
    public int getExpType() {
      return expType_;
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 3;
    private int experimenter_;
    /**
     * <pre>
     * Experimenter ID which takes the same form
     *as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 3;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Variable-length data.  Interpreted based
     *on the type and code.  No padding. 
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (expType_ != 0) {
        output.writeUInt32(2, expType_);
      }
      if (experimenter_ != 0) {
        output.writeUInt32(3, experimenter_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(4, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (expType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, expType_);
      }
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, experimenter_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg other = (org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg) obj;

      if (getType()
          != other.getType()) return false;
      if (getExpType()
          != other.getExpType()) return false;
      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + EXP_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getExpType();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OFPET_EXPERIMENTER: Error message (datapath -&gt; controller). 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_error_experimenter_msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_error_experimenter_msg)
        org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_experimenter_msg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_experimenter_msg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg.class, org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        expType_ = 0;

        experimenter_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_error_experimenter_msg_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg result = new org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg(this);
        result.type_ = type_;
        result.expType_ = expType_;
        result.experimenter_ = experimenter_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getExpType() != 0) {
          setExpType(other.getExpType());
        }
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * OFPET_EXPERIMENTER. 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * OFPET_EXPERIMENTER. 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OFPET_EXPERIMENTER. 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int expType_ ;
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public int getExpType() {
        return expType_;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public Builder setExpType(int value) {
        
        expType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public Builder clearExpType() {
        
        expType_ = 0;
        onChanged();
        return this;
      }

      private int experimenter_ ;
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 3;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 3;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 3;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Variable-length data.  Interpreted based
       *on the type and code.  No padding. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Variable-length data.  Interpreted based
       *on the type and code.  No padding. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Variable-length data.  Interpreted based
       *on the type and code.  No padding. 
       * </pre>
       *
       * <code>bytes data = 4;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_error_experimenter_msg)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_error_experimenter_msg)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_error_experimenter_msg>
        PARSER = new com.google.protobuf.AbstractParser<ofp_error_experimenter_msg>() {
      @java.lang.Override
      public ofp_error_experimenter_msg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_error_experimenter_msg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_error_experimenter_msg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_error_experimenter_msg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_error_experimenter_msg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_multipart_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_multipart_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type getType();

    /**
     * <pre>
     * OFPMPF_REQ_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 2;</code>
     */
    int getFlags();

    /**
     * <pre>
     * Body of the request. 0 or more bytes. 
     * </pre>
     *
     * <code>bytes body = 3;</code>
     */
    com.google.protobuf.ByteString getBody();
  }
  /**
   * Protobuf type {@code openflow_13.ofp_multipart_request}
   */
  public  static final class ofp_multipart_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_multipart_request)
      ofp_multipart_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_multipart_request.newBuilder() to construct.
    private ofp_multipart_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_multipart_request() {
      type_ = 0;
      body_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_multipart_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_multipart_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              flags_ = input.readUInt32();
              break;
            }
            case 26: {

              body_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type result = org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.UNRECOGNIZED : result;
    }

    public static final int FLAGS_FIELD_NUMBER = 2;
    private int flags_;
    /**
     * <pre>
     * OFPMPF_REQ_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 2;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString body_;
    /**
     * <pre>
     * Body of the request. 0 or more bytes. 
     * </pre>
     *
     * <code>bytes body = 3;</code>
     */
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.OFPMP_DESC.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (flags_ != 0) {
        output.writeUInt32(2, flags_);
      }
      if (!body_.isEmpty()) {
        output.writeBytes(3, body_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.OFPMP_DESC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (flags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, flags_);
      }
      if (!body_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, body_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request) obj;

      if (type_ != other.type_) return false;
      if (getFlags()
          != other.getFlags()) return false;
      if (!getBody()
          .equals(other.getBody())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags();
      hash = (37 * hash) + BODY_FIELD_NUMBER;
      hash = (53 * hash) + getBody().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.ofp_multipart_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_multipart_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        flags_ = 0;

        body_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request(this);
        result.type_ = type_;
        result.flags_ = flags_;
        result.body_ = body_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getFlags() != 0) {
          setFlags(other.getFlags());
        }
        if (other.getBody() != com.google.protobuf.ByteString.EMPTY) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type result = org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <pre>
       * OFPMPF_REQ_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       * OFPMPF_REQ_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public Builder setFlags(int value) {
        
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OFPMPF_REQ_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public Builder clearFlags() {
        
        flags_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Body of the request. 0 or more bytes. 
       * </pre>
       *
       * <code>bytes body = 3;</code>
       */
      public com.google.protobuf.ByteString getBody() {
        return body_;
      }
      /**
       * <pre>
       * Body of the request. 0 or more bytes. 
       * </pre>
       *
       * <code>bytes body = 3;</code>
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        body_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Body of the request. 0 or more bytes. 
       * </pre>
       *
       * <code>bytes body = 3;</code>
       */
      public Builder clearBody() {
        
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_multipart_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_multipart_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_multipart_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_multipart_request>() {
      @java.lang.Override
      public ofp_multipart_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_multipart_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_multipart_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_multipart_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_multipart_replyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_multipart_reply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type getType();

    /**
     * <pre>
     * OFPMPF_REPLY_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 2;</code>
     */
    int getFlags();

    /**
     * <pre>
     * Body of the reply. 0 or more bytes. 
     * </pre>
     *
     * <code>bytes body = 3;</code>
     */
    com.google.protobuf.ByteString getBody();
  }
  /**
   * Protobuf type {@code openflow_13.ofp_multipart_reply}
   */
  public  static final class ofp_multipart_reply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_multipart_reply)
      ofp_multipart_replyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_multipart_reply.newBuilder() to construct.
    private ofp_multipart_reply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_multipart_reply() {
      type_ = 0;
      body_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_multipart_reply();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_multipart_reply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              flags_ = input.readUInt32();
              break;
            }
            case 26: {

              body_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_reply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_reply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply.class, org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>.openflow_13.ofp_multipart_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type result = org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.UNRECOGNIZED : result;
    }

    public static final int FLAGS_FIELD_NUMBER = 2;
    private int flags_;
    /**
     * <pre>
     * OFPMPF_REPLY_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 2;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString body_;
    /**
     * <pre>
     * Body of the reply. 0 or more bytes. 
     * </pre>
     *
     * <code>bytes body = 3;</code>
     */
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.OFPMP_DESC.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (flags_ != 0) {
        output.writeUInt32(2, flags_);
      }
      if (!body_.isEmpty()) {
        output.writeBytes(3, body_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.OFPMP_DESC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (flags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, flags_);
      }
      if (!body_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, body_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply other = (org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply) obj;

      if (type_ != other.type_) return false;
      if (getFlags()
          != other.getFlags()) return false;
      if (!getBody()
          .equals(other.getBody())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags();
      hash = (37 * hash) + BODY_FIELD_NUMBER;
      hash = (53 * hash) + getBody().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.ofp_multipart_reply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_multipart_reply)
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_replyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_reply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_reply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply.class, org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        flags_ = 0;

        body_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_multipart_reply_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply result = new org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply(this);
        result.type_ = type_;
        result.flags_ = flags_;
        result.body_ = body_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getFlags() != 0) {
          setFlags(other.getFlags());
        }
        if (other.getBody() != com.google.protobuf.ByteString.EMPTY) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type result = org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_multipart_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>.openflow_13.ofp_multipart_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <pre>
       * OFPMPF_REPLY_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       * OFPMPF_REPLY_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public Builder setFlags(int value) {
        
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OFPMPF_REPLY_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 2;</code>
       */
      public Builder clearFlags() {
        
        flags_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Body of the reply. 0 or more bytes. 
       * </pre>
       *
       * <code>bytes body = 3;</code>
       */
      public com.google.protobuf.ByteString getBody() {
        return body_;
      }
      /**
       * <pre>
       * Body of the reply. 0 or more bytes. 
       * </pre>
       *
       * <code>bytes body = 3;</code>
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        body_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Body of the reply. 0 or more bytes. 
       * </pre>
       *
       * <code>bytes body = 3;</code>
       */
      public Builder clearBody() {
        
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_multipart_reply)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_multipart_reply)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_multipart_reply>
        PARSER = new com.google.protobuf.AbstractParser<ofp_multipart_reply>() {
      @java.lang.Override
      public ofp_multipart_reply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_multipart_reply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_multipart_reply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_multipart_reply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_multipart_reply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_descOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_desc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Manufacturer description. 
     * </pre>
     *
     * <code>string mfr_desc = 1;</code>
     */
    java.lang.String getMfrDesc();
    /**
     * <pre>
     * Manufacturer description. 
     * </pre>
     *
     * <code>string mfr_desc = 1;</code>
     */
    com.google.protobuf.ByteString
        getMfrDescBytes();

    /**
     * <pre>
     * Hardware description. 
     * </pre>
     *
     * <code>string hw_desc = 2;</code>
     */
    java.lang.String getHwDesc();
    /**
     * <pre>
     * Hardware description. 
     * </pre>
     *
     * <code>string hw_desc = 2;</code>
     */
    com.google.protobuf.ByteString
        getHwDescBytes();

    /**
     * <pre>
     * Software description. 
     * </pre>
     *
     * <code>string sw_desc = 3;</code>
     */
    java.lang.String getSwDesc();
    /**
     * <pre>
     * Software description. 
     * </pre>
     *
     * <code>string sw_desc = 3;</code>
     */
    com.google.protobuf.ByteString
        getSwDescBytes();

    /**
     * <pre>
     * Serial number. 
     * </pre>
     *
     * <code>string serial_num = 4;</code>
     */
    java.lang.String getSerialNum();
    /**
     * <pre>
     * Serial number. 
     * </pre>
     *
     * <code>string serial_num = 4;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumBytes();

    /**
     * <pre>
     * Human readable description of datapath. 
     * </pre>
     *
     * <code>string dp_desc = 5;</code>
     */
    java.lang.String getDpDesc();
    /**
     * <pre>
     * Human readable description of datapath. 
     * </pre>
     *
     * <code>string dp_desc = 5;</code>
     */
    com.google.protobuf.ByteString
        getDpDescBytes();
  }
  /**
   * <pre>
   * Body of reply to OFPMP_DESC request.  Each entry is a NULL-terminated
   * ASCII string. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_desc}
   */
  public  static final class ofp_desc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_desc)
      ofp_descOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_desc.newBuilder() to construct.
    private ofp_desc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_desc() {
      mfrDesc_ = "";
      hwDesc_ = "";
      swDesc_ = "";
      serialNum_ = "";
      dpDesc_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_desc();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_desc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              mfrDesc_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              hwDesc_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              swDesc_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              serialNum_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              dpDesc_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_desc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_desc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_desc.class, org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder.class);
    }

    public static final int MFR_DESC_FIELD_NUMBER = 1;
    private volatile java.lang.Object mfrDesc_;
    /**
     * <pre>
     * Manufacturer description. 
     * </pre>
     *
     * <code>string mfr_desc = 1;</code>
     */
    public java.lang.String getMfrDesc() {
      java.lang.Object ref = mfrDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mfrDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Manufacturer description. 
     * </pre>
     *
     * <code>string mfr_desc = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMfrDescBytes() {
      java.lang.Object ref = mfrDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mfrDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HW_DESC_FIELD_NUMBER = 2;
    private volatile java.lang.Object hwDesc_;
    /**
     * <pre>
     * Hardware description. 
     * </pre>
     *
     * <code>string hw_desc = 2;</code>
     */
    public java.lang.String getHwDesc() {
      java.lang.Object ref = hwDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hwDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Hardware description. 
     * </pre>
     *
     * <code>string hw_desc = 2;</code>
     */
    public com.google.protobuf.ByteString
        getHwDescBytes() {
      java.lang.Object ref = hwDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hwDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SW_DESC_FIELD_NUMBER = 3;
    private volatile java.lang.Object swDesc_;
    /**
     * <pre>
     * Software description. 
     * </pre>
     *
     * <code>string sw_desc = 3;</code>
     */
    public java.lang.String getSwDesc() {
      java.lang.Object ref = swDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        swDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Software description. 
     * </pre>
     *
     * <code>string sw_desc = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSwDescBytes() {
      java.lang.Object ref = swDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        swDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIAL_NUM_FIELD_NUMBER = 4;
    private volatile java.lang.Object serialNum_;
    /**
     * <pre>
     * Serial number. 
     * </pre>
     *
     * <code>string serial_num = 4;</code>
     */
    public java.lang.String getSerialNum() {
      java.lang.Object ref = serialNum_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serialNum_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Serial number. 
     * </pre>
     *
     * <code>string serial_num = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumBytes() {
      java.lang.Object ref = serialNum_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DP_DESC_FIELD_NUMBER = 5;
    private volatile java.lang.Object dpDesc_;
    /**
     * <pre>
     * Human readable description of datapath. 
     * </pre>
     *
     * <code>string dp_desc = 5;</code>
     */
    public java.lang.String getDpDesc() {
      java.lang.Object ref = dpDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dpDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Human readable description of datapath. 
     * </pre>
     *
     * <code>string dp_desc = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDpDescBytes() {
      java.lang.Object ref = dpDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dpDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMfrDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mfrDesc_);
      }
      if (!getHwDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hwDesc_);
      }
      if (!getSwDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, swDesc_);
      }
      if (!getSerialNumBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serialNum_);
      }
      if (!getDpDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, dpDesc_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMfrDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mfrDesc_);
      }
      if (!getHwDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, hwDesc_);
      }
      if (!getSwDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, swDesc_);
      }
      if (!getSerialNumBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serialNum_);
      }
      if (!getDpDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, dpDesc_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_desc)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_desc other = (org.opencord.voltha.openflow13.Openflow13.ofp_desc) obj;

      if (!getMfrDesc()
          .equals(other.getMfrDesc())) return false;
      if (!getHwDesc()
          .equals(other.getHwDesc())) return false;
      if (!getSwDesc()
          .equals(other.getSwDesc())) return false;
      if (!getSerialNum()
          .equals(other.getSerialNum())) return false;
      if (!getDpDesc()
          .equals(other.getDpDesc())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MFR_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getMfrDesc().hashCode();
      hash = (37 * hash) + HW_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getHwDesc().hashCode();
      hash = (37 * hash) + SW_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getSwDesc().hashCode();
      hash = (37 * hash) + SERIAL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getSerialNum().hashCode();
      hash = (37 * hash) + DP_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getDpDesc().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_desc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_DESC request.  Each entry is a NULL-terminated
     * ASCII string. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_desc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_desc)
        org.opencord.voltha.openflow13.Openflow13.ofp_descOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_desc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_desc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_desc.class, org.opencord.voltha.openflow13.Openflow13.ofp_desc.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_desc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mfrDesc_ = "";

        hwDesc_ = "";

        swDesc_ = "";

        serialNum_ = "";

        dpDesc_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_desc_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_desc getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_desc.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_desc build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_desc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_desc buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_desc result = new org.opencord.voltha.openflow13.Openflow13.ofp_desc(this);
        result.mfrDesc_ = mfrDesc_;
        result.hwDesc_ = hwDesc_;
        result.swDesc_ = swDesc_;
        result.serialNum_ = serialNum_;
        result.dpDesc_ = dpDesc_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_desc) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_desc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_desc other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_desc.getDefaultInstance()) return this;
        if (!other.getMfrDesc().isEmpty()) {
          mfrDesc_ = other.mfrDesc_;
          onChanged();
        }
        if (!other.getHwDesc().isEmpty()) {
          hwDesc_ = other.hwDesc_;
          onChanged();
        }
        if (!other.getSwDesc().isEmpty()) {
          swDesc_ = other.swDesc_;
          onChanged();
        }
        if (!other.getSerialNum().isEmpty()) {
          serialNum_ = other.serialNum_;
          onChanged();
        }
        if (!other.getDpDesc().isEmpty()) {
          dpDesc_ = other.dpDesc_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_desc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_desc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object mfrDesc_ = "";
      /**
       * <pre>
       * Manufacturer description. 
       * </pre>
       *
       * <code>string mfr_desc = 1;</code>
       */
      public java.lang.String getMfrDesc() {
        java.lang.Object ref = mfrDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mfrDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Manufacturer description. 
       * </pre>
       *
       * <code>string mfr_desc = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMfrDescBytes() {
        java.lang.Object ref = mfrDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mfrDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Manufacturer description. 
       * </pre>
       *
       * <code>string mfr_desc = 1;</code>
       */
      public Builder setMfrDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mfrDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Manufacturer description. 
       * </pre>
       *
       * <code>string mfr_desc = 1;</code>
       */
      public Builder clearMfrDesc() {
        
        mfrDesc_ = getDefaultInstance().getMfrDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Manufacturer description. 
       * </pre>
       *
       * <code>string mfr_desc = 1;</code>
       */
      public Builder setMfrDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mfrDesc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object hwDesc_ = "";
      /**
       * <pre>
       * Hardware description. 
       * </pre>
       *
       * <code>string hw_desc = 2;</code>
       */
      public java.lang.String getHwDesc() {
        java.lang.Object ref = hwDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hwDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Hardware description. 
       * </pre>
       *
       * <code>string hw_desc = 2;</code>
       */
      public com.google.protobuf.ByteString
          getHwDescBytes() {
        java.lang.Object ref = hwDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hwDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Hardware description. 
       * </pre>
       *
       * <code>string hw_desc = 2;</code>
       */
      public Builder setHwDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hwDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hardware description. 
       * </pre>
       *
       * <code>string hw_desc = 2;</code>
       */
      public Builder clearHwDesc() {
        
        hwDesc_ = getDefaultInstance().getHwDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hardware description. 
       * </pre>
       *
       * <code>string hw_desc = 2;</code>
       */
      public Builder setHwDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hwDesc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object swDesc_ = "";
      /**
       * <pre>
       * Software description. 
       * </pre>
       *
       * <code>string sw_desc = 3;</code>
       */
      public java.lang.String getSwDesc() {
        java.lang.Object ref = swDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          swDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Software description. 
       * </pre>
       *
       * <code>string sw_desc = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSwDescBytes() {
        java.lang.Object ref = swDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          swDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Software description. 
       * </pre>
       *
       * <code>string sw_desc = 3;</code>
       */
      public Builder setSwDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        swDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Software description. 
       * </pre>
       *
       * <code>string sw_desc = 3;</code>
       */
      public Builder clearSwDesc() {
        
        swDesc_ = getDefaultInstance().getSwDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Software description. 
       * </pre>
       *
       * <code>string sw_desc = 3;</code>
       */
      public Builder setSwDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        swDesc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serialNum_ = "";
      /**
       * <pre>
       * Serial number. 
       * </pre>
       *
       * <code>string serial_num = 4;</code>
       */
      public java.lang.String getSerialNum() {
        java.lang.Object ref = serialNum_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serialNum_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Serial number. 
       * </pre>
       *
       * <code>string serial_num = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumBytes() {
        java.lang.Object ref = serialNum_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNum_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Serial number. 
       * </pre>
       *
       * <code>string serial_num = 4;</code>
       */
      public Builder setSerialNum(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serialNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Serial number. 
       * </pre>
       *
       * <code>string serial_num = 4;</code>
       */
      public Builder clearSerialNum() {
        
        serialNum_ = getDefaultInstance().getSerialNum();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Serial number. 
       * </pre>
       *
       * <code>string serial_num = 4;</code>
       */
      public Builder setSerialNumBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serialNum_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dpDesc_ = "";
      /**
       * <pre>
       * Human readable description of datapath. 
       * </pre>
       *
       * <code>string dp_desc = 5;</code>
       */
      public java.lang.String getDpDesc() {
        java.lang.Object ref = dpDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dpDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Human readable description of datapath. 
       * </pre>
       *
       * <code>string dp_desc = 5;</code>
       */
      public com.google.protobuf.ByteString
          getDpDescBytes() {
        java.lang.Object ref = dpDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dpDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Human readable description of datapath. 
       * </pre>
       *
       * <code>string dp_desc = 5;</code>
       */
      public Builder setDpDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dpDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human readable description of datapath. 
       * </pre>
       *
       * <code>string dp_desc = 5;</code>
       */
      public Builder clearDpDesc() {
        
        dpDesc_ = getDefaultInstance().getDpDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human readable description of datapath. 
       * </pre>
       *
       * <code>string dp_desc = 5;</code>
       */
      public Builder setDpDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dpDesc_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_desc)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_desc)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_desc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_desc();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_desc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_desc>
        PARSER = new com.google.protobuf.AbstractParser<ofp_desc>() {
      @java.lang.Override
      public ofp_desc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_desc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_desc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_desc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_desc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_flow_stats_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_flow_stats_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of table to read (from ofp_table_stats),
     *OFPTT_ALL for all tables. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    int getTableId();

    /**
     * <pre>
     * Require matching entries to include this
     *as an output port.  A value of OFPP_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_port = 2;</code>
     */
    int getOutPort();

    /**
     * <pre>
     * Require matching entries to include this
     *as an output group.  A value of OFPG_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_group = 3;</code>
     */
    int getOutGroup();

    /**
     * <pre>
     * Require matching entries to contain this
     *cookie value 
     * </pre>
     *
     * <code>uint64 cookie = 4;</code>
     */
    long getCookie();

    /**
     * <pre>
     * Mask used to restrict the cookie bits that
     *must match. A value of 0 indicates
     *no restriction. 
     * </pre>
     *
     * <code>uint64 cookie_mask = 5;</code>
     */
    long getCookieMask();

    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    boolean hasMatch();
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch();
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder();
  }
  /**
   * <pre>
   * Body for ofp_multipart_request of type OFPMP_FLOW. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_flow_stats_request}
   */
  public  static final class ofp_flow_stats_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_flow_stats_request)
      ofp_flow_stats_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_flow_stats_request.newBuilder() to construct.
    private ofp_flow_stats_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_flow_stats_request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_flow_stats_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_flow_stats_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readUInt32();
              break;
            }
            case 16: {

              outPort_ = input.readUInt32();
              break;
            }
            case 24: {

              outGroup_ = input.readUInt32();
              break;
            }
            case 32: {

              cookie_ = input.readUInt64();
              break;
            }
            case 40: {

              cookieMask_ = input.readUInt64();
              break;
            }
            case 50: {
              org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder subBuilder = null;
              if (match_ != null) {
                subBuilder = match_.toBuilder();
              }
              match_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_match.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(match_);
                match_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request.Builder.class);
    }

    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     * ID of table to read (from ofp_table_stats),
     *OFPTT_ALL for all tables. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int OUT_PORT_FIELD_NUMBER = 2;
    private int outPort_;
    /**
     * <pre>
     * Require matching entries to include this
     *as an output port.  A value of OFPP_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_port = 2;</code>
     */
    public int getOutPort() {
      return outPort_;
    }

    public static final int OUT_GROUP_FIELD_NUMBER = 3;
    private int outGroup_;
    /**
     * <pre>
     * Require matching entries to include this
     *as an output group.  A value of OFPG_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_group = 3;</code>
     */
    public int getOutGroup() {
      return outGroup_;
    }

    public static final int COOKIE_FIELD_NUMBER = 4;
    private long cookie_;
    /**
     * <pre>
     * Require matching entries to contain this
     *cookie value 
     * </pre>
     *
     * <code>uint64 cookie = 4;</code>
     */
    public long getCookie() {
      return cookie_;
    }

    public static final int COOKIE_MASK_FIELD_NUMBER = 5;
    private long cookieMask_;
    /**
     * <pre>
     * Mask used to restrict the cookie bits that
     *must match. A value of 0 indicates
     *no restriction. 
     * </pre>
     *
     * <code>uint64 cookie_mask = 5;</code>
     */
    public long getCookieMask() {
      return cookieMask_;
    }

    public static final int MATCH_FIELD_NUMBER = 6;
    private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    public boolean hasMatch() {
      return match_ != null;
    }
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
      return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
    }
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
      return getMatch();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeUInt32(1, tableId_);
      }
      if (outPort_ != 0) {
        output.writeUInt32(2, outPort_);
      }
      if (outGroup_ != 0) {
        output.writeUInt32(3, outGroup_);
      }
      if (cookie_ != 0L) {
        output.writeUInt64(4, cookie_);
      }
      if (cookieMask_ != 0L) {
        output.writeUInt64(5, cookieMask_);
      }
      if (match_ != null) {
        output.writeMessage(6, getMatch());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      if (outPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, outPort_);
      }
      if (outGroup_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, outGroup_);
      }
      if (cookie_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, cookie_);
      }
      if (cookieMask_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, cookieMask_);
      }
      if (match_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMatch());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request) obj;

      if (getTableId()
          != other.getTableId()) return false;
      if (getOutPort()
          != other.getOutPort()) return false;
      if (getOutGroup()
          != other.getOutGroup()) return false;
      if (getCookie()
          != other.getCookie()) return false;
      if (getCookieMask()
          != other.getCookieMask()) return false;
      if (hasMatch() != other.hasMatch()) return false;
      if (hasMatch()) {
        if (!getMatch()
            .equals(other.getMatch())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + OUT_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getOutPort();
      hash = (37 * hash) + OUT_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getOutGroup();
      hash = (37 * hash) + COOKIE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookie());
      hash = (37 * hash) + COOKIE_MASK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookieMask());
      if (hasMatch()) {
        hash = (37 * hash) + MATCH_FIELD_NUMBER;
        hash = (53 * hash) + getMatch().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body for ofp_multipart_request of type OFPMP_FLOW. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_flow_stats_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_flow_stats_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableId_ = 0;

        outPort_ = 0;

        outGroup_ = 0;

        cookie_ = 0L;

        cookieMask_ = 0L;

        if (matchBuilder_ == null) {
          match_ = null;
        } else {
          match_ = null;
          matchBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request(this);
        result.tableId_ = tableId_;
        result.outPort_ = outPort_;
        result.outGroup_ = outGroup_;
        result.cookie_ = cookie_;
        result.cookieMask_ = cookieMask_;
        if (matchBuilder_ == null) {
          result.match_ = match_;
        } else {
          result.match_ = matchBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request.getDefaultInstance()) return this;
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.getOutPort() != 0) {
          setOutPort(other.getOutPort());
        }
        if (other.getOutGroup() != 0) {
          setOutGroup(other.getOutGroup());
        }
        if (other.getCookie() != 0L) {
          setCookie(other.getCookie());
        }
        if (other.getCookieMask() != 0L) {
          setCookieMask(other.getCookieMask());
        }
        if (other.hasMatch()) {
          mergeMatch(other.getMatch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * ID of table to read (from ofp_table_stats),
       *OFPTT_ALL for all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * ID of table to read (from ofp_table_stats),
       *OFPTT_ALL for all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of table to read (from ofp_table_stats),
       *OFPTT_ALL for all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int outPort_ ;
      /**
       * <pre>
       * Require matching entries to include this
       *as an output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 2;</code>
       */
      public int getOutPort() {
        return outPort_;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 2;</code>
       */
      public Builder setOutPort(int value) {
        
        outPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 2;</code>
       */
      public Builder clearOutPort() {
        
        outPort_ = 0;
        onChanged();
        return this;
      }

      private int outGroup_ ;
      /**
       * <pre>
       * Require matching entries to include this
       *as an output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 3;</code>
       */
      public int getOutGroup() {
        return outGroup_;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 3;</code>
       */
      public Builder setOutGroup(int value) {
        
        outGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 3;</code>
       */
      public Builder clearOutGroup() {
        
        outGroup_ = 0;
        onChanged();
        return this;
      }

      private long cookie_ ;
      /**
       * <pre>
       * Require matching entries to contain this
       *cookie value 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public long getCookie() {
        return cookie_;
      }
      /**
       * <pre>
       * Require matching entries to contain this
       *cookie value 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public Builder setCookie(long value) {
        
        cookie_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Require matching entries to contain this
       *cookie value 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public Builder clearCookie() {
        
        cookie_ = 0L;
        onChanged();
        return this;
      }

      private long cookieMask_ ;
      /**
       * <pre>
       * Mask used to restrict the cookie bits that
       *must match. A value of 0 indicates
       *no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 5;</code>
       */
      public long getCookieMask() {
        return cookieMask_;
      }
      /**
       * <pre>
       * Mask used to restrict the cookie bits that
       *must match. A value of 0 indicates
       *no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 5;</code>
       */
      public Builder setCookieMask(long value) {
        
        cookieMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mask used to restrict the cookie bits that
       *must match. A value of 0 indicates
       *no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 5;</code>
       */
      public Builder clearCookieMask() {
        
        cookieMask_ = 0L;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> matchBuilder_;
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public boolean hasMatch() {
        return matchBuilder_ != null || match_ != null;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
        if (matchBuilder_ == null) {
          return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        } else {
          return matchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder setMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          match_ = value;
          onChanged();
        } else {
          matchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder setMatch(
          org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder builderForValue) {
        if (matchBuilder_ == null) {
          match_ = builderForValue.build();
          onChanged();
        } else {
          matchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder mergeMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (match_ != null) {
            match_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_match.newBuilder(match_).mergeFrom(value).buildPartial();
          } else {
            match_ = value;
          }
          onChanged();
        } else {
          matchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder clearMatch() {
        if (matchBuilder_ == null) {
          match_ = null;
          onChanged();
        } else {
          match_ = null;
          matchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder getMatchBuilder() {
        
        onChanged();
        return getMatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
        if (matchBuilder_ != null) {
          return matchBuilder_.getMessageOrBuilder();
        } else {
          return match_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        }
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> 
          getMatchFieldBuilder() {
        if (matchBuilder_ == null) {
          matchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder>(
                  getMatch(),
                  getParentForChildren(),
                  isClean());
          match_ = null;
        }
        return matchBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_flow_stats_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_flow_stats_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_flow_stats_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_flow_stats_request>() {
      @java.lang.Override
      public ofp_flow_stats_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_flow_stats_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_flow_stats_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_flow_stats_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_flow_statsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_flow_stats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique ID of flow within device. 
     * </pre>
     *
     * <code>uint64 id = 14;</code>
     */
    long getId();

    /**
     * <pre>
     * ID of table flow came from. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    int getTableId();

    /**
     * <pre>
     * Time flow has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 2;</code>
     */
    int getDurationSec();

    /**
     * <pre>
     * Time flow has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 3;</code>
     */
    int getDurationNsec();

    /**
     * <pre>
     * Priority of the entry. 
     * </pre>
     *
     * <code>uint32 priority = 4;</code>
     */
    int getPriority();

    /**
     * <pre>
     * Number of seconds idle before expiration. 
     * </pre>
     *
     * <code>uint32 idle_timeout = 5;</code>
     */
    int getIdleTimeout();

    /**
     * <pre>
     * Number of seconds before expiration. 
     * </pre>
     *
     * <code>uint32 hard_timeout = 6;</code>
     */
    int getHardTimeout();

    /**
     * <pre>
     * Bitmap of OFPFF_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 7;</code>
     */
    int getFlags();

    /**
     * <pre>
     * Opaque controller-issued identifier. 
     * </pre>
     *
     * <code>uint64 cookie = 8;</code>
     */
    long getCookie();

    /**
     * <pre>
     * Number of packets in flow. 
     * </pre>
     *
     * <code>uint64 packet_count = 9;</code>
     */
    long getPacketCount();

    /**
     * <pre>
     * Number of bytes in flow. 
     * </pre>
     *
     * <code>uint64 byte_count = 10;</code>
     */
    long getByteCount();

    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    boolean hasMatch();
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch();
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder();

    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> 
        getInstructionsList();
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index);
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    int getInstructionsCount();
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
        getInstructionsOrBuilderList();
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Body of reply to OFPMP_FLOW request. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_flow_stats}
   */
  public  static final class ofp_flow_stats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_flow_stats)
      ofp_flow_statsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_flow_stats.newBuilder() to construct.
    private ofp_flow_stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_flow_stats() {
      instructions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_flow_stats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_flow_stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readUInt32();
              break;
            }
            case 16: {

              durationSec_ = input.readUInt32();
              break;
            }
            case 24: {

              durationNsec_ = input.readUInt32();
              break;
            }
            case 32: {

              priority_ = input.readUInt32();
              break;
            }
            case 40: {

              idleTimeout_ = input.readUInt32();
              break;
            }
            case 48: {

              hardTimeout_ = input.readUInt32();
              break;
            }
            case 56: {

              flags_ = input.readUInt32();
              break;
            }
            case 64: {

              cookie_ = input.readUInt64();
              break;
            }
            case 72: {

              packetCount_ = input.readUInt64();
              break;
            }
            case 80: {

              byteCount_ = input.readUInt64();
              break;
            }
            case 98: {
              org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder subBuilder = null;
              if (match_ != null) {
                subBuilder = match_.toBuilder();
              }
              match_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_match.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(match_);
                match_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                instructions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_instruction>();
                mutable_bitField0_ |= 0x00000001;
              }
              instructions_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction.parser(), extensionRegistry));
              break;
            }
            case 112: {

              id_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          instructions_ = java.util.Collections.unmodifiableList(instructions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 14;
    private long id_;
    /**
     * <pre>
     * Unique ID of flow within device. 
     * </pre>
     *
     * <code>uint64 id = 14;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     * ID of table flow came from. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int DURATION_SEC_FIELD_NUMBER = 2;
    private int durationSec_;
    /**
     * <pre>
     * Time flow has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 2;</code>
     */
    public int getDurationSec() {
      return durationSec_;
    }

    public static final int DURATION_NSEC_FIELD_NUMBER = 3;
    private int durationNsec_;
    /**
     * <pre>
     * Time flow has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 3;</code>
     */
    public int getDurationNsec() {
      return durationNsec_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 4;
    private int priority_;
    /**
     * <pre>
     * Priority of the entry. 
     * </pre>
     *
     * <code>uint32 priority = 4;</code>
     */
    public int getPriority() {
      return priority_;
    }

    public static final int IDLE_TIMEOUT_FIELD_NUMBER = 5;
    private int idleTimeout_;
    /**
     * <pre>
     * Number of seconds idle before expiration. 
     * </pre>
     *
     * <code>uint32 idle_timeout = 5;</code>
     */
    public int getIdleTimeout() {
      return idleTimeout_;
    }

    public static final int HARD_TIMEOUT_FIELD_NUMBER = 6;
    private int hardTimeout_;
    /**
     * <pre>
     * Number of seconds before expiration. 
     * </pre>
     *
     * <code>uint32 hard_timeout = 6;</code>
     */
    public int getHardTimeout() {
      return hardTimeout_;
    }

    public static final int FLAGS_FIELD_NUMBER = 7;
    private int flags_;
    /**
     * <pre>
     * Bitmap of OFPFF_* flags. 
     * </pre>
     *
     * <code>uint32 flags = 7;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int COOKIE_FIELD_NUMBER = 8;
    private long cookie_;
    /**
     * <pre>
     * Opaque controller-issued identifier. 
     * </pre>
     *
     * <code>uint64 cookie = 8;</code>
     */
    public long getCookie() {
      return cookie_;
    }

    public static final int PACKET_COUNT_FIELD_NUMBER = 9;
    private long packetCount_;
    /**
     * <pre>
     * Number of packets in flow. 
     * </pre>
     *
     * <code>uint64 packet_count = 9;</code>
     */
    public long getPacketCount() {
      return packetCount_;
    }

    public static final int BYTE_COUNT_FIELD_NUMBER = 10;
    private long byteCount_;
    /**
     * <pre>
     * Number of bytes in flow. 
     * </pre>
     *
     * <code>uint64 byte_count = 10;</code>
     */
    public long getByteCount() {
      return byteCount_;
    }

    public static final int MATCH_FIELD_NUMBER = 12;
    private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    public boolean hasMatch() {
      return match_ != null;
    }
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
      return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
    }
    /**
     * <pre>
     * Description of fields. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 12;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
      return getMatch();
    }

    public static final int INSTRUCTIONS_FIELD_NUMBER = 13;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> instructions_;
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> getInstructionsList() {
      return instructions_;
    }
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
        getInstructionsOrBuilderList() {
      return instructions_;
    }
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public int getInstructionsCount() {
      return instructions_.size();
    }
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index) {
      return instructions_.get(index);
    }
    /**
     * <pre>
     * Instruction set
     *(0 or more) 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
        int index) {
      return instructions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeUInt32(1, tableId_);
      }
      if (durationSec_ != 0) {
        output.writeUInt32(2, durationSec_);
      }
      if (durationNsec_ != 0) {
        output.writeUInt32(3, durationNsec_);
      }
      if (priority_ != 0) {
        output.writeUInt32(4, priority_);
      }
      if (idleTimeout_ != 0) {
        output.writeUInt32(5, idleTimeout_);
      }
      if (hardTimeout_ != 0) {
        output.writeUInt32(6, hardTimeout_);
      }
      if (flags_ != 0) {
        output.writeUInt32(7, flags_);
      }
      if (cookie_ != 0L) {
        output.writeUInt64(8, cookie_);
      }
      if (packetCount_ != 0L) {
        output.writeUInt64(9, packetCount_);
      }
      if (byteCount_ != 0L) {
        output.writeUInt64(10, byteCount_);
      }
      if (match_ != null) {
        output.writeMessage(12, getMatch());
      }
      for (int i = 0; i < instructions_.size(); i++) {
        output.writeMessage(13, instructions_.get(i));
      }
      if (id_ != 0L) {
        output.writeUInt64(14, id_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      if (durationSec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, durationSec_);
      }
      if (durationNsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, durationNsec_);
      }
      if (priority_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, priority_);
      }
      if (idleTimeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, idleTimeout_);
      }
      if (hardTimeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, hardTimeout_);
      }
      if (flags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, flags_);
      }
      if (cookie_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, cookie_);
      }
      if (packetCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, packetCount_);
      }
      if (byteCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, byteCount_);
      }
      if (match_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getMatch());
      }
      for (int i = 0; i < instructions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, instructions_.get(i));
      }
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(14, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats other = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats) obj;

      if (getId()
          != other.getId()) return false;
      if (getTableId()
          != other.getTableId()) return false;
      if (getDurationSec()
          != other.getDurationSec()) return false;
      if (getDurationNsec()
          != other.getDurationNsec()) return false;
      if (getPriority()
          != other.getPriority()) return false;
      if (getIdleTimeout()
          != other.getIdleTimeout()) return false;
      if (getHardTimeout()
          != other.getHardTimeout()) return false;
      if (getFlags()
          != other.getFlags()) return false;
      if (getCookie()
          != other.getCookie()) return false;
      if (getPacketCount()
          != other.getPacketCount()) return false;
      if (getByteCount()
          != other.getByteCount()) return false;
      if (hasMatch() != other.hasMatch()) return false;
      if (hasMatch()) {
        if (!getMatch()
            .equals(other.getMatch())) return false;
      }
      if (!getInstructionsList()
          .equals(other.getInstructionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + DURATION_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationSec();
      hash = (37 * hash) + DURATION_NSEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationNsec();
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + getPriority();
      hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getIdleTimeout();
      hash = (37 * hash) + HARD_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getHardTimeout();
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags();
      hash = (37 * hash) + COOKIE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookie());
      hash = (37 * hash) + PACKET_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPacketCount());
      hash = (37 * hash) + BYTE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteCount());
      if (hasMatch()) {
        hash = (37 * hash) + MATCH_FIELD_NUMBER;
        hash = (53 * hash) + getMatch().hashCode();
      }
      if (getInstructionsCount() > 0) {
        hash = (37 * hash) + INSTRUCTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInstructionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_FLOW request. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_flow_stats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_flow_stats)
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInstructionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        tableId_ = 0;

        durationSec_ = 0;

        durationNsec_ = 0;

        priority_ = 0;

        idleTimeout_ = 0;

        hardTimeout_ = 0;

        flags_ = 0;

        cookie_ = 0L;

        packetCount_ = 0L;

        byteCount_ = 0L;

        if (matchBuilder_ == null) {
          match_ = null;
        } else {
          match_ = null;
          matchBuilder_ = null;
        }
        if (instructionsBuilder_ == null) {
          instructions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          instructionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_flow_stats_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats result = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.tableId_ = tableId_;
        result.durationSec_ = durationSec_;
        result.durationNsec_ = durationNsec_;
        result.priority_ = priority_;
        result.idleTimeout_ = idleTimeout_;
        result.hardTimeout_ = hardTimeout_;
        result.flags_ = flags_;
        result.cookie_ = cookie_;
        result.packetCount_ = packetCount_;
        result.byteCount_ = byteCount_;
        if (matchBuilder_ == null) {
          result.match_ = match_;
        } else {
          result.match_ = matchBuilder_.build();
        }
        if (instructionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            instructions_ = java.util.Collections.unmodifiableList(instructions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.instructions_ = instructions_;
        } else {
          result.instructions_ = instructionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.getDurationSec() != 0) {
          setDurationSec(other.getDurationSec());
        }
        if (other.getDurationNsec() != 0) {
          setDurationNsec(other.getDurationNsec());
        }
        if (other.getPriority() != 0) {
          setPriority(other.getPriority());
        }
        if (other.getIdleTimeout() != 0) {
          setIdleTimeout(other.getIdleTimeout());
        }
        if (other.getHardTimeout() != 0) {
          setHardTimeout(other.getHardTimeout());
        }
        if (other.getFlags() != 0) {
          setFlags(other.getFlags());
        }
        if (other.getCookie() != 0L) {
          setCookie(other.getCookie());
        }
        if (other.getPacketCount() != 0L) {
          setPacketCount(other.getPacketCount());
        }
        if (other.getByteCount() != 0L) {
          setByteCount(other.getByteCount());
        }
        if (other.hasMatch()) {
          mergeMatch(other.getMatch());
        }
        if (instructionsBuilder_ == null) {
          if (!other.instructions_.isEmpty()) {
            if (instructions_.isEmpty()) {
              instructions_ = other.instructions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInstructionsIsMutable();
              instructions_.addAll(other.instructions_);
            }
            onChanged();
          }
        } else {
          if (!other.instructions_.isEmpty()) {
            if (instructionsBuilder_.isEmpty()) {
              instructionsBuilder_.dispose();
              instructionsBuilder_ = null;
              instructions_ = other.instructions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              instructionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInstructionsFieldBuilder() : null;
            } else {
              instructionsBuilder_.addAllMessages(other.instructions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * Unique ID of flow within device. 
       * </pre>
       *
       * <code>uint64 id = 14;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * Unique ID of flow within device. 
       * </pre>
       *
       * <code>uint64 id = 14;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ID of flow within device. 
       * </pre>
       *
       * <code>uint64 id = 14;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * ID of table flow came from. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * ID of table flow came from. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of table flow came from. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int durationSec_ ;
      /**
       * <pre>
       * Time flow has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 2;</code>
       */
      public int getDurationSec() {
        return durationSec_;
      }
      /**
       * <pre>
       * Time flow has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 2;</code>
       */
      public Builder setDurationSec(int value) {
        
        durationSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time flow has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 2;</code>
       */
      public Builder clearDurationSec() {
        
        durationSec_ = 0;
        onChanged();
        return this;
      }

      private int durationNsec_ ;
      /**
       * <pre>
       * Time flow has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 3;</code>
       */
      public int getDurationNsec() {
        return durationNsec_;
      }
      /**
       * <pre>
       * Time flow has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 3;</code>
       */
      public Builder setDurationNsec(int value) {
        
        durationNsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time flow has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 3;</code>
       */
      public Builder clearDurationNsec() {
        
        durationNsec_ = 0;
        onChanged();
        return this;
      }

      private int priority_ ;
      /**
       * <pre>
       * Priority of the entry. 
       * </pre>
       *
       * <code>uint32 priority = 4;</code>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <pre>
       * Priority of the entry. 
       * </pre>
       *
       * <code>uint32 priority = 4;</code>
       */
      public Builder setPriority(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority of the entry. 
       * </pre>
       *
       * <code>uint32 priority = 4;</code>
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private int idleTimeout_ ;
      /**
       * <pre>
       * Number of seconds idle before expiration. 
       * </pre>
       *
       * <code>uint32 idle_timeout = 5;</code>
       */
      public int getIdleTimeout() {
        return idleTimeout_;
      }
      /**
       * <pre>
       * Number of seconds idle before expiration. 
       * </pre>
       *
       * <code>uint32 idle_timeout = 5;</code>
       */
      public Builder setIdleTimeout(int value) {
        
        idleTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of seconds idle before expiration. 
       * </pre>
       *
       * <code>uint32 idle_timeout = 5;</code>
       */
      public Builder clearIdleTimeout() {
        
        idleTimeout_ = 0;
        onChanged();
        return this;
      }

      private int hardTimeout_ ;
      /**
       * <pre>
       * Number of seconds before expiration. 
       * </pre>
       *
       * <code>uint32 hard_timeout = 6;</code>
       */
      public int getHardTimeout() {
        return hardTimeout_;
      }
      /**
       * <pre>
       * Number of seconds before expiration. 
       * </pre>
       *
       * <code>uint32 hard_timeout = 6;</code>
       */
      public Builder setHardTimeout(int value) {
        
        hardTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of seconds before expiration. 
       * </pre>
       *
       * <code>uint32 hard_timeout = 6;</code>
       */
      public Builder clearHardTimeout() {
        
        hardTimeout_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <pre>
       * Bitmap of OFPFF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 7;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       * Bitmap of OFPFF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 7;</code>
       */
      public Builder setFlags(int value) {
        
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPFF_* flags. 
       * </pre>
       *
       * <code>uint32 flags = 7;</code>
       */
      public Builder clearFlags() {
        
        flags_ = 0;
        onChanged();
        return this;
      }

      private long cookie_ ;
      /**
       * <pre>
       * Opaque controller-issued identifier. 
       * </pre>
       *
       * <code>uint64 cookie = 8;</code>
       */
      public long getCookie() {
        return cookie_;
      }
      /**
       * <pre>
       * Opaque controller-issued identifier. 
       * </pre>
       *
       * <code>uint64 cookie = 8;</code>
       */
      public Builder setCookie(long value) {
        
        cookie_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Opaque controller-issued identifier. 
       * </pre>
       *
       * <code>uint64 cookie = 8;</code>
       */
      public Builder clearCookie() {
        
        cookie_ = 0L;
        onChanged();
        return this;
      }

      private long packetCount_ ;
      /**
       * <pre>
       * Number of packets in flow. 
       * </pre>
       *
       * <code>uint64 packet_count = 9;</code>
       */
      public long getPacketCount() {
        return packetCount_;
      }
      /**
       * <pre>
       * Number of packets in flow. 
       * </pre>
       *
       * <code>uint64 packet_count = 9;</code>
       */
      public Builder setPacketCount(long value) {
        
        packetCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets in flow. 
       * </pre>
       *
       * <code>uint64 packet_count = 9;</code>
       */
      public Builder clearPacketCount() {
        
        packetCount_ = 0L;
        onChanged();
        return this;
      }

      private long byteCount_ ;
      /**
       * <pre>
       * Number of bytes in flow. 
       * </pre>
       *
       * <code>uint64 byte_count = 10;</code>
       */
      public long getByteCount() {
        return byteCount_;
      }
      /**
       * <pre>
       * Number of bytes in flow. 
       * </pre>
       *
       * <code>uint64 byte_count = 10;</code>
       */
      public Builder setByteCount(long value) {
        
        byteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of bytes in flow. 
       * </pre>
       *
       * <code>uint64 byte_count = 10;</code>
       */
      public Builder clearByteCount() {
        
        byteCount_ = 0L;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> matchBuilder_;
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public boolean hasMatch() {
        return matchBuilder_ != null || match_ != null;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
        if (matchBuilder_ == null) {
          return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        } else {
          return matchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder setMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          match_ = value;
          onChanged();
        } else {
          matchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder setMatch(
          org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder builderForValue) {
        if (matchBuilder_ == null) {
          match_ = builderForValue.build();
          onChanged();
        } else {
          matchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder mergeMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (match_ != null) {
            match_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_match.newBuilder(match_).mergeFrom(value).buildPartial();
          } else {
            match_ = value;
          }
          onChanged();
        } else {
          matchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public Builder clearMatch() {
        if (matchBuilder_ == null) {
          match_ = null;
          onChanged();
        } else {
          match_ = null;
          matchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder getMatchBuilder() {
        
        onChanged();
        return getMatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
        if (matchBuilder_ != null) {
          return matchBuilder_.getMessageOrBuilder();
        } else {
          return match_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        }
      }
      /**
       * <pre>
       * Description of fields. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> 
          getMatchFieldBuilder() {
        if (matchBuilder_ == null) {
          matchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder>(
                  getMatch(),
                  getParentForChildren(),
                  isClean());
          match_ = null;
        }
        return matchBuilder_;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> instructions_ =
        java.util.Collections.emptyList();
      private void ensureInstructionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          instructions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_instruction>(instructions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> instructionsBuilder_;

      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> getInstructionsList() {
        if (instructionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(instructions_);
        } else {
          return instructionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public int getInstructionsCount() {
        if (instructionsBuilder_ == null) {
          return instructions_.size();
        } else {
          return instructionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index) {
        if (instructionsBuilder_ == null) {
          return instructions_.get(index);
        } else {
          return instructionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder setInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.set(index, value);
          onChanged();
        } else {
          instructionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder setInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.set(index, builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.add(value);
          onChanged();
        } else {
          instructionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.add(index, value);
          onChanged();
        } else {
          instructionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.add(builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.add(index, builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder addAllInstructions(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instruction> values) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, instructions_);
          onChanged();
        } else {
          instructionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder clearInstructions() {
        if (instructionsBuilder_ == null) {
          instructions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          instructionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public Builder removeInstructions(int index) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.remove(index);
          onChanged();
        } else {
          instructionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder getInstructionsBuilder(
          int index) {
        return getInstructionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
          int index) {
        if (instructionsBuilder_ == null) {
          return instructions_.get(index);  } else {
          return instructionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
           getInstructionsOrBuilderList() {
        if (instructionsBuilder_ != null) {
          return instructionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(instructions_);
        }
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder addInstructionsBuilder() {
        return getInstructionsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance());
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder addInstructionsBuilder(
          int index) {
        return getInstructionsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance());
      }
      /**
       * <pre>
       * Instruction set
       *(0 or more) 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 13;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder> 
           getInstructionsBuilderList() {
        return getInstructionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
          getInstructionsFieldBuilder() {
        if (instructionsBuilder_ == null) {
          instructionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder>(
                  instructions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          instructions_ = null;
        }
        return instructionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_flow_stats)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_flow_stats)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_flow_stats>
        PARSER = new com.google.protobuf.AbstractParser<ofp_flow_stats>() {
      @java.lang.Override
      public ofp_flow_stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_flow_stats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_flow_stats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_flow_stats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_aggregate_stats_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_aggregate_stats_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of table to read (from ofp_table_stats)
     *OFPTT_ALL for all tables. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    int getTableId();

    /**
     * <pre>
     * Require matching entries to include this
     *as an output port.  A value of OFPP_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_port = 2;</code>
     */
    int getOutPort();

    /**
     * <pre>
     * Require matching entries to include this
     *as an output group.  A value of OFPG_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_group = 3;</code>
     */
    int getOutGroup();

    /**
     * <pre>
     * Require matching entries to contain this
     *cookie value 
     * </pre>
     *
     * <code>uint64 cookie = 4;</code>
     */
    long getCookie();

    /**
     * <pre>
     * Mask used to restrict the cookie bits that
     *must match. A value of 0 indicates
     *no restriction. 
     * </pre>
     *
     * <code>uint64 cookie_mask = 5;</code>
     */
    long getCookieMask();

    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    boolean hasMatch();
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch();
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder();
  }
  /**
   * <pre>
   * Body for ofp_multipart_request of type OFPMP_AGGREGATE. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_aggregate_stats_request}
   */
  public  static final class ofp_aggregate_stats_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_aggregate_stats_request)
      ofp_aggregate_stats_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_aggregate_stats_request.newBuilder() to construct.
    private ofp_aggregate_stats_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_aggregate_stats_request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_aggregate_stats_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_aggregate_stats_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readUInt32();
              break;
            }
            case 16: {

              outPort_ = input.readUInt32();
              break;
            }
            case 24: {

              outGroup_ = input.readUInt32();
              break;
            }
            case 32: {

              cookie_ = input.readUInt64();
              break;
            }
            case 40: {

              cookieMask_ = input.readUInt64();
              break;
            }
            case 50: {
              org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder subBuilder = null;
              if (match_ != null) {
                subBuilder = match_.toBuilder();
              }
              match_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_match.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(match_);
                match_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request.Builder.class);
    }

    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     * ID of table to read (from ofp_table_stats)
     *OFPTT_ALL for all tables. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int OUT_PORT_FIELD_NUMBER = 2;
    private int outPort_;
    /**
     * <pre>
     * Require matching entries to include this
     *as an output port.  A value of OFPP_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_port = 2;</code>
     */
    public int getOutPort() {
      return outPort_;
    }

    public static final int OUT_GROUP_FIELD_NUMBER = 3;
    private int outGroup_;
    /**
     * <pre>
     * Require matching entries to include this
     *as an output group.  A value of OFPG_ANY
     *indicates no restriction. 
     * </pre>
     *
     * <code>uint32 out_group = 3;</code>
     */
    public int getOutGroup() {
      return outGroup_;
    }

    public static final int COOKIE_FIELD_NUMBER = 4;
    private long cookie_;
    /**
     * <pre>
     * Require matching entries to contain this
     *cookie value 
     * </pre>
     *
     * <code>uint64 cookie = 4;</code>
     */
    public long getCookie() {
      return cookie_;
    }

    public static final int COOKIE_MASK_FIELD_NUMBER = 5;
    private long cookieMask_;
    /**
     * <pre>
     * Mask used to restrict the cookie bits that
     *must match. A value of 0 indicates
     *no restriction. 
     * </pre>
     *
     * <code>uint64 cookie_mask = 5;</code>
     */
    public long getCookieMask() {
      return cookieMask_;
    }

    public static final int MATCH_FIELD_NUMBER = 6;
    private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    public boolean hasMatch() {
      return match_ != null;
    }
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
      return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
    }
    /**
     * <pre>
     * Fields to match. Variable size. 
     * </pre>
     *
     * <code>.openflow_13.ofp_match match = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
      return getMatch();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeUInt32(1, tableId_);
      }
      if (outPort_ != 0) {
        output.writeUInt32(2, outPort_);
      }
      if (outGroup_ != 0) {
        output.writeUInt32(3, outGroup_);
      }
      if (cookie_ != 0L) {
        output.writeUInt64(4, cookie_);
      }
      if (cookieMask_ != 0L) {
        output.writeUInt64(5, cookieMask_);
      }
      if (match_ != null) {
        output.writeMessage(6, getMatch());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      if (outPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, outPort_);
      }
      if (outGroup_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, outGroup_);
      }
      if (cookie_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, cookie_);
      }
      if (cookieMask_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, cookieMask_);
      }
      if (match_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMatch());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request) obj;

      if (getTableId()
          != other.getTableId()) return false;
      if (getOutPort()
          != other.getOutPort()) return false;
      if (getOutGroup()
          != other.getOutGroup()) return false;
      if (getCookie()
          != other.getCookie()) return false;
      if (getCookieMask()
          != other.getCookieMask()) return false;
      if (hasMatch() != other.hasMatch()) return false;
      if (hasMatch()) {
        if (!getMatch()
            .equals(other.getMatch())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + OUT_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getOutPort();
      hash = (37 * hash) + OUT_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getOutGroup();
      hash = (37 * hash) + COOKIE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookie());
      hash = (37 * hash) + COOKIE_MASK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCookieMask());
      if (hasMatch()) {
        hash = (37 * hash) + MATCH_FIELD_NUMBER;
        hash = (53 * hash) + getMatch().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body for ofp_multipart_request of type OFPMP_AGGREGATE. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_aggregate_stats_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_aggregate_stats_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableId_ = 0;

        outPort_ = 0;

        outGroup_ = 0;

        cookie_ = 0L;

        cookieMask_ = 0L;

        if (matchBuilder_ == null) {
          match_ = null;
        } else {
          match_ = null;
          matchBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request(this);
        result.tableId_ = tableId_;
        result.outPort_ = outPort_;
        result.outGroup_ = outGroup_;
        result.cookie_ = cookie_;
        result.cookieMask_ = cookieMask_;
        if (matchBuilder_ == null) {
          result.match_ = match_;
        } else {
          result.match_ = matchBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request.getDefaultInstance()) return this;
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.getOutPort() != 0) {
          setOutPort(other.getOutPort());
        }
        if (other.getOutGroup() != 0) {
          setOutGroup(other.getOutGroup());
        }
        if (other.getCookie() != 0L) {
          setCookie(other.getCookie());
        }
        if (other.getCookieMask() != 0L) {
          setCookieMask(other.getCookieMask());
        }
        if (other.hasMatch()) {
          mergeMatch(other.getMatch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * ID of table to read (from ofp_table_stats)
       *OFPTT_ALL for all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * ID of table to read (from ofp_table_stats)
       *OFPTT_ALL for all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of table to read (from ofp_table_stats)
       *OFPTT_ALL for all tables. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int outPort_ ;
      /**
       * <pre>
       * Require matching entries to include this
       *as an output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 2;</code>
       */
      public int getOutPort() {
        return outPort_;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 2;</code>
       */
      public Builder setOutPort(int value) {
        
        outPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output port.  A value of OFPP_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_port = 2;</code>
       */
      public Builder clearOutPort() {
        
        outPort_ = 0;
        onChanged();
        return this;
      }

      private int outGroup_ ;
      /**
       * <pre>
       * Require matching entries to include this
       *as an output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 3;</code>
       */
      public int getOutGroup() {
        return outGroup_;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 3;</code>
       */
      public Builder setOutGroup(int value) {
        
        outGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Require matching entries to include this
       *as an output group.  A value of OFPG_ANY
       *indicates no restriction. 
       * </pre>
       *
       * <code>uint32 out_group = 3;</code>
       */
      public Builder clearOutGroup() {
        
        outGroup_ = 0;
        onChanged();
        return this;
      }

      private long cookie_ ;
      /**
       * <pre>
       * Require matching entries to contain this
       *cookie value 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public long getCookie() {
        return cookie_;
      }
      /**
       * <pre>
       * Require matching entries to contain this
       *cookie value 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public Builder setCookie(long value) {
        
        cookie_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Require matching entries to contain this
       *cookie value 
       * </pre>
       *
       * <code>uint64 cookie = 4;</code>
       */
      public Builder clearCookie() {
        
        cookie_ = 0L;
        onChanged();
        return this;
      }

      private long cookieMask_ ;
      /**
       * <pre>
       * Mask used to restrict the cookie bits that
       *must match. A value of 0 indicates
       *no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 5;</code>
       */
      public long getCookieMask() {
        return cookieMask_;
      }
      /**
       * <pre>
       * Mask used to restrict the cookie bits that
       *must match. A value of 0 indicates
       *no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 5;</code>
       */
      public Builder setCookieMask(long value) {
        
        cookieMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mask used to restrict the cookie bits that
       *must match. A value of 0 indicates
       *no restriction. 
       * </pre>
       *
       * <code>uint64 cookie_mask = 5;</code>
       */
      public Builder clearCookieMask() {
        
        cookieMask_ = 0L;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_match match_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> matchBuilder_;
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public boolean hasMatch() {
        return matchBuilder_ != null || match_ != null;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match getMatch() {
        if (matchBuilder_ == null) {
          return match_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        } else {
          return matchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder setMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          match_ = value;
          onChanged();
        } else {
          matchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder setMatch(
          org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder builderForValue) {
        if (matchBuilder_ == null) {
          match_ = builderForValue.build();
          onChanged();
        } else {
          matchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder mergeMatch(org.opencord.voltha.openflow13.Openflow13.ofp_match value) {
        if (matchBuilder_ == null) {
          if (match_ != null) {
            match_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_match.newBuilder(match_).mergeFrom(value).buildPartial();
          } else {
            match_ = value;
          }
          onChanged();
        } else {
          matchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public Builder clearMatch() {
        if (matchBuilder_ == null) {
          match_ = null;
          onChanged();
        } else {
          match_ = null;
          matchBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder getMatchBuilder() {
        
        onChanged();
        return getMatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder getMatchOrBuilder() {
        if (matchBuilder_ != null) {
          return matchBuilder_.getMessageOrBuilder();
        } else {
          return match_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_match.getDefaultInstance() : match_;
        }
      }
      /**
       * <pre>
       * Fields to match. Variable size. 
       * </pre>
       *
       * <code>.openflow_13.ofp_match match = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder> 
          getMatchFieldBuilder() {
        if (matchBuilder_ == null) {
          matchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_match, org.opencord.voltha.openflow13.Openflow13.ofp_match.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_matchOrBuilder>(
                  getMatch(),
                  getParentForChildren(),
                  isClean());
          match_ = null;
        }
        return matchBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_aggregate_stats_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_aggregate_stats_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_aggregate_stats_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_aggregate_stats_request>() {
      @java.lang.Override
      public ofp_aggregate_stats_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_aggregate_stats_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_aggregate_stats_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_aggregate_stats_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_aggregate_stats_replyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_aggregate_stats_reply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of packets in flows. 
     * </pre>
     *
     * <code>uint64 packet_count = 1;</code>
     */
    long getPacketCount();

    /**
     * <pre>
     * Number of bytes in flows. 
     * </pre>
     *
     * <code>uint64 byte_count = 2;</code>
     */
    long getByteCount();

    /**
     * <pre>
     * Number of flows. 
     * </pre>
     *
     * <code>uint32 flow_count = 3;</code>
     */
    int getFlowCount();
  }
  /**
   * <pre>
   * Body of reply to OFPMP_AGGREGATE request. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_aggregate_stats_reply}
   */
  public  static final class ofp_aggregate_stats_reply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_aggregate_stats_reply)
      ofp_aggregate_stats_replyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_aggregate_stats_reply.newBuilder() to construct.
    private ofp_aggregate_stats_reply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_aggregate_stats_reply() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_aggregate_stats_reply();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_aggregate_stats_reply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              packetCount_ = input.readUInt64();
              break;
            }
            case 16: {

              byteCount_ = input.readUInt64();
              break;
            }
            case 24: {

              flowCount_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_reply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_reply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply.class, org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply.Builder.class);
    }

    public static final int PACKET_COUNT_FIELD_NUMBER = 1;
    private long packetCount_;
    /**
     * <pre>
     * Number of packets in flows. 
     * </pre>
     *
     * <code>uint64 packet_count = 1;</code>
     */
    public long getPacketCount() {
      return packetCount_;
    }

    public static final int BYTE_COUNT_FIELD_NUMBER = 2;
    private long byteCount_;
    /**
     * <pre>
     * Number of bytes in flows. 
     * </pre>
     *
     * <code>uint64 byte_count = 2;</code>
     */
    public long getByteCount() {
      return byteCount_;
    }

    public static final int FLOW_COUNT_FIELD_NUMBER = 3;
    private int flowCount_;
    /**
     * <pre>
     * Number of flows. 
     * </pre>
     *
     * <code>uint32 flow_count = 3;</code>
     */
    public int getFlowCount() {
      return flowCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (packetCount_ != 0L) {
        output.writeUInt64(1, packetCount_);
      }
      if (byteCount_ != 0L) {
        output.writeUInt64(2, byteCount_);
      }
      if (flowCount_ != 0) {
        output.writeUInt32(3, flowCount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (packetCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, packetCount_);
      }
      if (byteCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, byteCount_);
      }
      if (flowCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, flowCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply other = (org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply) obj;

      if (getPacketCount()
          != other.getPacketCount()) return false;
      if (getByteCount()
          != other.getByteCount()) return false;
      if (getFlowCount()
          != other.getFlowCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PACKET_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPacketCount());
      hash = (37 * hash) + BYTE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteCount());
      hash = (37 * hash) + FLOW_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getFlowCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_AGGREGATE request. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_aggregate_stats_reply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_aggregate_stats_reply)
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_replyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_reply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_reply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply.class, org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        packetCount_ = 0L;

        byteCount_ = 0L;

        flowCount_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_aggregate_stats_reply_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply result = new org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply(this);
        result.packetCount_ = packetCount_;
        result.byteCount_ = byteCount_;
        result.flowCount_ = flowCount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply.getDefaultInstance()) return this;
        if (other.getPacketCount() != 0L) {
          setPacketCount(other.getPacketCount());
        }
        if (other.getByteCount() != 0L) {
          setByteCount(other.getByteCount());
        }
        if (other.getFlowCount() != 0) {
          setFlowCount(other.getFlowCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long packetCount_ ;
      /**
       * <pre>
       * Number of packets in flows. 
       * </pre>
       *
       * <code>uint64 packet_count = 1;</code>
       */
      public long getPacketCount() {
        return packetCount_;
      }
      /**
       * <pre>
       * Number of packets in flows. 
       * </pre>
       *
       * <code>uint64 packet_count = 1;</code>
       */
      public Builder setPacketCount(long value) {
        
        packetCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets in flows. 
       * </pre>
       *
       * <code>uint64 packet_count = 1;</code>
       */
      public Builder clearPacketCount() {
        
        packetCount_ = 0L;
        onChanged();
        return this;
      }

      private long byteCount_ ;
      /**
       * <pre>
       * Number of bytes in flows. 
       * </pre>
       *
       * <code>uint64 byte_count = 2;</code>
       */
      public long getByteCount() {
        return byteCount_;
      }
      /**
       * <pre>
       * Number of bytes in flows. 
       * </pre>
       *
       * <code>uint64 byte_count = 2;</code>
       */
      public Builder setByteCount(long value) {
        
        byteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of bytes in flows. 
       * </pre>
       *
       * <code>uint64 byte_count = 2;</code>
       */
      public Builder clearByteCount() {
        
        byteCount_ = 0L;
        onChanged();
        return this;
      }

      private int flowCount_ ;
      /**
       * <pre>
       * Number of flows. 
       * </pre>
       *
       * <code>uint32 flow_count = 3;</code>
       */
      public int getFlowCount() {
        return flowCount_;
      }
      /**
       * <pre>
       * Number of flows. 
       * </pre>
       *
       * <code>uint32 flow_count = 3;</code>
       */
      public Builder setFlowCount(int value) {
        
        flowCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of flows. 
       * </pre>
       *
       * <code>uint32 flow_count = 3;</code>
       */
      public Builder clearFlowCount() {
        
        flowCount_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_aggregate_stats_reply)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_aggregate_stats_reply)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_aggregate_stats_reply>
        PARSER = new com.google.protobuf.AbstractParser<ofp_aggregate_stats_reply>() {
      @java.lang.Override
      public ofp_aggregate_stats_reply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_aggregate_stats_reply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_aggregate_stats_reply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_aggregate_stats_reply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_aggregate_stats_reply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_feature_propertyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_feature_property)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPTFPT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of OFPTFPT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type getType();

    /**
     * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
     */
    boolean hasInstructions();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions getInstructions();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructionsOrBuilder getInstructionsOrBuilder();

    /**
     * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
     */
    boolean hasNextTables();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables getNextTables();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tablesOrBuilder getNextTablesOrBuilder();

    /**
     * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
     */
    boolean hasActions();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions getActions();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actionsOrBuilder getActionsOrBuilder();

    /**
     * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
     */
    boolean hasOxm();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm getOxm();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxmOrBuilder getOxmOrBuilder();

    /**
     * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
     */
    boolean hasExperimenter();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter getExperimenter();
    /**
     * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenterOrBuilder getExperimenterOrBuilder();

    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.ValueCase getValueCase();
  }
  /**
   * <pre>
   * Common header for all Table Feature Properties 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_feature_property}
   */
  public  static final class ofp_table_feature_property extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_feature_property)
      ofp_table_feature_propertyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_feature_property.newBuilder() to construct.
    private ofp_table_feature_property(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_feature_property() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_feature_property();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_feature_property(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder subBuilder = null;
              if (valueCase_ == 2) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_).toBuilder();
              }
              value_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 2;
              break;
            }
            case 26: {
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder subBuilder = null;
              if (valueCase_ == 3) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_).toBuilder();
              }
              value_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 3;
              break;
            }
            case 34: {
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder subBuilder = null;
              if (valueCase_ == 4) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_).toBuilder();
              }
              value_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 4;
              break;
            }
            case 42: {
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder subBuilder = null;
              if (valueCase_ == 5) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_).toBuilder();
              }
              value_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 5;
              break;
            }
            case 50: {
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder subBuilder = null;
              if (valueCase_ == 6) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_).toBuilder();
              }
              value_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 6;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_property_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_property_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      INSTRUCTIONS(2),
      NEXT_TABLES(3),
      ACTIONS(4),
      OXM(5),
      EXPERIMENTER(6),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 2: return INSTRUCTIONS;
          case 3: return NEXT_TABLES;
          case 4: return ACTIONS;
          case 5: return OXM;
          case 6: return EXPERIMENTER;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * One of OFPTFPT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of OFPTFPT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type result = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type.UNRECOGNIZED : result;
    }

    public static final int INSTRUCTIONS_FIELD_NUMBER = 2;
    /**
     * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
     */
    public boolean hasInstructions() {
      return valueCase_ == 2;
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions getInstructions() {
      if (valueCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructionsOrBuilder getInstructionsOrBuilder() {
      if (valueCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance();
    }

    public static final int NEXT_TABLES_FIELD_NUMBER = 3;
    /**
     * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
     */
    public boolean hasNextTables() {
      return valueCase_ == 3;
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables getNextTables() {
      if (valueCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tablesOrBuilder getNextTablesOrBuilder() {
      if (valueCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance();
    }

    public static final int ACTIONS_FIELD_NUMBER = 4;
    /**
     * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
     */
    public boolean hasActions() {
      return valueCase_ == 4;
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions getActions() {
      if (valueCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actionsOrBuilder getActionsOrBuilder() {
      if (valueCase_ == 4) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance();
    }

    public static final int OXM_FIELD_NUMBER = 5;
    /**
     * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
     */
    public boolean hasOxm() {
      return valueCase_ == 5;
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm getOxm() {
      if (valueCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxmOrBuilder getOxmOrBuilder() {
      if (valueCase_ == 5) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance();
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 6;
    /**
     * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
     */
    public boolean hasExperimenter() {
      return valueCase_ == 6;
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter getExperimenter() {
      if (valueCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenterOrBuilder getExperimenterOrBuilder() {
      if (valueCase_ == 6) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type.OFPTFPT_INSTRUCTIONS.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (valueCase_ == 2) {
        output.writeMessage(2, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_);
      }
      if (valueCase_ == 3) {
        output.writeMessage(3, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_);
      }
      if (valueCase_ == 4) {
        output.writeMessage(4, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_);
      }
      if (valueCase_ == 5) {
        output.writeMessage(5, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_);
      }
      if (valueCase_ == 6) {
        output.writeMessage(6, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type.OFPTFPT_INSTRUCTIONS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_);
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_);
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_);
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property) obj;

      if (type_ != other.type_) return false;
      if (!getValueCase().equals(other.getValueCase())) return false;
      switch (valueCase_) {
        case 2:
          if (!getInstructions()
              .equals(other.getInstructions())) return false;
          break;
        case 3:
          if (!getNextTables()
              .equals(other.getNextTables())) return false;
          break;
        case 4:
          if (!getActions()
              .equals(other.getActions())) return false;
          break;
        case 5:
          if (!getOxm()
              .equals(other.getOxm())) return false;
          break;
        case 6:
          if (!getExperimenter()
              .equals(other.getExperimenter())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      switch (valueCase_) {
        case 2:
          hash = (37 * hash) + INSTRUCTIONS_FIELD_NUMBER;
          hash = (53 * hash) + getInstructions().hashCode();
          break;
        case 3:
          hash = (37 * hash) + NEXT_TABLES_FIELD_NUMBER;
          hash = (53 * hash) + getNextTables().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
          hash = (53 * hash) + getActions().hashCode();
          break;
        case 5:
          hash = (37 * hash) + OXM_FIELD_NUMBER;
          hash = (53 * hash) + getOxm().hashCode();
          break;
        case 6:
          hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
          hash = (53 * hash) + getExperimenter().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Common header for all Table Feature Properties 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_feature_property}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_feature_property)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_property_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_property_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        valueCase_ = 0;
        value_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_property_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property(this);
        result.type_ = type_;
        if (valueCase_ == 2) {
          if (instructionsBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = instructionsBuilder_.build();
          }
        }
        if (valueCase_ == 3) {
          if (nextTablesBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = nextTablesBuilder_.build();
          }
        }
        if (valueCase_ == 4) {
          if (actionsBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = actionsBuilder_.build();
          }
        }
        if (valueCase_ == 5) {
          if (oxmBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = oxmBuilder_.build();
          }
        }
        if (valueCase_ == 6) {
          if (experimenterBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = experimenterBuilder_.build();
          }
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        switch (other.getValueCase()) {
          case INSTRUCTIONS: {
            mergeInstructions(other.getInstructions());
            break;
          }
          case NEXT_TABLES: {
            mergeNextTables(other.getNextTables());
            break;
          }
          case ACTIONS: {
            mergeActions(other.getActions());
            break;
          }
          case OXM: {
            mergeOxm(other.getOxm());
            break;
          }
          case EXPERIMENTER: {
            mergeExperimenter(other.getExperimenter());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * One of OFPTFPT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of OFPTFPT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type result = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPTFPT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_table_feature_prop_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructionsOrBuilder> instructionsBuilder_;
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public boolean hasInstructions() {
        return valueCase_ == 2;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions getInstructions() {
        if (instructionsBuilder_ == null) {
          if (valueCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance();
        } else {
          if (valueCase_ == 2) {
            return instructionsBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public Builder setInstructions(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          instructionsBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public Builder setInstructions(
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          instructionsBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public Builder mergeInstructions(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions value) {
        if (instructionsBuilder_ == null) {
          if (valueCase_ == 2 &&
              value_ != org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance()) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 2) {
            instructionsBuilder_.mergeFrom(value);
          }
          instructionsBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public Builder clearInstructions() {
        if (instructionsBuilder_ == null) {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
          }
          instructionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder getInstructionsBuilder() {
        return getInstructionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructionsOrBuilder getInstructionsOrBuilder() {
        if ((valueCase_ == 2) && (instructionsBuilder_ != null)) {
          return instructionsBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_instructions instructions = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructionsOrBuilder> 
          getInstructionsFieldBuilder() {
        if (instructionsBuilder_ == null) {
          if (!(valueCase_ == 2)) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance();
          }
          instructionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructionsOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 2;
        onChanged();;
        return instructionsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tablesOrBuilder> nextTablesBuilder_;
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public boolean hasNextTables() {
        return valueCase_ == 3;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables getNextTables() {
        if (nextTablesBuilder_ == null) {
          if (valueCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance();
        } else {
          if (valueCase_ == 3) {
            return nextTablesBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public Builder setNextTables(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables value) {
        if (nextTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          nextTablesBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public Builder setNextTables(
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder builderForValue) {
        if (nextTablesBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          nextTablesBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public Builder mergeNextTables(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables value) {
        if (nextTablesBuilder_ == null) {
          if (valueCase_ == 3 &&
              value_ != org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance()) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 3) {
            nextTablesBuilder_.mergeFrom(value);
          }
          nextTablesBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public Builder clearNextTables() {
        if (nextTablesBuilder_ == null) {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
          }
          nextTablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder getNextTablesBuilder() {
        return getNextTablesFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tablesOrBuilder getNextTablesOrBuilder() {
        if ((valueCase_ == 3) && (nextTablesBuilder_ != null)) {
          return nextTablesBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_next_tables next_tables = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tablesOrBuilder> 
          getNextTablesFieldBuilder() {
        if (nextTablesBuilder_ == null) {
          if (!(valueCase_ == 3)) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance();
          }
          nextTablesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tablesOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 3;
        onChanged();;
        return nextTablesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actionsOrBuilder> actionsBuilder_;
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public boolean hasActions() {
        return valueCase_ == 4;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions getActions() {
        if (actionsBuilder_ == null) {
          if (valueCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance();
        } else {
          if (valueCase_ == 4) {
            return actionsBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public Builder setActions(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          actionsBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public Builder setActions(
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          actionsBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public Builder mergeActions(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions value) {
        if (actionsBuilder_ == null) {
          if (valueCase_ == 4 &&
              value_ != org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance()) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 4) {
            actionsBuilder_.mergeFrom(value);
          }
          actionsBuilder_.setMessage(value);
        }
        valueCase_ = 4;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
          }
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder getActionsBuilder() {
        return getActionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actionsOrBuilder getActionsOrBuilder() {
        if ((valueCase_ == 4) && (actionsBuilder_ != null)) {
          return actionsBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 4) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_actions actions = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actionsOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          if (!(valueCase_ == 4)) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance();
          }
          actionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actionsOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 4;
        onChanged();;
        return actionsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxmOrBuilder> oxmBuilder_;
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public boolean hasOxm() {
        return valueCase_ == 5;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm getOxm() {
        if (oxmBuilder_ == null) {
          if (valueCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance();
        } else {
          if (valueCase_ == 5) {
            return oxmBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public Builder setOxm(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm value) {
        if (oxmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          oxmBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public Builder setOxm(
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder builderForValue) {
        if (oxmBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          oxmBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public Builder mergeOxm(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm value) {
        if (oxmBuilder_ == null) {
          if (valueCase_ == 5 &&
              value_ != org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance()) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 5) {
            oxmBuilder_.mergeFrom(value);
          }
          oxmBuilder_.setMessage(value);
        }
        valueCase_ = 5;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public Builder clearOxm() {
        if (oxmBuilder_ == null) {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
          }
          oxmBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder getOxmBuilder() {
        return getOxmFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxmOrBuilder getOxmOrBuilder() {
        if ((valueCase_ == 5) && (oxmBuilder_ != null)) {
          return oxmBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 5) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_oxm oxm = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxmOrBuilder> 
          getOxmFieldBuilder() {
        if (oxmBuilder_ == null) {
          if (!(valueCase_ == 5)) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance();
          }
          oxmBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxmOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 5;
        onChanged();;
        return oxmBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenterOrBuilder> experimenterBuilder_;
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public boolean hasExperimenter() {
        return valueCase_ == 6;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter getExperimenter() {
        if (experimenterBuilder_ == null) {
          if (valueCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance();
        } else {
          if (valueCase_ == 6) {
            return experimenterBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public Builder setExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          experimenterBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public Builder setExperimenter(
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder builderForValue) {
        if (experimenterBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          experimenterBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public Builder mergeExperimenter(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter value) {
        if (experimenterBuilder_ == null) {
          if (valueCase_ == 6 &&
              value_ != org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance()) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 6) {
            experimenterBuilder_.mergeFrom(value);
          }
          experimenterBuilder_.setMessage(value);
        }
        valueCase_ = 6;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public Builder clearExperimenter() {
        if (experimenterBuilder_ == null) {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
          }
          experimenterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder getExperimenterBuilder() {
        return getExperimenterFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenterOrBuilder getExperimenterOrBuilder() {
        if ((valueCase_ == 6) && (experimenterBuilder_ != null)) {
          return experimenterBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 6) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_table_feature_prop_experimenter experimenter = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenterOrBuilder> 
          getExperimenterFieldBuilder() {
        if (experimenterBuilder_ == null) {
          if (!(valueCase_ == 6)) {
            value_ = org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance();
          }
          experimenterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenterOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 6;
        onChanged();;
        return experimenterBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_feature_property)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_feature_property)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_feature_property>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_feature_property>() {
      @java.lang.Override
      public ofp_table_feature_property parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_feature_property(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_feature_property> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_feature_property> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_feature_prop_instructionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_feature_prop_instructions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> 
        getInstructionsList();
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index);
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    int getInstructionsCount();
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
        getInstructionsOrBuilderList();
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Instructions property 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_feature_prop_instructions}
   */
  public  static final class ofp_table_feature_prop_instructions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_feature_prop_instructions)
      ofp_table_feature_prop_instructionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_feature_prop_instructions.newBuilder() to construct.
    private ofp_table_feature_prop_instructions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_feature_prop_instructions() {
      instructions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_feature_prop_instructions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_feature_prop_instructions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                instructions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_instruction>();
                mutable_bitField0_ |= 0x00000001;
              }
              instructions_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_instruction.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          instructions_ = java.util.Collections.unmodifiableList(instructions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_instructions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_instructions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder.class);
    }

    public static final int INSTRUCTIONS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> instructions_;
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> getInstructionsList() {
      return instructions_;
    }
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
        getInstructionsOrBuilderList() {
      return instructions_;
    }
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    public int getInstructionsCount() {
      return instructions_.size();
    }
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index) {
      return instructions_.get(index);
    }
    /**
     * <pre>
     * One of OFPTFPT_INSTRUCTIONS,
     *OFPTFPT_INSTRUCTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
        int index) {
      return instructions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < instructions_.size(); i++) {
        output.writeMessage(1, instructions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < instructions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, instructions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) obj;

      if (!getInstructionsList()
          .equals(other.getInstructionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInstructionsCount() > 0) {
        hash = (37 * hash) + INSTRUCTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInstructionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Instructions property 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_feature_prop_instructions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_feature_prop_instructions)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_instructions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_instructions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInstructionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (instructionsBuilder_ == null) {
          instructions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          instructionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_instructions_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions(this);
        int from_bitField0_ = bitField0_;
        if (instructionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            instructions_ = java.util.Collections.unmodifiableList(instructions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.instructions_ = instructions_;
        } else {
          result.instructions_ = instructionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions.getDefaultInstance()) return this;
        if (instructionsBuilder_ == null) {
          if (!other.instructions_.isEmpty()) {
            if (instructions_.isEmpty()) {
              instructions_ = other.instructions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInstructionsIsMutable();
              instructions_.addAll(other.instructions_);
            }
            onChanged();
          }
        } else {
          if (!other.instructions_.isEmpty()) {
            if (instructionsBuilder_.isEmpty()) {
              instructionsBuilder_.dispose();
              instructionsBuilder_ = null;
              instructions_ = other.instructions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              instructionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInstructionsFieldBuilder() : null;
            } else {
              instructionsBuilder_.addAllMessages(other.instructions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> instructions_ =
        java.util.Collections.emptyList();
      private void ensureInstructionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          instructions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_instruction>(instructions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> instructionsBuilder_;

      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction> getInstructionsList() {
        if (instructionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(instructions_);
        } else {
          return instructionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public int getInstructionsCount() {
        if (instructionsBuilder_ == null) {
          return instructions_.size();
        } else {
          return instructionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction getInstructions(int index) {
        if (instructionsBuilder_ == null) {
          return instructions_.get(index);
        } else {
          return instructionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder setInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.set(index, value);
          onChanged();
        } else {
          instructionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder setInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.set(index, builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder addInstructions(org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.add(value);
          onChanged();
        } else {
          instructionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder addInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction value) {
        if (instructionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstructionsIsMutable();
          instructions_.add(index, value);
          onChanged();
        } else {
          instructionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder addInstructions(
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.add(builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder addInstructions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder builderForValue) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.add(index, builderForValue.build());
          onChanged();
        } else {
          instructionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder addAllInstructions(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instruction> values) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, instructions_);
          onChanged();
        } else {
          instructionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder clearInstructions() {
        if (instructionsBuilder_ == null) {
          instructions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          instructionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public Builder removeInstructions(int index) {
        if (instructionsBuilder_ == null) {
          ensureInstructionsIsMutable();
          instructions_.remove(index);
          onChanged();
        } else {
          instructionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder getInstructionsBuilder(
          int index) {
        return getInstructionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder getInstructionsOrBuilder(
          int index) {
        if (instructionsBuilder_ == null) {
          return instructions_.get(index);  } else {
          return instructionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
           getInstructionsOrBuilderList() {
        if (instructionsBuilder_ != null) {
          return instructionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(instructions_);
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder addInstructionsBuilder() {
        return getInstructionsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance());
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder addInstructionsBuilder(
          int index) {
        return getInstructionsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.getDefaultInstance());
      }
      /**
       * <pre>
       * One of OFPTFPT_INSTRUCTIONS,
       *OFPTFPT_INSTRUCTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_instruction instructions = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder> 
           getInstructionsBuilderList() {
        return getInstructionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder> 
          getInstructionsFieldBuilder() {
        if (instructionsBuilder_ == null) {
          instructionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_instruction, org.opencord.voltha.openflow13.Openflow13.ofp_instruction.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_instructionOrBuilder>(
                  instructions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          instructions_ = null;
        }
        return instructionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_feature_prop_instructions)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_feature_prop_instructions)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_feature_prop_instructions>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_feature_prop_instructions>() {
      @java.lang.Override
      public ofp_table_feature_prop_instructions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_feature_prop_instructions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_feature_prop_instructions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_feature_prop_instructions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_instructions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_feature_prop_next_tablesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_feature_prop_next_tables)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPTFPT_NEXT_TABLES,
     *OFPTFPT_NEXT_TABLES_MISS. 
     * </pre>
     *
     * <code>repeated uint32 next_table_ids = 1;</code>
     */
    java.util.List<java.lang.Integer> getNextTableIdsList();
    /**
     * <pre>
     * One of OFPTFPT_NEXT_TABLES,
     *OFPTFPT_NEXT_TABLES_MISS. 
     * </pre>
     *
     * <code>repeated uint32 next_table_ids = 1;</code>
     */
    int getNextTableIdsCount();
    /**
     * <pre>
     * One of OFPTFPT_NEXT_TABLES,
     *OFPTFPT_NEXT_TABLES_MISS. 
     * </pre>
     *
     * <code>repeated uint32 next_table_ids = 1;</code>
     */
    int getNextTableIds(int index);
  }
  /**
   * <pre>
   * Next Tables property 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_feature_prop_next_tables}
   */
  public  static final class ofp_table_feature_prop_next_tables extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_feature_prop_next_tables)
      ofp_table_feature_prop_next_tablesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_feature_prop_next_tables.newBuilder() to construct.
    private ofp_table_feature_prop_next_tables(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_feature_prop_next_tables() {
      nextTableIds_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_feature_prop_next_tables();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_feature_prop_next_tables(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                nextTableIds_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              nextTableIds_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                nextTableIds_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                nextTableIds_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          nextTableIds_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_next_tables_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_next_tables_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder.class);
    }

    public static final int NEXT_TABLE_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList nextTableIds_;
    /**
     * <pre>
     * One of OFPTFPT_NEXT_TABLES,
     *OFPTFPT_NEXT_TABLES_MISS. 
     * </pre>
     *
     * <code>repeated uint32 next_table_ids = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getNextTableIdsList() {
      return nextTableIds_;
    }
    /**
     * <pre>
     * One of OFPTFPT_NEXT_TABLES,
     *OFPTFPT_NEXT_TABLES_MISS. 
     * </pre>
     *
     * <code>repeated uint32 next_table_ids = 1;</code>
     */
    public int getNextTableIdsCount() {
      return nextTableIds_.size();
    }
    /**
     * <pre>
     * One of OFPTFPT_NEXT_TABLES,
     *OFPTFPT_NEXT_TABLES_MISS. 
     * </pre>
     *
     * <code>repeated uint32 next_table_ids = 1;</code>
     */
    public int getNextTableIds(int index) {
      return nextTableIds_.getInt(index);
    }
    private int nextTableIdsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getNextTableIdsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(nextTableIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < nextTableIds_.size(); i++) {
        output.writeUInt32NoTag(nextTableIds_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < nextTableIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(nextTableIds_.getInt(i));
        }
        size += dataSize;
        if (!getNextTableIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        nextTableIdsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) obj;

      if (!getNextTableIdsList()
          .equals(other.getNextTableIdsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNextTableIdsCount() > 0) {
        hash = (37 * hash) + NEXT_TABLE_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getNextTableIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Next Tables property 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_feature_prop_next_tables}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_feature_prop_next_tables)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tablesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_next_tables_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_next_tables_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nextTableIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_next_tables_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          nextTableIds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nextTableIds_ = nextTableIds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables.getDefaultInstance()) return this;
        if (!other.nextTableIds_.isEmpty()) {
          if (nextTableIds_.isEmpty()) {
            nextTableIds_ = other.nextTableIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNextTableIdsIsMutable();
            nextTableIds_.addAll(other.nextTableIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList nextTableIds_ = emptyIntList();
      private void ensureNextTableIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nextTableIds_ = mutableCopy(nextTableIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * One of OFPTFPT_NEXT_TABLES,
       *OFPTFPT_NEXT_TABLES_MISS. 
       * </pre>
       *
       * <code>repeated uint32 next_table_ids = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getNextTableIdsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(nextTableIds_) : nextTableIds_;
      }
      /**
       * <pre>
       * One of OFPTFPT_NEXT_TABLES,
       *OFPTFPT_NEXT_TABLES_MISS. 
       * </pre>
       *
       * <code>repeated uint32 next_table_ids = 1;</code>
       */
      public int getNextTableIdsCount() {
        return nextTableIds_.size();
      }
      /**
       * <pre>
       * One of OFPTFPT_NEXT_TABLES,
       *OFPTFPT_NEXT_TABLES_MISS. 
       * </pre>
       *
       * <code>repeated uint32 next_table_ids = 1;</code>
       */
      public int getNextTableIds(int index) {
        return nextTableIds_.getInt(index);
      }
      /**
       * <pre>
       * One of OFPTFPT_NEXT_TABLES,
       *OFPTFPT_NEXT_TABLES_MISS. 
       * </pre>
       *
       * <code>repeated uint32 next_table_ids = 1;</code>
       */
      public Builder setNextTableIds(
          int index, int value) {
        ensureNextTableIdsIsMutable();
        nextTableIds_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_NEXT_TABLES,
       *OFPTFPT_NEXT_TABLES_MISS. 
       * </pre>
       *
       * <code>repeated uint32 next_table_ids = 1;</code>
       */
      public Builder addNextTableIds(int value) {
        ensureNextTableIdsIsMutable();
        nextTableIds_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_NEXT_TABLES,
       *OFPTFPT_NEXT_TABLES_MISS. 
       * </pre>
       *
       * <code>repeated uint32 next_table_ids = 1;</code>
       */
      public Builder addAllNextTableIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNextTableIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nextTableIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_NEXT_TABLES,
       *OFPTFPT_NEXT_TABLES_MISS. 
       * </pre>
       *
       * <code>repeated uint32 next_table_ids = 1;</code>
       */
      public Builder clearNextTableIds() {
        nextTableIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_feature_prop_next_tables)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_feature_prop_next_tables)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_feature_prop_next_tables>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_feature_prop_next_tables>() {
      @java.lang.Override
      public ofp_table_feature_prop_next_tables parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_feature_prop_next_tables(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_feature_prop_next_tables> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_feature_prop_next_tables> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_next_tables getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_feature_prop_actionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_feature_prop_actions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> 
        getActionsList();
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index);
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    int getActionsCount();
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList();
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Actions property 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_feature_prop_actions}
   */
  public  static final class ofp_table_feature_prop_actions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_feature_prop_actions)
      ofp_table_feature_prop_actionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_feature_prop_actions.newBuilder() to construct.
    private ofp_table_feature_prop_actions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_feature_prop_actions() {
      actions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_feature_prop_actions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_feature_prop_actions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>();
                mutable_bitField0_ |= 0x00000001;
              }
              actions_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_action.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          actions_ = java.util.Collections.unmodifiableList(actions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_actions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_actions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder.class);
    }

    public static final int ACTIONS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_;
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
      return actions_;
    }
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
        getActionsOrBuilderList() {
      return actions_;
    }
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public int getActionsCount() {
      return actions_.size();
    }
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
      return actions_.get(index);
    }
    /**
     * <pre>
     * One of OFPTFPT_WRITE_ACTIONS,
     *OFPTFPT_WRITE_ACTIONS_MISS,
     *OFPTFPT_APPLY_ACTIONS,
     *OFPTFPT_APPLY_ACTIONS_MISS. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_action actions = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(1, actions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, actions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) obj;

      if (!getActionsList()
          .equals(other.getActionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getActionsCount() > 0) {
        hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getActionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Actions property 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_feature_prop_actions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_feature_prop_actions)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_actions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_actions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getActionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_actions_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions(this);
        int from_bitField0_ = bitField0_;
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions.getDefaultInstance()) return this;
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          actions_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_action>(actions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> actionsBuilder_;

      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder setActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(
          org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addActions(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder addAllActions(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_action> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_action.getDefaultInstance());
      }
      /**
       * <pre>
       * One of OFPTFPT_WRITE_ACTIONS,
       *OFPTFPT_WRITE_ACTIONS_MISS,
       *OFPTFPT_APPLY_ACTIONS,
       *OFPTFPT_APPLY_ACTIONS_MISS. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_action actions = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder> 
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_action, org.opencord.voltha.openflow13.Openflow13.ofp_action.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_actionOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_feature_prop_actions)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_feature_prop_actions)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_feature_prop_actions>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_feature_prop_actions>() {
      @java.lang.Override
      public ofp_table_feature_prop_actions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_feature_prop_actions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_feature_prop_actions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_feature_prop_actions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_actions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_feature_prop_oxmOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_feature_prop_oxm)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * TODO is this a uint32??? 
     * </pre>
     *
     * <code>repeated uint32 oxm_ids = 3;</code>
     */
    java.util.List<java.lang.Integer> getOxmIdsList();
    /**
     * <pre>
     * TODO is this a uint32??? 
     * </pre>
     *
     * <code>repeated uint32 oxm_ids = 3;</code>
     */
    int getOxmIdsCount();
    /**
     * <pre>
     * TODO is this a uint32??? 
     * </pre>
     *
     * <code>repeated uint32 oxm_ids = 3;</code>
     */
    int getOxmIds(int index);
  }
  /**
   * <pre>
   * Match, Wildcard or Set-Field property 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_feature_prop_oxm}
   */
  public  static final class ofp_table_feature_prop_oxm extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_feature_prop_oxm)
      ofp_table_feature_prop_oxmOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_feature_prop_oxm.newBuilder() to construct.
    private ofp_table_feature_prop_oxm(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_feature_prop_oxm() {
      oxmIds_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_feature_prop_oxm();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_feature_prop_oxm(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 24: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                oxmIds_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              oxmIds_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                oxmIds_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                oxmIds_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          oxmIds_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_oxm_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_oxm_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder.class);
    }

    public static final int OXM_IDS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList oxmIds_;
    /**
     * <pre>
     * TODO is this a uint32??? 
     * </pre>
     *
     * <code>repeated uint32 oxm_ids = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getOxmIdsList() {
      return oxmIds_;
    }
    /**
     * <pre>
     * TODO is this a uint32??? 
     * </pre>
     *
     * <code>repeated uint32 oxm_ids = 3;</code>
     */
    public int getOxmIdsCount() {
      return oxmIds_.size();
    }
    /**
     * <pre>
     * TODO is this a uint32??? 
     * </pre>
     *
     * <code>repeated uint32 oxm_ids = 3;</code>
     */
    public int getOxmIds(int index) {
      return oxmIds_.getInt(index);
    }
    private int oxmIdsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getOxmIdsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(oxmIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < oxmIds_.size(); i++) {
        output.writeUInt32NoTag(oxmIds_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < oxmIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(oxmIds_.getInt(i));
        }
        size += dataSize;
        if (!getOxmIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        oxmIdsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) obj;

      if (!getOxmIdsList()
          .equals(other.getOxmIdsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOxmIdsCount() > 0) {
        hash = (37 * hash) + OXM_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getOxmIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Match, Wildcard or Set-Field property 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_feature_prop_oxm}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_feature_prop_oxm)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxmOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_oxm_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_oxm_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        oxmIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_oxm_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          oxmIds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.oxmIds_ = oxmIds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm.getDefaultInstance()) return this;
        if (!other.oxmIds_.isEmpty()) {
          if (oxmIds_.isEmpty()) {
            oxmIds_ = other.oxmIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOxmIdsIsMutable();
            oxmIds_.addAll(other.oxmIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList oxmIds_ = emptyIntList();
      private void ensureOxmIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          oxmIds_ = mutableCopy(oxmIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * TODO is this a uint32??? 
       * </pre>
       *
       * <code>repeated uint32 oxm_ids = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getOxmIdsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(oxmIds_) : oxmIds_;
      }
      /**
       * <pre>
       * TODO is this a uint32??? 
       * </pre>
       *
       * <code>repeated uint32 oxm_ids = 3;</code>
       */
      public int getOxmIdsCount() {
        return oxmIds_.size();
      }
      /**
       * <pre>
       * TODO is this a uint32??? 
       * </pre>
       *
       * <code>repeated uint32 oxm_ids = 3;</code>
       */
      public int getOxmIds(int index) {
        return oxmIds_.getInt(index);
      }
      /**
       * <pre>
       * TODO is this a uint32??? 
       * </pre>
       *
       * <code>repeated uint32 oxm_ids = 3;</code>
       */
      public Builder setOxmIds(
          int index, int value) {
        ensureOxmIdsIsMutable();
        oxmIds_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO is this a uint32??? 
       * </pre>
       *
       * <code>repeated uint32 oxm_ids = 3;</code>
       */
      public Builder addOxmIds(int value) {
        ensureOxmIdsIsMutable();
        oxmIds_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO is this a uint32??? 
       * </pre>
       *
       * <code>repeated uint32 oxm_ids = 3;</code>
       */
      public Builder addAllOxmIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOxmIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, oxmIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO is this a uint32??? 
       * </pre>
       *
       * <code>repeated uint32 oxm_ids = 3;</code>
       */
      public Builder clearOxmIds() {
        oxmIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_feature_prop_oxm)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_feature_prop_oxm)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_feature_prop_oxm>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_feature_prop_oxm>() {
      @java.lang.Override
      public ofp_table_feature_prop_oxm parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_feature_prop_oxm(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_feature_prop_oxm> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_feature_prop_oxm> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_oxm getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_feature_prop_experimenterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_feature_prop_experimenter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPTFPT_EXPERIMENTER,
     *OFPTFPT_EXPERIMENTER_MISS. 
     * </pre>
     *
     * <code>uint32 experimenter = 2;</code>
     */
    int getExperimenter();

    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 3;</code>
     */
    int getExpType();

    /**
     * <code>repeated uint32 experimenter_data = 4;</code>
     */
    java.util.List<java.lang.Integer> getExperimenterDataList();
    /**
     * <code>repeated uint32 experimenter_data = 4;</code>
     */
    int getExperimenterDataCount();
    /**
     * <code>repeated uint32 experimenter_data = 4;</code>
     */
    int getExperimenterData(int index);
  }
  /**
   * <pre>
   * Experimenter table feature property 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_feature_prop_experimenter}
   */
  public  static final class ofp_table_feature_prop_experimenter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_feature_prop_experimenter)
      ofp_table_feature_prop_experimenterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_feature_prop_experimenter.newBuilder() to construct.
    private ofp_table_feature_prop_experimenter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_feature_prop_experimenter() {
      experimenterData_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_feature_prop_experimenter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_feature_prop_experimenter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {

              experimenter_ = input.readUInt32();
              break;
            }
            case 24: {

              expType_ = input.readUInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                experimenterData_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              experimenterData_.addInt(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                experimenterData_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                experimenterData_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          experimenterData_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_experimenter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_experimenter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder.class);
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 2;
    private int experimenter_;
    /**
     * <pre>
     * One of OFPTFPT_EXPERIMENTER,
     *OFPTFPT_EXPERIMENTER_MISS. 
     * </pre>
     *
     * <code>uint32 experimenter = 2;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    public static final int EXP_TYPE_FIELD_NUMBER = 3;
    private int expType_;
    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 3;</code>
     */
    public int getExpType() {
      return expType_;
    }

    public static final int EXPERIMENTER_DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList experimenterData_;
    /**
     * <code>repeated uint32 experimenter_data = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getExperimenterDataList() {
      return experimenterData_;
    }
    /**
     * <code>repeated uint32 experimenter_data = 4;</code>
     */
    public int getExperimenterDataCount() {
      return experimenterData_.size();
    }
    /**
     * <code>repeated uint32 experimenter_data = 4;</code>
     */
    public int getExperimenterData(int index) {
      return experimenterData_.getInt(index);
    }
    private int experimenterDataMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (experimenter_ != 0) {
        output.writeUInt32(2, experimenter_);
      }
      if (expType_ != 0) {
        output.writeUInt32(3, expType_);
      }
      if (getExperimenterDataList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(experimenterDataMemoizedSerializedSize);
      }
      for (int i = 0; i < experimenterData_.size(); i++) {
        output.writeUInt32NoTag(experimenterData_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, experimenter_);
      }
      if (expType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, expType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < experimenterData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(experimenterData_.getInt(i));
        }
        size += dataSize;
        if (!getExperimenterDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        experimenterDataMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) obj;

      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (getExpType()
          != other.getExpType()) return false;
      if (!getExperimenterDataList()
          .equals(other.getExperimenterDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (37 * hash) + EXP_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getExpType();
      if (getExperimenterDataCount() > 0) {
        hash = (37 * hash) + EXPERIMENTER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getExperimenterDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Experimenter table feature property 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_feature_prop_experimenter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_feature_prop_experimenter)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_experimenter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_experimenter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        experimenter_ = 0;

        expType_ = 0;

        experimenterData_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_feature_prop_experimenter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter(this);
        int from_bitField0_ = bitField0_;
        result.experimenter_ = experimenter_;
        result.expType_ = expType_;
        if (((bitField0_ & 0x00000001) != 0)) {
          experimenterData_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.experimenterData_ = experimenterData_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter.getDefaultInstance()) return this;
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        if (other.getExpType() != 0) {
          setExpType(other.getExpType());
        }
        if (!other.experimenterData_.isEmpty()) {
          if (experimenterData_.isEmpty()) {
            experimenterData_ = other.experimenterData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureExperimenterDataIsMutable();
            experimenterData_.addAll(other.experimenterData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int experimenter_ ;
      /**
       * <pre>
       * One of OFPTFPT_EXPERIMENTER,
       *OFPTFPT_EXPERIMENTER_MISS. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * One of OFPTFPT_EXPERIMENTER,
       *OFPTFPT_EXPERIMENTER_MISS. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPTFPT_EXPERIMENTER,
       *OFPTFPT_EXPERIMENTER_MISS. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }

      private int expType_ ;
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 3;</code>
       */
      public int getExpType() {
        return expType_;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 3;</code>
       */
      public Builder setExpType(int value) {
        
        expType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 3;</code>
       */
      public Builder clearExpType() {
        
        expType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList experimenterData_ = emptyIntList();
      private void ensureExperimenterDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          experimenterData_ = mutableCopy(experimenterData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 experimenter_data = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getExperimenterDataList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(experimenterData_) : experimenterData_;
      }
      /**
       * <code>repeated uint32 experimenter_data = 4;</code>
       */
      public int getExperimenterDataCount() {
        return experimenterData_.size();
      }
      /**
       * <code>repeated uint32 experimenter_data = 4;</code>
       */
      public int getExperimenterData(int index) {
        return experimenterData_.getInt(index);
      }
      /**
       * <code>repeated uint32 experimenter_data = 4;</code>
       */
      public Builder setExperimenterData(
          int index, int value) {
        ensureExperimenterDataIsMutable();
        experimenterData_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 experimenter_data = 4;</code>
       */
      public Builder addExperimenterData(int value) {
        ensureExperimenterDataIsMutable();
        experimenterData_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 experimenter_data = 4;</code>
       */
      public Builder addAllExperimenterData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExperimenterDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, experimenterData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 experimenter_data = 4;</code>
       */
      public Builder clearExperimenterData() {
        experimenterData_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_feature_prop_experimenter)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_feature_prop_experimenter)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_feature_prop_experimenter>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_feature_prop_experimenter>() {
      @java.lang.Override
      public ofp_table_feature_prop_experimenter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_feature_prop_experimenter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_feature_prop_experimenter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_feature_prop_experimenter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_prop_experimenter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_featuresOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_features)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identifier of table.  Lower numbered tables
     *are consulted first. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    int getTableId();

    /**
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Bits of metadata table can match. 
     * </pre>
     *
     * <code>uint64 metadata_match = 3;</code>
     */
    long getMetadataMatch();

    /**
     * <pre>
     * Bits of metadata table can write. 
     * </pre>
     *
     * <code>uint64 metadata_write = 4;</code>
     */
    long getMetadataWrite();

    /**
     * <pre>
     * Bitmap of OFPTC_* values 
     * </pre>
     *
     * <code>uint32 config = 5;</code>
     */
    int getConfig();

    /**
     * <pre>
     * Max number of entries supported. 
     * </pre>
     *
     * <code>uint32 max_entries = 6;</code>
     */
    int getMaxEntries();

    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property> 
        getPropertiesList();
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property getProperties(int index);
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    int getPropertiesCount();
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder> 
        getPropertiesOrBuilderList();
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder getPropertiesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Body for ofp_multipart_request of type OFPMP_TABLE_FEATURES./
   * Body of reply to OFPMP_TABLE_FEATURES request. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_features}
   */
  public  static final class ofp_table_features extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_features)
      ofp_table_featuresOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_features.newBuilder() to construct.
    private ofp_table_features(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_features() {
      name_ = "";
      properties_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_features();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_features(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              metadataMatch_ = input.readUInt64();
              break;
            }
            case 32: {

              metadataWrite_ = input.readUInt64();
              break;
            }
            case 40: {

              config_ = input.readUInt32();
              break;
            }
            case 48: {

              maxEntries_ = input.readUInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                properties_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property>();
                mutable_bitField0_ |= 0x00000001;
              }
              properties_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          properties_ = java.util.Collections.unmodifiableList(properties_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_features_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_features_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_features.Builder.class);
    }

    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     * Identifier of table.  Lower numbered tables
     *are consulted first. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METADATA_MATCH_FIELD_NUMBER = 3;
    private long metadataMatch_;
    /**
     * <pre>
     * Bits of metadata table can match. 
     * </pre>
     *
     * <code>uint64 metadata_match = 3;</code>
     */
    public long getMetadataMatch() {
      return metadataMatch_;
    }

    public static final int METADATA_WRITE_FIELD_NUMBER = 4;
    private long metadataWrite_;
    /**
     * <pre>
     * Bits of metadata table can write. 
     * </pre>
     *
     * <code>uint64 metadata_write = 4;</code>
     */
    public long getMetadataWrite() {
      return metadataWrite_;
    }

    public static final int CONFIG_FIELD_NUMBER = 5;
    private int config_;
    /**
     * <pre>
     * Bitmap of OFPTC_* values 
     * </pre>
     *
     * <code>uint32 config = 5;</code>
     */
    public int getConfig() {
      return config_;
    }

    public static final int MAX_ENTRIES_FIELD_NUMBER = 6;
    private int maxEntries_;
    /**
     * <pre>
     * Max number of entries supported. 
     * </pre>
     *
     * <code>uint32 max_entries = 6;</code>
     */
    public int getMaxEntries() {
      return maxEntries_;
    }

    public static final int PROPERTIES_FIELD_NUMBER = 7;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property> properties_;
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property> getPropertiesList() {
      return properties_;
    }
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder> 
        getPropertiesOrBuilderList() {
      return properties_;
    }
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    public int getPropertiesCount() {
      return properties_.size();
    }
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property getProperties(int index) {
      return properties_.get(index);
    }
    /**
     * <pre>
     * Table Feature Property list 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder getPropertiesOrBuilder(
        int index) {
      return properties_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeUInt32(1, tableId_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (metadataMatch_ != 0L) {
        output.writeUInt64(3, metadataMatch_);
      }
      if (metadataWrite_ != 0L) {
        output.writeUInt64(4, metadataWrite_);
      }
      if (config_ != 0) {
        output.writeUInt32(5, config_);
      }
      if (maxEntries_ != 0) {
        output.writeUInt32(6, maxEntries_);
      }
      for (int i = 0; i < properties_.size(); i++) {
        output.writeMessage(7, properties_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (metadataMatch_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, metadataMatch_);
      }
      if (metadataWrite_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, metadataWrite_);
      }
      if (config_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, config_);
      }
      if (maxEntries_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, maxEntries_);
      }
      for (int i = 0; i < properties_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, properties_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_features)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_features other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_features) obj;

      if (getTableId()
          != other.getTableId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getMetadataMatch()
          != other.getMetadataMatch()) return false;
      if (getMetadataWrite()
          != other.getMetadataWrite()) return false;
      if (getConfig()
          != other.getConfig()) return false;
      if (getMaxEntries()
          != other.getMaxEntries()) return false;
      if (!getPropertiesList()
          .equals(other.getPropertiesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + METADATA_MATCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMetadataMatch());
      hash = (37 * hash) + METADATA_WRITE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMetadataWrite());
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConfig();
      hash = (37 * hash) + MAX_ENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getMaxEntries();
      if (getPropertiesCount() > 0) {
        hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + getPropertiesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_features prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body for ofp_multipart_request of type OFPMP_TABLE_FEATURES./
     * Body of reply to OFPMP_TABLE_FEATURES request. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_features}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_features)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_featuresOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_features_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_features_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_features.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_features.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropertiesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableId_ = 0;

        name_ = "";

        metadataMatch_ = 0L;

        metadataWrite_ = 0L;

        config_ = 0;

        maxEntries_ = 0;

        if (propertiesBuilder_ == null) {
          properties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propertiesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_features_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_features getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_features.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_features build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_features result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_features buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_features result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_features(this);
        int from_bitField0_ = bitField0_;
        result.tableId_ = tableId_;
        result.name_ = name_;
        result.metadataMatch_ = metadataMatch_;
        result.metadataWrite_ = metadataWrite_;
        result.config_ = config_;
        result.maxEntries_ = maxEntries_;
        if (propertiesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            properties_ = java.util.Collections.unmodifiableList(properties_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.properties_ = properties_;
        } else {
          result.properties_ = propertiesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_features) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_features)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_features other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_features.getDefaultInstance()) return this;
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getMetadataMatch() != 0L) {
          setMetadataMatch(other.getMetadataMatch());
        }
        if (other.getMetadataWrite() != 0L) {
          setMetadataWrite(other.getMetadataWrite());
        }
        if (other.getConfig() != 0) {
          setConfig(other.getConfig());
        }
        if (other.getMaxEntries() != 0) {
          setMaxEntries(other.getMaxEntries());
        }
        if (propertiesBuilder_ == null) {
          if (!other.properties_.isEmpty()) {
            if (properties_.isEmpty()) {
              properties_ = other.properties_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropertiesIsMutable();
              properties_.addAll(other.properties_);
            }
            onChanged();
          }
        } else {
          if (!other.properties_.isEmpty()) {
            if (propertiesBuilder_.isEmpty()) {
              propertiesBuilder_.dispose();
              propertiesBuilder_ = null;
              properties_ = other.properties_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propertiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropertiesFieldBuilder() : null;
            } else {
              propertiesBuilder_.addAllMessages(other.properties_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_features parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_features) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tableId_ ;
      /**
       * <pre>
       * Identifier of table.  Lower numbered tables
       *are consulted first. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * Identifier of table.  Lower numbered tables
       *are consulted first. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of table.  Lower numbered tables
       *are consulted first. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private long metadataMatch_ ;
      /**
       * <pre>
       * Bits of metadata table can match. 
       * </pre>
       *
       * <code>uint64 metadata_match = 3;</code>
       */
      public long getMetadataMatch() {
        return metadataMatch_;
      }
      /**
       * <pre>
       * Bits of metadata table can match. 
       * </pre>
       *
       * <code>uint64 metadata_match = 3;</code>
       */
      public Builder setMetadataMatch(long value) {
        
        metadataMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bits of metadata table can match. 
       * </pre>
       *
       * <code>uint64 metadata_match = 3;</code>
       */
      public Builder clearMetadataMatch() {
        
        metadataMatch_ = 0L;
        onChanged();
        return this;
      }

      private long metadataWrite_ ;
      /**
       * <pre>
       * Bits of metadata table can write. 
       * </pre>
       *
       * <code>uint64 metadata_write = 4;</code>
       */
      public long getMetadataWrite() {
        return metadataWrite_;
      }
      /**
       * <pre>
       * Bits of metadata table can write. 
       * </pre>
       *
       * <code>uint64 metadata_write = 4;</code>
       */
      public Builder setMetadataWrite(long value) {
        
        metadataWrite_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bits of metadata table can write. 
       * </pre>
       *
       * <code>uint64 metadata_write = 4;</code>
       */
      public Builder clearMetadataWrite() {
        
        metadataWrite_ = 0L;
        onChanged();
        return this;
      }

      private int config_ ;
      /**
       * <pre>
       * Bitmap of OFPTC_* values 
       * </pre>
       *
       * <code>uint32 config = 5;</code>
       */
      public int getConfig() {
        return config_;
      }
      /**
       * <pre>
       * Bitmap of OFPTC_* values 
       * </pre>
       *
       * <code>uint32 config = 5;</code>
       */
      public Builder setConfig(int value) {
        
        config_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPTC_* values 
       * </pre>
       *
       * <code>uint32 config = 5;</code>
       */
      public Builder clearConfig() {
        
        config_ = 0;
        onChanged();
        return this;
      }

      private int maxEntries_ ;
      /**
       * <pre>
       * Max number of entries supported. 
       * </pre>
       *
       * <code>uint32 max_entries = 6;</code>
       */
      public int getMaxEntries() {
        return maxEntries_;
      }
      /**
       * <pre>
       * Max number of entries supported. 
       * </pre>
       *
       * <code>uint32 max_entries = 6;</code>
       */
      public Builder setMaxEntries(int value) {
        
        maxEntries_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max number of entries supported. 
       * </pre>
       *
       * <code>uint32 max_entries = 6;</code>
       */
      public Builder clearMaxEntries() {
        
        maxEntries_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property> properties_ =
        java.util.Collections.emptyList();
      private void ensurePropertiesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          properties_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property>(properties_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder> propertiesBuilder_;

      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property> getPropertiesList() {
        if (propertiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(properties_);
        } else {
          return propertiesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public int getPropertiesCount() {
        if (propertiesBuilder_ == null) {
          return properties_.size();
        } else {
          return propertiesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property getProperties(int index) {
        if (propertiesBuilder_ == null) {
          return properties_.get(index);
        } else {
          return propertiesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder setProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertiesIsMutable();
          properties_.set(index, value);
          onChanged();
        } else {
          propertiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder setProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.set(index, builderForValue.build());
          onChanged();
        } else {
          propertiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder addProperties(org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertiesIsMutable();
          properties_.add(value);
          onChanged();
        } else {
          propertiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder addProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertiesIsMutable();
          properties_.add(index, value);
          onChanged();
        } else {
          propertiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder addProperties(
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.add(builderForValue.build());
          onChanged();
        } else {
          propertiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder addProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.add(index, builderForValue.build());
          onChanged();
        } else {
          propertiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder addAllProperties(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property> values) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, properties_);
          onChanged();
        } else {
          propertiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder clearProperties() {
        if (propertiesBuilder_ == null) {
          properties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propertiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public Builder removeProperties(int index) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.remove(index);
          onChanged();
        } else {
          propertiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder getPropertiesBuilder(
          int index) {
        return getPropertiesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder getPropertiesOrBuilder(
          int index) {
        if (propertiesBuilder_ == null) {
          return properties_.get(index);  } else {
          return propertiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder> 
           getPropertiesOrBuilderList() {
        if (propertiesBuilder_ != null) {
          return propertiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(properties_);
        }
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder addPropertiesBuilder() {
        return getPropertiesFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.getDefaultInstance());
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder addPropertiesBuilder(
          int index) {
        return getPropertiesFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.getDefaultInstance());
      }
      /**
       * <pre>
       * Table Feature Property list 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_table_feature_property properties = 7;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder> 
           getPropertiesBuilderList() {
        return getPropertiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder> 
          getPropertiesFieldBuilder() {
        if (propertiesBuilder_ == null) {
          propertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_property.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_table_feature_propertyOrBuilder>(
                  properties_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          properties_ = null;
        }
        return propertiesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_features)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_features)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_features DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_features();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_features getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_features>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_features>() {
      @java.lang.Override
      public ofp_table_features parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_features(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_features> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_features> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_features getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_table_statsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_table_stats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identifier of table.  Lower numbered tables
     *are consulted first. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    int getTableId();

    /**
     * <pre>
     * Number of active entries. 
     * </pre>
     *
     * <code>uint32 active_count = 2;</code>
     */
    int getActiveCount();

    /**
     * <pre>
     * Number of packets looked up in table. 
     * </pre>
     *
     * <code>uint64 lookup_count = 3;</code>
     */
    long getLookupCount();

    /**
     * <pre>
     * Number of packets that hit table. 
     * </pre>
     *
     * <code>uint64 matched_count = 4;</code>
     */
    long getMatchedCount();
  }
  /**
   * <pre>
   * Body of reply to OFPMP_TABLE request. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_table_stats}
   */
  public  static final class ofp_table_stats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_table_stats)
      ofp_table_statsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_table_stats.newBuilder() to construct.
    private ofp_table_stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_table_stats() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_table_stats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_table_stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              tableId_ = input.readUInt32();
              break;
            }
            case 16: {

              activeCount_ = input.readUInt32();
              break;
            }
            case 24: {

              lookupCount_ = input.readUInt64();
              break;
            }
            case 32: {

              matchedCount_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_stats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_table_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_stats.Builder.class);
    }

    public static final int TABLE_ID_FIELD_NUMBER = 1;
    private int tableId_;
    /**
     * <pre>
     * Identifier of table.  Lower numbered tables
     *are consulted first. 
     * </pre>
     *
     * <code>uint32 table_id = 1;</code>
     */
    public int getTableId() {
      return tableId_;
    }

    public static final int ACTIVE_COUNT_FIELD_NUMBER = 2;
    private int activeCount_;
    /**
     * <pre>
     * Number of active entries. 
     * </pre>
     *
     * <code>uint32 active_count = 2;</code>
     */
    public int getActiveCount() {
      return activeCount_;
    }

    public static final int LOOKUP_COUNT_FIELD_NUMBER = 3;
    private long lookupCount_;
    /**
     * <pre>
     * Number of packets looked up in table. 
     * </pre>
     *
     * <code>uint64 lookup_count = 3;</code>
     */
    public long getLookupCount() {
      return lookupCount_;
    }

    public static final int MATCHED_COUNT_FIELD_NUMBER = 4;
    private long matchedCount_;
    /**
     * <pre>
     * Number of packets that hit table. 
     * </pre>
     *
     * <code>uint64 matched_count = 4;</code>
     */
    public long getMatchedCount() {
      return matchedCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableId_ != 0) {
        output.writeUInt32(1, tableId_);
      }
      if (activeCount_ != 0) {
        output.writeUInt32(2, activeCount_);
      }
      if (lookupCount_ != 0L) {
        output.writeUInt64(3, lookupCount_);
      }
      if (matchedCount_ != 0L) {
        output.writeUInt64(4, matchedCount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tableId_);
      }
      if (activeCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, activeCount_);
      }
      if (lookupCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, lookupCount_);
      }
      if (matchedCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, matchedCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_stats)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_table_stats other = (org.opencord.voltha.openflow13.Openflow13.ofp_table_stats) obj;

      if (getTableId()
          != other.getTableId()) return false;
      if (getActiveCount()
          != other.getActiveCount()) return false;
      if (getLookupCount()
          != other.getLookupCount()) return false;
      if (getMatchedCount()
          != other.getMatchedCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTableId();
      hash = (37 * hash) + ACTIVE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getActiveCount();
      hash = (37 * hash) + LOOKUP_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLookupCount());
      hash = (37 * hash) + MATCHED_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMatchedCount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_table_stats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_TABLE request. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_table_stats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_table_stats)
        org.opencord.voltha.openflow13.Openflow13.ofp_table_statsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_stats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_table_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_table_stats.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_table_stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableId_ = 0;

        activeCount_ = 0;

        lookupCount_ = 0L;

        matchedCount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_table_stats_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_stats getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_table_stats.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_stats build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_table_stats buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_stats result = new org.opencord.voltha.openflow13.Openflow13.ofp_table_stats(this);
        result.tableId_ = tableId_;
        result.activeCount_ = activeCount_;
        result.lookupCount_ = lookupCount_;
        result.matchedCount_ = matchedCount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_table_stats) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_table_stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_table_stats other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_table_stats.getDefaultInstance()) return this;
        if (other.getTableId() != 0) {
          setTableId(other.getTableId());
        }
        if (other.getActiveCount() != 0) {
          setActiveCount(other.getActiveCount());
        }
        if (other.getLookupCount() != 0L) {
          setLookupCount(other.getLookupCount());
        }
        if (other.getMatchedCount() != 0L) {
          setMatchedCount(other.getMatchedCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_table_stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_table_stats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int tableId_ ;
      /**
       * <pre>
       * Identifier of table.  Lower numbered tables
       *are consulted first. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public int getTableId() {
        return tableId_;
      }
      /**
       * <pre>
       * Identifier of table.  Lower numbered tables
       *are consulted first. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder setTableId(int value) {
        
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of table.  Lower numbered tables
       *are consulted first. 
       * </pre>
       *
       * <code>uint32 table_id = 1;</code>
       */
      public Builder clearTableId() {
        
        tableId_ = 0;
        onChanged();
        return this;
      }

      private int activeCount_ ;
      /**
       * <pre>
       * Number of active entries. 
       * </pre>
       *
       * <code>uint32 active_count = 2;</code>
       */
      public int getActiveCount() {
        return activeCount_;
      }
      /**
       * <pre>
       * Number of active entries. 
       * </pre>
       *
       * <code>uint32 active_count = 2;</code>
       */
      public Builder setActiveCount(int value) {
        
        activeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of active entries. 
       * </pre>
       *
       * <code>uint32 active_count = 2;</code>
       */
      public Builder clearActiveCount() {
        
        activeCount_ = 0;
        onChanged();
        return this;
      }

      private long lookupCount_ ;
      /**
       * <pre>
       * Number of packets looked up in table. 
       * </pre>
       *
       * <code>uint64 lookup_count = 3;</code>
       */
      public long getLookupCount() {
        return lookupCount_;
      }
      /**
       * <pre>
       * Number of packets looked up in table. 
       * </pre>
       *
       * <code>uint64 lookup_count = 3;</code>
       */
      public Builder setLookupCount(long value) {
        
        lookupCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets looked up in table. 
       * </pre>
       *
       * <code>uint64 lookup_count = 3;</code>
       */
      public Builder clearLookupCount() {
        
        lookupCount_ = 0L;
        onChanged();
        return this;
      }

      private long matchedCount_ ;
      /**
       * <pre>
       * Number of packets that hit table. 
       * </pre>
       *
       * <code>uint64 matched_count = 4;</code>
       */
      public long getMatchedCount() {
        return matchedCount_;
      }
      /**
       * <pre>
       * Number of packets that hit table. 
       * </pre>
       *
       * <code>uint64 matched_count = 4;</code>
       */
      public Builder setMatchedCount(long value) {
        
        matchedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets that hit table. 
       * </pre>
       *
       * <code>uint64 matched_count = 4;</code>
       */
      public Builder clearMatchedCount() {
        
        matchedCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_table_stats)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_table_stats)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_table_stats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_table_stats();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_table_stats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_table_stats>
        PARSER = new com.google.protobuf.AbstractParser<ofp_table_stats>() {
      @java.lang.Override
      public ofp_table_stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_table_stats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_table_stats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_table_stats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_table_stats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_port_stats_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_port_stats_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * OFPMP_PORT message must request statistics
     * either for a single port (specified in
     * port_no) or for all ports (if port_no ==
     * OFPP_ANY). 
     * </pre>
     *
     * <code>uint32 port_no = 1;</code>
     */
    int getPortNo();
  }
  /**
   * <pre>
   * Body for ofp_multipart_request of type OFPMP_PORT. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_port_stats_request}
   */
  public  static final class ofp_port_stats_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_port_stats_request)
      ofp_port_stats_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_port_stats_request.newBuilder() to construct.
    private ofp_port_stats_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_port_stats_request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_port_stats_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_port_stats_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              portNo_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request.Builder.class);
    }

    public static final int PORT_NO_FIELD_NUMBER = 1;
    private int portNo_;
    /**
     * <pre>
     * OFPMP_PORT message must request statistics
     * either for a single port (specified in
     * port_no) or for all ports (if port_no ==
     * OFPP_ANY). 
     * </pre>
     *
     * <code>uint32 port_no = 1;</code>
     */
    public int getPortNo() {
      return portNo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portNo_ != 0) {
        output.writeUInt32(1, portNo_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, portNo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request) obj;

      if (getPortNo()
          != other.getPortNo()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_NO_FIELD_NUMBER;
      hash = (53 * hash) + getPortNo();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body for ofp_multipart_request of type OFPMP_PORT. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_port_stats_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_port_stats_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portNo_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request(this);
        result.portNo_ = portNo_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request.getDefaultInstance()) return this;
        if (other.getPortNo() != 0) {
          setPortNo(other.getPortNo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int portNo_ ;
      /**
       * <pre>
       * OFPMP_PORT message must request statistics
       * either for a single port (specified in
       * port_no) or for all ports (if port_no ==
       * OFPP_ANY). 
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public int getPortNo() {
        return portNo_;
      }
      /**
       * <pre>
       * OFPMP_PORT message must request statistics
       * either for a single port (specified in
       * port_no) or for all ports (if port_no ==
       * OFPP_ANY). 
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public Builder setPortNo(int value) {
        
        portNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OFPMP_PORT message must request statistics
       * either for a single port (specified in
       * port_no) or for all ports (if port_no ==
       * OFPP_ANY). 
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public Builder clearPortNo() {
        
        portNo_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_port_stats_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_port_stats_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_port_stats_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_port_stats_request>() {
      @java.lang.Override
      public ofp_port_stats_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_port_stats_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_port_stats_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_port_stats_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_port_statsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_port_stats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 port_no = 1;</code>
     */
    int getPortNo();

    /**
     * <pre>
     * Number of received packets. 
     * </pre>
     *
     * <code>uint64 rx_packets = 2;</code>
     */
    long getRxPackets();

    /**
     * <pre>
     * Number of transmitted packets. 
     * </pre>
     *
     * <code>uint64 tx_packets = 3;</code>
     */
    long getTxPackets();

    /**
     * <pre>
     * Number of received bytes. 
     * </pre>
     *
     * <code>uint64 rx_bytes = 4;</code>
     */
    long getRxBytes();

    /**
     * <pre>
     * Number of transmitted bytes. 
     * </pre>
     *
     * <code>uint64 tx_bytes = 5;</code>
     */
    long getTxBytes();

    /**
     * <pre>
     * Number of packets dropped by RX. 
     * </pre>
     *
     * <code>uint64 rx_dropped = 6;</code>
     */
    long getRxDropped();

    /**
     * <pre>
     * Number of packets dropped by TX. 
     * </pre>
     *
     * <code>uint64 tx_dropped = 7;</code>
     */
    long getTxDropped();

    /**
     * <pre>
     * Number of receive errors.  This is a super-set
     *of more specific receive errors and should be
     *greater than or equal to the sum of all
     *rx_*_err values. 
     * </pre>
     *
     * <code>uint64 rx_errors = 8;</code>
     */
    long getRxErrors();

    /**
     * <pre>
     * Number of transmit errors.  This is a super-set
     *of more specific transmit errors and should be
     *greater than or equal to the sum of all
     *tx_*_err values (none currently defined.) 
     * </pre>
     *
     * <code>uint64 tx_errors = 9;</code>
     */
    long getTxErrors();

    /**
     * <pre>
     * Number of frame alignment errors. 
     * </pre>
     *
     * <code>uint64 rx_frame_err = 10;</code>
     */
    long getRxFrameErr();

    /**
     * <pre>
     * Number of packets with RX overrun. 
     * </pre>
     *
     * <code>uint64 rx_over_err = 11;</code>
     */
    long getRxOverErr();

    /**
     * <pre>
     * Number of CRC errors. 
     * </pre>
     *
     * <code>uint64 rx_crc_err = 12;</code>
     */
    long getRxCrcErr();

    /**
     * <pre>
     * Number of collisions. 
     * </pre>
     *
     * <code>uint64 collisions = 13;</code>
     */
    long getCollisions();

    /**
     * <pre>
     * Time port has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 14;</code>
     */
    int getDurationSec();

    /**
     * <pre>
     * Time port has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 15;</code>
     */
    int getDurationNsec();
  }
  /**
   * <pre>
   * Body of reply to OFPMP_PORT request. If a counter is unsupported, set
   * the field to all ones. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_port_stats}
   */
  public  static final class ofp_port_stats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_port_stats)
      ofp_port_statsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_port_stats.newBuilder() to construct.
    private ofp_port_stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_port_stats() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_port_stats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_port_stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              portNo_ = input.readUInt32();
              break;
            }
            case 16: {

              rxPackets_ = input.readUInt64();
              break;
            }
            case 24: {

              txPackets_ = input.readUInt64();
              break;
            }
            case 32: {

              rxBytes_ = input.readUInt64();
              break;
            }
            case 40: {

              txBytes_ = input.readUInt64();
              break;
            }
            case 48: {

              rxDropped_ = input.readUInt64();
              break;
            }
            case 56: {

              txDropped_ = input.readUInt64();
              break;
            }
            case 64: {

              rxErrors_ = input.readUInt64();
              break;
            }
            case 72: {

              txErrors_ = input.readUInt64();
              break;
            }
            case 80: {

              rxFrameErr_ = input.readUInt64();
              break;
            }
            case 88: {

              rxOverErr_ = input.readUInt64();
              break;
            }
            case 96: {

              rxCrcErr_ = input.readUInt64();
              break;
            }
            case 104: {

              collisions_ = input.readUInt64();
              break;
            }
            case 112: {

              durationSec_ = input.readUInt32();
              break;
            }
            case 120: {

              durationNsec_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder.class);
    }

    public static final int PORT_NO_FIELD_NUMBER = 1;
    private int portNo_;
    /**
     * <code>uint32 port_no = 1;</code>
     */
    public int getPortNo() {
      return portNo_;
    }

    public static final int RX_PACKETS_FIELD_NUMBER = 2;
    private long rxPackets_;
    /**
     * <pre>
     * Number of received packets. 
     * </pre>
     *
     * <code>uint64 rx_packets = 2;</code>
     */
    public long getRxPackets() {
      return rxPackets_;
    }

    public static final int TX_PACKETS_FIELD_NUMBER = 3;
    private long txPackets_;
    /**
     * <pre>
     * Number of transmitted packets. 
     * </pre>
     *
     * <code>uint64 tx_packets = 3;</code>
     */
    public long getTxPackets() {
      return txPackets_;
    }

    public static final int RX_BYTES_FIELD_NUMBER = 4;
    private long rxBytes_;
    /**
     * <pre>
     * Number of received bytes. 
     * </pre>
     *
     * <code>uint64 rx_bytes = 4;</code>
     */
    public long getRxBytes() {
      return rxBytes_;
    }

    public static final int TX_BYTES_FIELD_NUMBER = 5;
    private long txBytes_;
    /**
     * <pre>
     * Number of transmitted bytes. 
     * </pre>
     *
     * <code>uint64 tx_bytes = 5;</code>
     */
    public long getTxBytes() {
      return txBytes_;
    }

    public static final int RX_DROPPED_FIELD_NUMBER = 6;
    private long rxDropped_;
    /**
     * <pre>
     * Number of packets dropped by RX. 
     * </pre>
     *
     * <code>uint64 rx_dropped = 6;</code>
     */
    public long getRxDropped() {
      return rxDropped_;
    }

    public static final int TX_DROPPED_FIELD_NUMBER = 7;
    private long txDropped_;
    /**
     * <pre>
     * Number of packets dropped by TX. 
     * </pre>
     *
     * <code>uint64 tx_dropped = 7;</code>
     */
    public long getTxDropped() {
      return txDropped_;
    }

    public static final int RX_ERRORS_FIELD_NUMBER = 8;
    private long rxErrors_;
    /**
     * <pre>
     * Number of receive errors.  This is a super-set
     *of more specific receive errors and should be
     *greater than or equal to the sum of all
     *rx_*_err values. 
     * </pre>
     *
     * <code>uint64 rx_errors = 8;</code>
     */
    public long getRxErrors() {
      return rxErrors_;
    }

    public static final int TX_ERRORS_FIELD_NUMBER = 9;
    private long txErrors_;
    /**
     * <pre>
     * Number of transmit errors.  This is a super-set
     *of more specific transmit errors and should be
     *greater than or equal to the sum of all
     *tx_*_err values (none currently defined.) 
     * </pre>
     *
     * <code>uint64 tx_errors = 9;</code>
     */
    public long getTxErrors() {
      return txErrors_;
    }

    public static final int RX_FRAME_ERR_FIELD_NUMBER = 10;
    private long rxFrameErr_;
    /**
     * <pre>
     * Number of frame alignment errors. 
     * </pre>
     *
     * <code>uint64 rx_frame_err = 10;</code>
     */
    public long getRxFrameErr() {
      return rxFrameErr_;
    }

    public static final int RX_OVER_ERR_FIELD_NUMBER = 11;
    private long rxOverErr_;
    /**
     * <pre>
     * Number of packets with RX overrun. 
     * </pre>
     *
     * <code>uint64 rx_over_err = 11;</code>
     */
    public long getRxOverErr() {
      return rxOverErr_;
    }

    public static final int RX_CRC_ERR_FIELD_NUMBER = 12;
    private long rxCrcErr_;
    /**
     * <pre>
     * Number of CRC errors. 
     * </pre>
     *
     * <code>uint64 rx_crc_err = 12;</code>
     */
    public long getRxCrcErr() {
      return rxCrcErr_;
    }

    public static final int COLLISIONS_FIELD_NUMBER = 13;
    private long collisions_;
    /**
     * <pre>
     * Number of collisions. 
     * </pre>
     *
     * <code>uint64 collisions = 13;</code>
     */
    public long getCollisions() {
      return collisions_;
    }

    public static final int DURATION_SEC_FIELD_NUMBER = 14;
    private int durationSec_;
    /**
     * <pre>
     * Time port has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 14;</code>
     */
    public int getDurationSec() {
      return durationSec_;
    }

    public static final int DURATION_NSEC_FIELD_NUMBER = 15;
    private int durationNsec_;
    /**
     * <pre>
     * Time port has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 15;</code>
     */
    public int getDurationNsec() {
      return durationNsec_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portNo_ != 0) {
        output.writeUInt32(1, portNo_);
      }
      if (rxPackets_ != 0L) {
        output.writeUInt64(2, rxPackets_);
      }
      if (txPackets_ != 0L) {
        output.writeUInt64(3, txPackets_);
      }
      if (rxBytes_ != 0L) {
        output.writeUInt64(4, rxBytes_);
      }
      if (txBytes_ != 0L) {
        output.writeUInt64(5, txBytes_);
      }
      if (rxDropped_ != 0L) {
        output.writeUInt64(6, rxDropped_);
      }
      if (txDropped_ != 0L) {
        output.writeUInt64(7, txDropped_);
      }
      if (rxErrors_ != 0L) {
        output.writeUInt64(8, rxErrors_);
      }
      if (txErrors_ != 0L) {
        output.writeUInt64(9, txErrors_);
      }
      if (rxFrameErr_ != 0L) {
        output.writeUInt64(10, rxFrameErr_);
      }
      if (rxOverErr_ != 0L) {
        output.writeUInt64(11, rxOverErr_);
      }
      if (rxCrcErr_ != 0L) {
        output.writeUInt64(12, rxCrcErr_);
      }
      if (collisions_ != 0L) {
        output.writeUInt64(13, collisions_);
      }
      if (durationSec_ != 0) {
        output.writeUInt32(14, durationSec_);
      }
      if (durationNsec_ != 0) {
        output.writeUInt32(15, durationNsec_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, portNo_);
      }
      if (rxPackets_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, rxPackets_);
      }
      if (txPackets_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, txPackets_);
      }
      if (rxBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, rxBytes_);
      }
      if (txBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, txBytes_);
      }
      if (rxDropped_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, rxDropped_);
      }
      if (txDropped_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, txDropped_);
      }
      if (rxErrors_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, rxErrors_);
      }
      if (txErrors_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, txErrors_);
      }
      if (rxFrameErr_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, rxFrameErr_);
      }
      if (rxOverErr_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, rxOverErr_);
      }
      if (rxCrcErr_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, rxCrcErr_);
      }
      if (collisions_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, collisions_);
      }
      if (durationSec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, durationSec_);
      }
      if (durationNsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, durationNsec_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_stats)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_port_stats other = (org.opencord.voltha.openflow13.Openflow13.ofp_port_stats) obj;

      if (getPortNo()
          != other.getPortNo()) return false;
      if (getRxPackets()
          != other.getRxPackets()) return false;
      if (getTxPackets()
          != other.getTxPackets()) return false;
      if (getRxBytes()
          != other.getRxBytes()) return false;
      if (getTxBytes()
          != other.getTxBytes()) return false;
      if (getRxDropped()
          != other.getRxDropped()) return false;
      if (getTxDropped()
          != other.getTxDropped()) return false;
      if (getRxErrors()
          != other.getRxErrors()) return false;
      if (getTxErrors()
          != other.getTxErrors()) return false;
      if (getRxFrameErr()
          != other.getRxFrameErr()) return false;
      if (getRxOverErr()
          != other.getRxOverErr()) return false;
      if (getRxCrcErr()
          != other.getRxCrcErr()) return false;
      if (getCollisions()
          != other.getCollisions()) return false;
      if (getDurationSec()
          != other.getDurationSec()) return false;
      if (getDurationNsec()
          != other.getDurationNsec()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_NO_FIELD_NUMBER;
      hash = (53 * hash) + getPortNo();
      hash = (37 * hash) + RX_PACKETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRxPackets());
      hash = (37 * hash) + TX_PACKETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxPackets());
      hash = (37 * hash) + RX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRxBytes());
      hash = (37 * hash) + TX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxBytes());
      hash = (37 * hash) + RX_DROPPED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRxDropped());
      hash = (37 * hash) + TX_DROPPED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxDropped());
      hash = (37 * hash) + RX_ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRxErrors());
      hash = (37 * hash) + TX_ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxErrors());
      hash = (37 * hash) + RX_FRAME_ERR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRxFrameErr());
      hash = (37 * hash) + RX_OVER_ERR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRxOverErr());
      hash = (37 * hash) + RX_CRC_ERR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRxCrcErr());
      hash = (37 * hash) + COLLISIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCollisions());
      hash = (37 * hash) + DURATION_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationSec();
      hash = (37 * hash) + DURATION_NSEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationNsec();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_port_stats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_PORT request. If a counter is unsupported, set
     * the field to all ones. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_port_stats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_port_stats)
        org.opencord.voltha.openflow13.Openflow13.ofp_port_statsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portNo_ = 0;

        rxPackets_ = 0L;

        txPackets_ = 0L;

        rxBytes_ = 0L;

        txBytes_ = 0L;

        rxDropped_ = 0L;

        txDropped_ = 0L;

        rxErrors_ = 0L;

        txErrors_ = 0L;

        rxFrameErr_ = 0L;

        rxOverErr_ = 0L;

        rxCrcErr_ = 0L;

        collisions_ = 0L;

        durationSec_ = 0;

        durationNsec_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_port_stats_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_stats result = new org.opencord.voltha.openflow13.Openflow13.ofp_port_stats(this);
        result.portNo_ = portNo_;
        result.rxPackets_ = rxPackets_;
        result.txPackets_ = txPackets_;
        result.rxBytes_ = rxBytes_;
        result.txBytes_ = txBytes_;
        result.rxDropped_ = rxDropped_;
        result.txDropped_ = txDropped_;
        result.rxErrors_ = rxErrors_;
        result.txErrors_ = txErrors_;
        result.rxFrameErr_ = rxFrameErr_;
        result.rxOverErr_ = rxOverErr_;
        result.rxCrcErr_ = rxCrcErr_;
        result.collisions_ = collisions_;
        result.durationSec_ = durationSec_;
        result.durationNsec_ = durationNsec_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_port_stats) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_port_stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_port_stats other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_port_stats.getDefaultInstance()) return this;
        if (other.getPortNo() != 0) {
          setPortNo(other.getPortNo());
        }
        if (other.getRxPackets() != 0L) {
          setRxPackets(other.getRxPackets());
        }
        if (other.getTxPackets() != 0L) {
          setTxPackets(other.getTxPackets());
        }
        if (other.getRxBytes() != 0L) {
          setRxBytes(other.getRxBytes());
        }
        if (other.getTxBytes() != 0L) {
          setTxBytes(other.getTxBytes());
        }
        if (other.getRxDropped() != 0L) {
          setRxDropped(other.getRxDropped());
        }
        if (other.getTxDropped() != 0L) {
          setTxDropped(other.getTxDropped());
        }
        if (other.getRxErrors() != 0L) {
          setRxErrors(other.getRxErrors());
        }
        if (other.getTxErrors() != 0L) {
          setTxErrors(other.getTxErrors());
        }
        if (other.getRxFrameErr() != 0L) {
          setRxFrameErr(other.getRxFrameErr());
        }
        if (other.getRxOverErr() != 0L) {
          setRxOverErr(other.getRxOverErr());
        }
        if (other.getRxCrcErr() != 0L) {
          setRxCrcErr(other.getRxCrcErr());
        }
        if (other.getCollisions() != 0L) {
          setCollisions(other.getCollisions());
        }
        if (other.getDurationSec() != 0) {
          setDurationSec(other.getDurationSec());
        }
        if (other.getDurationNsec() != 0) {
          setDurationNsec(other.getDurationNsec());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_port_stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_port_stats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int portNo_ ;
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public int getPortNo() {
        return portNo_;
      }
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public Builder setPortNo(int value) {
        
        portNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public Builder clearPortNo() {
        
        portNo_ = 0;
        onChanged();
        return this;
      }

      private long rxPackets_ ;
      /**
       * <pre>
       * Number of received packets. 
       * </pre>
       *
       * <code>uint64 rx_packets = 2;</code>
       */
      public long getRxPackets() {
        return rxPackets_;
      }
      /**
       * <pre>
       * Number of received packets. 
       * </pre>
       *
       * <code>uint64 rx_packets = 2;</code>
       */
      public Builder setRxPackets(long value) {
        
        rxPackets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of received packets. 
       * </pre>
       *
       * <code>uint64 rx_packets = 2;</code>
       */
      public Builder clearRxPackets() {
        
        rxPackets_ = 0L;
        onChanged();
        return this;
      }

      private long txPackets_ ;
      /**
       * <pre>
       * Number of transmitted packets. 
       * </pre>
       *
       * <code>uint64 tx_packets = 3;</code>
       */
      public long getTxPackets() {
        return txPackets_;
      }
      /**
       * <pre>
       * Number of transmitted packets. 
       * </pre>
       *
       * <code>uint64 tx_packets = 3;</code>
       */
      public Builder setTxPackets(long value) {
        
        txPackets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of transmitted packets. 
       * </pre>
       *
       * <code>uint64 tx_packets = 3;</code>
       */
      public Builder clearTxPackets() {
        
        txPackets_ = 0L;
        onChanged();
        return this;
      }

      private long rxBytes_ ;
      /**
       * <pre>
       * Number of received bytes. 
       * </pre>
       *
       * <code>uint64 rx_bytes = 4;</code>
       */
      public long getRxBytes() {
        return rxBytes_;
      }
      /**
       * <pre>
       * Number of received bytes. 
       * </pre>
       *
       * <code>uint64 rx_bytes = 4;</code>
       */
      public Builder setRxBytes(long value) {
        
        rxBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of received bytes. 
       * </pre>
       *
       * <code>uint64 rx_bytes = 4;</code>
       */
      public Builder clearRxBytes() {
        
        rxBytes_ = 0L;
        onChanged();
        return this;
      }

      private long txBytes_ ;
      /**
       * <pre>
       * Number of transmitted bytes. 
       * </pre>
       *
       * <code>uint64 tx_bytes = 5;</code>
       */
      public long getTxBytes() {
        return txBytes_;
      }
      /**
       * <pre>
       * Number of transmitted bytes. 
       * </pre>
       *
       * <code>uint64 tx_bytes = 5;</code>
       */
      public Builder setTxBytes(long value) {
        
        txBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of transmitted bytes. 
       * </pre>
       *
       * <code>uint64 tx_bytes = 5;</code>
       */
      public Builder clearTxBytes() {
        
        txBytes_ = 0L;
        onChanged();
        return this;
      }

      private long rxDropped_ ;
      /**
       * <pre>
       * Number of packets dropped by RX. 
       * </pre>
       *
       * <code>uint64 rx_dropped = 6;</code>
       */
      public long getRxDropped() {
        return rxDropped_;
      }
      /**
       * <pre>
       * Number of packets dropped by RX. 
       * </pre>
       *
       * <code>uint64 rx_dropped = 6;</code>
       */
      public Builder setRxDropped(long value) {
        
        rxDropped_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets dropped by RX. 
       * </pre>
       *
       * <code>uint64 rx_dropped = 6;</code>
       */
      public Builder clearRxDropped() {
        
        rxDropped_ = 0L;
        onChanged();
        return this;
      }

      private long txDropped_ ;
      /**
       * <pre>
       * Number of packets dropped by TX. 
       * </pre>
       *
       * <code>uint64 tx_dropped = 7;</code>
       */
      public long getTxDropped() {
        return txDropped_;
      }
      /**
       * <pre>
       * Number of packets dropped by TX. 
       * </pre>
       *
       * <code>uint64 tx_dropped = 7;</code>
       */
      public Builder setTxDropped(long value) {
        
        txDropped_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets dropped by TX. 
       * </pre>
       *
       * <code>uint64 tx_dropped = 7;</code>
       */
      public Builder clearTxDropped() {
        
        txDropped_ = 0L;
        onChanged();
        return this;
      }

      private long rxErrors_ ;
      /**
       * <pre>
       * Number of receive errors.  This is a super-set
       *of more specific receive errors and should be
       *greater than or equal to the sum of all
       *rx_*_err values. 
       * </pre>
       *
       * <code>uint64 rx_errors = 8;</code>
       */
      public long getRxErrors() {
        return rxErrors_;
      }
      /**
       * <pre>
       * Number of receive errors.  This is a super-set
       *of more specific receive errors and should be
       *greater than or equal to the sum of all
       *rx_*_err values. 
       * </pre>
       *
       * <code>uint64 rx_errors = 8;</code>
       */
      public Builder setRxErrors(long value) {
        
        rxErrors_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of receive errors.  This is a super-set
       *of more specific receive errors and should be
       *greater than or equal to the sum of all
       *rx_*_err values. 
       * </pre>
       *
       * <code>uint64 rx_errors = 8;</code>
       */
      public Builder clearRxErrors() {
        
        rxErrors_ = 0L;
        onChanged();
        return this;
      }

      private long txErrors_ ;
      /**
       * <pre>
       * Number of transmit errors.  This is a super-set
       *of more specific transmit errors and should be
       *greater than or equal to the sum of all
       *tx_*_err values (none currently defined.) 
       * </pre>
       *
       * <code>uint64 tx_errors = 9;</code>
       */
      public long getTxErrors() {
        return txErrors_;
      }
      /**
       * <pre>
       * Number of transmit errors.  This is a super-set
       *of more specific transmit errors and should be
       *greater than or equal to the sum of all
       *tx_*_err values (none currently defined.) 
       * </pre>
       *
       * <code>uint64 tx_errors = 9;</code>
       */
      public Builder setTxErrors(long value) {
        
        txErrors_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of transmit errors.  This is a super-set
       *of more specific transmit errors and should be
       *greater than or equal to the sum of all
       *tx_*_err values (none currently defined.) 
       * </pre>
       *
       * <code>uint64 tx_errors = 9;</code>
       */
      public Builder clearTxErrors() {
        
        txErrors_ = 0L;
        onChanged();
        return this;
      }

      private long rxFrameErr_ ;
      /**
       * <pre>
       * Number of frame alignment errors. 
       * </pre>
       *
       * <code>uint64 rx_frame_err = 10;</code>
       */
      public long getRxFrameErr() {
        return rxFrameErr_;
      }
      /**
       * <pre>
       * Number of frame alignment errors. 
       * </pre>
       *
       * <code>uint64 rx_frame_err = 10;</code>
       */
      public Builder setRxFrameErr(long value) {
        
        rxFrameErr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of frame alignment errors. 
       * </pre>
       *
       * <code>uint64 rx_frame_err = 10;</code>
       */
      public Builder clearRxFrameErr() {
        
        rxFrameErr_ = 0L;
        onChanged();
        return this;
      }

      private long rxOverErr_ ;
      /**
       * <pre>
       * Number of packets with RX overrun. 
       * </pre>
       *
       * <code>uint64 rx_over_err = 11;</code>
       */
      public long getRxOverErr() {
        return rxOverErr_;
      }
      /**
       * <pre>
       * Number of packets with RX overrun. 
       * </pre>
       *
       * <code>uint64 rx_over_err = 11;</code>
       */
      public Builder setRxOverErr(long value) {
        
        rxOverErr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets with RX overrun. 
       * </pre>
       *
       * <code>uint64 rx_over_err = 11;</code>
       */
      public Builder clearRxOverErr() {
        
        rxOverErr_ = 0L;
        onChanged();
        return this;
      }

      private long rxCrcErr_ ;
      /**
       * <pre>
       * Number of CRC errors. 
       * </pre>
       *
       * <code>uint64 rx_crc_err = 12;</code>
       */
      public long getRxCrcErr() {
        return rxCrcErr_;
      }
      /**
       * <pre>
       * Number of CRC errors. 
       * </pre>
       *
       * <code>uint64 rx_crc_err = 12;</code>
       */
      public Builder setRxCrcErr(long value) {
        
        rxCrcErr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of CRC errors. 
       * </pre>
       *
       * <code>uint64 rx_crc_err = 12;</code>
       */
      public Builder clearRxCrcErr() {
        
        rxCrcErr_ = 0L;
        onChanged();
        return this;
      }

      private long collisions_ ;
      /**
       * <pre>
       * Number of collisions. 
       * </pre>
       *
       * <code>uint64 collisions = 13;</code>
       */
      public long getCollisions() {
        return collisions_;
      }
      /**
       * <pre>
       * Number of collisions. 
       * </pre>
       *
       * <code>uint64 collisions = 13;</code>
       */
      public Builder setCollisions(long value) {
        
        collisions_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of collisions. 
       * </pre>
       *
       * <code>uint64 collisions = 13;</code>
       */
      public Builder clearCollisions() {
        
        collisions_ = 0L;
        onChanged();
        return this;
      }

      private int durationSec_ ;
      /**
       * <pre>
       * Time port has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 14;</code>
       */
      public int getDurationSec() {
        return durationSec_;
      }
      /**
       * <pre>
       * Time port has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 14;</code>
       */
      public Builder setDurationSec(int value) {
        
        durationSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time port has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 14;</code>
       */
      public Builder clearDurationSec() {
        
        durationSec_ = 0;
        onChanged();
        return this;
      }

      private int durationNsec_ ;
      /**
       * <pre>
       * Time port has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 15;</code>
       */
      public int getDurationNsec() {
        return durationNsec_;
      }
      /**
       * <pre>
       * Time port has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 15;</code>
       */
      public Builder setDurationNsec(int value) {
        
        durationNsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time port has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 15;</code>
       */
      public Builder clearDurationNsec() {
        
        durationNsec_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_port_stats)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_port_stats)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_port_stats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_port_stats();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_port_stats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_port_stats>
        PARSER = new com.google.protobuf.AbstractParser<ofp_port_stats>() {
      @java.lang.Override
      public ofp_port_stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_port_stats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_port_stats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_port_stats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_stats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_group_stats_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_group_stats_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * All groups if OFPG_ALL. 
     * </pre>
     *
     * <code>uint32 group_id = 1;</code>
     */
    int getGroupId();
  }
  /**
   * <pre>
   * Body of OFPMP_GROUP request. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_group_stats_request}
   */
  public  static final class ofp_group_stats_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_group_stats_request)
      ofp_group_stats_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_group_stats_request.newBuilder() to construct.
    private ofp_group_stats_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_group_stats_request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_group_stats_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_group_stats_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              groupId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request.Builder.class);
    }

    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private int groupId_;
    /**
     * <pre>
     * All groups if OFPG_ALL. 
     * </pre>
     *
     * <code>uint32 group_id = 1;</code>
     */
    public int getGroupId() {
      return groupId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (groupId_ != 0) {
        output.writeUInt32(1, groupId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, groupId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request) obj;

      if (getGroupId()
          != other.getGroupId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of OFPMP_GROUP request. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_group_stats_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_group_stats_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        groupId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request(this);
        result.groupId_ = groupId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request.getDefaultInstance()) return this;
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int groupId_ ;
      /**
       * <pre>
       * All groups if OFPG_ALL. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <pre>
       * All groups if OFPG_ALL. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public Builder setGroupId(int value) {
        
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All groups if OFPG_ALL. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public Builder clearGroupId() {
        
        groupId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_group_stats_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_group_stats_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_group_stats_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_group_stats_request>() {
      @java.lang.Override
      public ofp_group_stats_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_group_stats_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_group_stats_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_group_stats_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_bucket_counterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_bucket_counter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of packets processed by bucket. 
     * </pre>
     *
     * <code>uint64 packet_count = 1;</code>
     */
    long getPacketCount();

    /**
     * <pre>
     * Number of bytes processed by bucket. 
     * </pre>
     *
     * <code>uint64 byte_count = 2;</code>
     */
    long getByteCount();
  }
  /**
   * <pre>
   * Used in group stats replies. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_bucket_counter}
   */
  public  static final class ofp_bucket_counter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_bucket_counter)
      ofp_bucket_counterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_bucket_counter.newBuilder() to construct.
    private ofp_bucket_counter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_bucket_counter() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_bucket_counter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_bucket_counter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              packetCount_ = input.readUInt64();
              break;
            }
            case 16: {

              byteCount_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_counter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_counter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.class, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder.class);
    }

    public static final int PACKET_COUNT_FIELD_NUMBER = 1;
    private long packetCount_;
    /**
     * <pre>
     * Number of packets processed by bucket. 
     * </pre>
     *
     * <code>uint64 packet_count = 1;</code>
     */
    public long getPacketCount() {
      return packetCount_;
    }

    public static final int BYTE_COUNT_FIELD_NUMBER = 2;
    private long byteCount_;
    /**
     * <pre>
     * Number of bytes processed by bucket. 
     * </pre>
     *
     * <code>uint64 byte_count = 2;</code>
     */
    public long getByteCount() {
      return byteCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (packetCount_ != 0L) {
        output.writeUInt64(1, packetCount_);
      }
      if (byteCount_ != 0L) {
        output.writeUInt64(2, byteCount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (packetCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, packetCount_);
      }
      if (byteCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, byteCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter other = (org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter) obj;

      if (getPacketCount()
          != other.getPacketCount()) return false;
      if (getByteCount()
          != other.getByteCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PACKET_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPacketCount());
      hash = (37 * hash) + BYTE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteCount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used in group stats replies. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_bucket_counter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_bucket_counter)
        org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_counter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_counter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.class, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        packetCount_ = 0L;

        byteCount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_bucket_counter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter result = new org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter(this);
        result.packetCount_ = packetCount_;
        result.byteCount_ = byteCount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.getDefaultInstance()) return this;
        if (other.getPacketCount() != 0L) {
          setPacketCount(other.getPacketCount());
        }
        if (other.getByteCount() != 0L) {
          setByteCount(other.getByteCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long packetCount_ ;
      /**
       * <pre>
       * Number of packets processed by bucket. 
       * </pre>
       *
       * <code>uint64 packet_count = 1;</code>
       */
      public long getPacketCount() {
        return packetCount_;
      }
      /**
       * <pre>
       * Number of packets processed by bucket. 
       * </pre>
       *
       * <code>uint64 packet_count = 1;</code>
       */
      public Builder setPacketCount(long value) {
        
        packetCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets processed by bucket. 
       * </pre>
       *
       * <code>uint64 packet_count = 1;</code>
       */
      public Builder clearPacketCount() {
        
        packetCount_ = 0L;
        onChanged();
        return this;
      }

      private long byteCount_ ;
      /**
       * <pre>
       * Number of bytes processed by bucket. 
       * </pre>
       *
       * <code>uint64 byte_count = 2;</code>
       */
      public long getByteCount() {
        return byteCount_;
      }
      /**
       * <pre>
       * Number of bytes processed by bucket. 
       * </pre>
       *
       * <code>uint64 byte_count = 2;</code>
       */
      public Builder setByteCount(long value) {
        
        byteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of bytes processed by bucket. 
       * </pre>
       *
       * <code>uint64 byte_count = 2;</code>
       */
      public Builder clearByteCount() {
        
        byteCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_bucket_counter)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_bucket_counter)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_bucket_counter>
        PARSER = new com.google.protobuf.AbstractParser<ofp_bucket_counter>() {
      @java.lang.Override
      public ofp_bucket_counter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_bucket_counter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_bucket_counter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_bucket_counter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_group_statsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_group_stats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 1;</code>
     */
    int getGroupId();

    /**
     * <pre>
     * Number of flows or groups that directly
     *forward to this group. 
     * </pre>
     *
     * <code>uint32 ref_count = 2;</code>
     */
    int getRefCount();

    /**
     * <pre>
     * Number of packets processed by group. 
     * </pre>
     *
     * <code>uint64 packet_count = 3;</code>
     */
    long getPacketCount();

    /**
     * <pre>
     * Number of bytes processed by group. 
     * </pre>
     *
     * <code>uint64 byte_count = 4;</code>
     */
    long getByteCount();

    /**
     * <pre>
     * Time group has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 5;</code>
     */
    int getDurationSec();

    /**
     * <pre>
     * Time group has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 6;</code>
     */
    int getDurationNsec();

    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter> 
        getBucketStatsList();
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter getBucketStats(int index);
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    int getBucketStatsCount();
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder> 
        getBucketStatsOrBuilderList();
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder getBucketStatsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Body of reply to OFPMP_GROUP request. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_group_stats}
   */
  public  static final class ofp_group_stats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_group_stats)
      ofp_group_statsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_group_stats.newBuilder() to construct.
    private ofp_group_stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_group_stats() {
      bucketStats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_group_stats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_group_stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              groupId_ = input.readUInt32();
              break;
            }
            case 16: {

              refCount_ = input.readUInt32();
              break;
            }
            case 24: {

              packetCount_ = input.readUInt64();
              break;
            }
            case 32: {

              byteCount_ = input.readUInt64();
              break;
            }
            case 40: {

              durationSec_ = input.readUInt32();
              break;
            }
            case 48: {

              durationNsec_ = input.readUInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                bucketStats_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter>();
                mutable_bitField0_ |= 0x00000001;
              }
              bucketStats_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          bucketStats_ = java.util.Collections.unmodifiableList(bucketStats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder.class);
    }

    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private int groupId_;
    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 1;</code>
     */
    public int getGroupId() {
      return groupId_;
    }

    public static final int REF_COUNT_FIELD_NUMBER = 2;
    private int refCount_;
    /**
     * <pre>
     * Number of flows or groups that directly
     *forward to this group. 
     * </pre>
     *
     * <code>uint32 ref_count = 2;</code>
     */
    public int getRefCount() {
      return refCount_;
    }

    public static final int PACKET_COUNT_FIELD_NUMBER = 3;
    private long packetCount_;
    /**
     * <pre>
     * Number of packets processed by group. 
     * </pre>
     *
     * <code>uint64 packet_count = 3;</code>
     */
    public long getPacketCount() {
      return packetCount_;
    }

    public static final int BYTE_COUNT_FIELD_NUMBER = 4;
    private long byteCount_;
    /**
     * <pre>
     * Number of bytes processed by group. 
     * </pre>
     *
     * <code>uint64 byte_count = 4;</code>
     */
    public long getByteCount() {
      return byteCount_;
    }

    public static final int DURATION_SEC_FIELD_NUMBER = 5;
    private int durationSec_;
    /**
     * <pre>
     * Time group has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 5;</code>
     */
    public int getDurationSec() {
      return durationSec_;
    }

    public static final int DURATION_NSEC_FIELD_NUMBER = 6;
    private int durationNsec_;
    /**
     * <pre>
     * Time group has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 6;</code>
     */
    public int getDurationNsec() {
      return durationNsec_;
    }

    public static final int BUCKET_STATS_FIELD_NUMBER = 7;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter> bucketStats_;
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter> getBucketStatsList() {
      return bucketStats_;
    }
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder> 
        getBucketStatsOrBuilderList() {
      return bucketStats_;
    }
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    public int getBucketStatsCount() {
      return bucketStats_.size();
    }
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter getBucketStats(int index) {
      return bucketStats_.get(index);
    }
    /**
     * <pre>
     * One counter set per
     *bucket. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder getBucketStatsOrBuilder(
        int index) {
      return bucketStats_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (groupId_ != 0) {
        output.writeUInt32(1, groupId_);
      }
      if (refCount_ != 0) {
        output.writeUInt32(2, refCount_);
      }
      if (packetCount_ != 0L) {
        output.writeUInt64(3, packetCount_);
      }
      if (byteCount_ != 0L) {
        output.writeUInt64(4, byteCount_);
      }
      if (durationSec_ != 0) {
        output.writeUInt32(5, durationSec_);
      }
      if (durationNsec_ != 0) {
        output.writeUInt32(6, durationNsec_);
      }
      for (int i = 0; i < bucketStats_.size(); i++) {
        output.writeMessage(7, bucketStats_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, groupId_);
      }
      if (refCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, refCount_);
      }
      if (packetCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, packetCount_);
      }
      if (byteCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, byteCount_);
      }
      if (durationSec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, durationSec_);
      }
      if (durationNsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, durationNsec_);
      }
      for (int i = 0; i < bucketStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, bucketStats_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_stats)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_group_stats other = (org.opencord.voltha.openflow13.Openflow13.ofp_group_stats) obj;

      if (getGroupId()
          != other.getGroupId()) return false;
      if (getRefCount()
          != other.getRefCount()) return false;
      if (getPacketCount()
          != other.getPacketCount()) return false;
      if (getByteCount()
          != other.getByteCount()) return false;
      if (getDurationSec()
          != other.getDurationSec()) return false;
      if (getDurationNsec()
          != other.getDurationNsec()) return false;
      if (!getBucketStatsList()
          .equals(other.getBucketStatsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      hash = (37 * hash) + REF_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getRefCount();
      hash = (37 * hash) + PACKET_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPacketCount());
      hash = (37 * hash) + BYTE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteCount());
      hash = (37 * hash) + DURATION_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationSec();
      hash = (37 * hash) + DURATION_NSEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationNsec();
      if (getBucketStatsCount() > 0) {
        hash = (37 * hash) + BUCKET_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getBucketStatsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_group_stats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_GROUP request. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_group_stats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_group_stats)
        org.opencord.voltha.openflow13.Openflow13.ofp_group_statsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBucketStatsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        groupId_ = 0;

        refCount_ = 0;

        packetCount_ = 0L;

        byteCount_ = 0L;

        durationSec_ = 0;

        durationNsec_ = 0;

        if (bucketStatsBuilder_ == null) {
          bucketStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bucketStatsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_stats_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_stats result = new org.opencord.voltha.openflow13.Openflow13.ofp_group_stats(this);
        int from_bitField0_ = bitField0_;
        result.groupId_ = groupId_;
        result.refCount_ = refCount_;
        result.packetCount_ = packetCount_;
        result.byteCount_ = byteCount_;
        result.durationSec_ = durationSec_;
        result.durationNsec_ = durationNsec_;
        if (bucketStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            bucketStats_ = java.util.Collections.unmodifiableList(bucketStats_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.bucketStats_ = bucketStats_;
        } else {
          result.bucketStats_ = bucketStatsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_stats) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_group_stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_group_stats other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.getDefaultInstance()) return this;
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        if (other.getRefCount() != 0) {
          setRefCount(other.getRefCount());
        }
        if (other.getPacketCount() != 0L) {
          setPacketCount(other.getPacketCount());
        }
        if (other.getByteCount() != 0L) {
          setByteCount(other.getByteCount());
        }
        if (other.getDurationSec() != 0) {
          setDurationSec(other.getDurationSec());
        }
        if (other.getDurationNsec() != 0) {
          setDurationNsec(other.getDurationNsec());
        }
        if (bucketStatsBuilder_ == null) {
          if (!other.bucketStats_.isEmpty()) {
            if (bucketStats_.isEmpty()) {
              bucketStats_ = other.bucketStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBucketStatsIsMutable();
              bucketStats_.addAll(other.bucketStats_);
            }
            onChanged();
          }
        } else {
          if (!other.bucketStats_.isEmpty()) {
            if (bucketStatsBuilder_.isEmpty()) {
              bucketStatsBuilder_.dispose();
              bucketStatsBuilder_ = null;
              bucketStats_ = other.bucketStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bucketStatsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBucketStatsFieldBuilder() : null;
            } else {
              bucketStatsBuilder_.addAllMessages(other.bucketStats_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_group_stats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int groupId_ ;
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public Builder setGroupId(int value) {
        
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 1;</code>
       */
      public Builder clearGroupId() {
        
        groupId_ = 0;
        onChanged();
        return this;
      }

      private int refCount_ ;
      /**
       * <pre>
       * Number of flows or groups that directly
       *forward to this group. 
       * </pre>
       *
       * <code>uint32 ref_count = 2;</code>
       */
      public int getRefCount() {
        return refCount_;
      }
      /**
       * <pre>
       * Number of flows or groups that directly
       *forward to this group. 
       * </pre>
       *
       * <code>uint32 ref_count = 2;</code>
       */
      public Builder setRefCount(int value) {
        
        refCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of flows or groups that directly
       *forward to this group. 
       * </pre>
       *
       * <code>uint32 ref_count = 2;</code>
       */
      public Builder clearRefCount() {
        
        refCount_ = 0;
        onChanged();
        return this;
      }

      private long packetCount_ ;
      /**
       * <pre>
       * Number of packets processed by group. 
       * </pre>
       *
       * <code>uint64 packet_count = 3;</code>
       */
      public long getPacketCount() {
        return packetCount_;
      }
      /**
       * <pre>
       * Number of packets processed by group. 
       * </pre>
       *
       * <code>uint64 packet_count = 3;</code>
       */
      public Builder setPacketCount(long value) {
        
        packetCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets processed by group. 
       * </pre>
       *
       * <code>uint64 packet_count = 3;</code>
       */
      public Builder clearPacketCount() {
        
        packetCount_ = 0L;
        onChanged();
        return this;
      }

      private long byteCount_ ;
      /**
       * <pre>
       * Number of bytes processed by group. 
       * </pre>
       *
       * <code>uint64 byte_count = 4;</code>
       */
      public long getByteCount() {
        return byteCount_;
      }
      /**
       * <pre>
       * Number of bytes processed by group. 
       * </pre>
       *
       * <code>uint64 byte_count = 4;</code>
       */
      public Builder setByteCount(long value) {
        
        byteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of bytes processed by group. 
       * </pre>
       *
       * <code>uint64 byte_count = 4;</code>
       */
      public Builder clearByteCount() {
        
        byteCount_ = 0L;
        onChanged();
        return this;
      }

      private int durationSec_ ;
      /**
       * <pre>
       * Time group has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public int getDurationSec() {
        return durationSec_;
      }
      /**
       * <pre>
       * Time group has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public Builder setDurationSec(int value) {
        
        durationSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time group has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public Builder clearDurationSec() {
        
        durationSec_ = 0;
        onChanged();
        return this;
      }

      private int durationNsec_ ;
      /**
       * <pre>
       * Time group has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public int getDurationNsec() {
        return durationNsec_;
      }
      /**
       * <pre>
       * Time group has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public Builder setDurationNsec(int value) {
        
        durationNsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time group has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public Builder clearDurationNsec() {
        
        durationNsec_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter> bucketStats_ =
        java.util.Collections.emptyList();
      private void ensureBucketStatsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          bucketStats_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter>(bucketStats_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder> bucketStatsBuilder_;

      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter> getBucketStatsList() {
        if (bucketStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bucketStats_);
        } else {
          return bucketStatsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public int getBucketStatsCount() {
        if (bucketStatsBuilder_ == null) {
          return bucketStats_.size();
        } else {
          return bucketStatsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter getBucketStats(int index) {
        if (bucketStatsBuilder_ == null) {
          return bucketStats_.get(index);
        } else {
          return bucketStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder setBucketStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter value) {
        if (bucketStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketStatsIsMutable();
          bucketStats_.set(index, value);
          onChanged();
        } else {
          bucketStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder setBucketStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder builderForValue) {
        if (bucketStatsBuilder_ == null) {
          ensureBucketStatsIsMutable();
          bucketStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          bucketStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder addBucketStats(org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter value) {
        if (bucketStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketStatsIsMutable();
          bucketStats_.add(value);
          onChanged();
        } else {
          bucketStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder addBucketStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter value) {
        if (bucketStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketStatsIsMutable();
          bucketStats_.add(index, value);
          onChanged();
        } else {
          bucketStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder addBucketStats(
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder builderForValue) {
        if (bucketStatsBuilder_ == null) {
          ensureBucketStatsIsMutable();
          bucketStats_.add(builderForValue.build());
          onChanged();
        } else {
          bucketStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder addBucketStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder builderForValue) {
        if (bucketStatsBuilder_ == null) {
          ensureBucketStatsIsMutable();
          bucketStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          bucketStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder addAllBucketStats(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter> values) {
        if (bucketStatsBuilder_ == null) {
          ensureBucketStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bucketStats_);
          onChanged();
        } else {
          bucketStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder clearBucketStats() {
        if (bucketStatsBuilder_ == null) {
          bucketStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bucketStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public Builder removeBucketStats(int index) {
        if (bucketStatsBuilder_ == null) {
          ensureBucketStatsIsMutable();
          bucketStats_.remove(index);
          onChanged();
        } else {
          bucketStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder getBucketStatsBuilder(
          int index) {
        return getBucketStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder getBucketStatsOrBuilder(
          int index) {
        if (bucketStatsBuilder_ == null) {
          return bucketStats_.get(index);  } else {
          return bucketStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder> 
           getBucketStatsOrBuilderList() {
        if (bucketStatsBuilder_ != null) {
          return bucketStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bucketStats_);
        }
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder addBucketStatsBuilder() {
        return getBucketStatsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.getDefaultInstance());
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder addBucketStatsBuilder(
          int index) {
        return getBucketStatsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.getDefaultInstance());
      }
      /**
       * <pre>
       * One counter set per
       *bucket. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket_counter bucket_stats = 7;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder> 
           getBucketStatsBuilderList() {
        return getBucketStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder> 
          getBucketStatsFieldBuilder() {
        if (bucketStatsBuilder_ == null) {
          bucketStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counter.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucket_counterOrBuilder>(
                  bucketStats_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          bucketStats_ = null;
        }
        return bucketStatsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_group_stats)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_group_stats)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_group_stats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_group_stats();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_stats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_group_stats>
        PARSER = new com.google.protobuf.AbstractParser<ofp_group_stats>() {
      @java.lang.Override
      public ofp_group_stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_group_stats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_group_stats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_group_stats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_group_descOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_group_desc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_type getType();

    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 2;</code>
     */
    int getGroupId();

    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> 
        getBucketsList();
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_bucket getBuckets(int index);
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    int getBucketsCount();
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
        getBucketsOrBuilderList();
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder getBucketsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Body of reply to OFPMP_GROUP_DESC request. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_group_desc}
   */
  public  static final class ofp_group_desc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_group_desc)
      ofp_group_descOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_group_desc.newBuilder() to construct.
    private ofp_group_desc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_group_desc() {
      type_ = 0;
      buckets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_group_desc();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_group_desc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              groupId_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                buckets_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_bucket>();
                mutable_bitField0_ |= 0x00000001;
              }
              buckets_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_bucket.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          buckets_ = java.util.Collections.unmodifiableList(buckets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_desc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_desc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * One of OFPGT_*. 
     * </pre>
     *
     * <code>.openflow_13.ofp_group_type type = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_type getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_group_type result = org.opencord.voltha.openflow13.Openflow13.ofp_group_type.valueOf(type_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_type.UNRECOGNIZED : result;
    }

    public static final int GROUP_ID_FIELD_NUMBER = 2;
    private int groupId_;
    /**
     * <pre>
     * Group identifier. 
     * </pre>
     *
     * <code>uint32 group_id = 2;</code>
     */
    public int getGroupId() {
      return groupId_;
    }

    public static final int BUCKETS_FIELD_NUMBER = 3;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> buckets_;
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> getBucketsList() {
      return buckets_;
    }
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
        getBucketsOrBuilderList() {
      return buckets_;
    }
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    public int getBucketsCount() {
      return buckets_.size();
    }
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucket getBuckets(int index) {
      return buckets_.get(index);
    }
    /**
     * <pre>
     * List of buckets - 0 or more. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder getBucketsOrBuilder(
        int index) {
      return buckets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_group_type.OFPGT_ALL.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (groupId_ != 0) {
        output.writeUInt32(2, groupId_);
      }
      for (int i = 0; i < buckets_.size(); i++) {
        output.writeMessage(3, buckets_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.openflow13.Openflow13.ofp_group_type.OFPGT_ALL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, groupId_);
      }
      for (int i = 0; i < buckets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, buckets_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_desc)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_group_desc other = (org.opencord.voltha.openflow13.Openflow13.ofp_group_desc) obj;

      if (type_ != other.type_) return false;
      if (getGroupId()
          != other.getGroupId()) return false;
      if (!getBucketsList()
          .equals(other.getBucketsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      if (getBucketsCount() > 0) {
        hash = (37 * hash) + BUCKETS_FIELD_NUMBER;
        hash = (53 * hash) + getBucketsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_group_desc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_GROUP_DESC request. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_group_desc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_group_desc)
        org.opencord.voltha.openflow13.Openflow13.ofp_group_descOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_desc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_desc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBucketsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        groupId_ = 0;

        if (bucketsBuilder_ == null) {
          buckets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bucketsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_desc_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_desc getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_desc build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_desc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_desc buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_desc result = new org.opencord.voltha.openflow13.Openflow13.ofp_group_desc(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.groupId_ = groupId_;
        if (bucketsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            buckets_ = java.util.Collections.unmodifiableList(buckets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.buckets_ = buckets_;
        } else {
          result.buckets_ = bucketsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_desc) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_group_desc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_group_desc other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        if (bucketsBuilder_ == null) {
          if (!other.buckets_.isEmpty()) {
            if (buckets_.isEmpty()) {
              buckets_ = other.buckets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBucketsIsMutable();
              buckets_.addAll(other.buckets_);
            }
            onChanged();
          }
        } else {
          if (!other.buckets_.isEmpty()) {
            if (bucketsBuilder_.isEmpty()) {
              bucketsBuilder_.dispose();
              bucketsBuilder_ = null;
              buckets_ = other.buckets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bucketsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBucketsFieldBuilder() : null;
            } else {
              bucketsBuilder_.addAllMessages(other.buckets_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_desc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_group_desc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_type getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_group_type result = org.opencord.voltha.openflow13.Openflow13.ofp_group_type.valueOf(type_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.openflow13.Openflow13.ofp_group_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPGT_*. 
       * </pre>
       *
       * <code>.openflow_13.ofp_group_type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int groupId_ ;
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 2;</code>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 2;</code>
       */
      public Builder setGroupId(int value) {
        
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Group identifier. 
       * </pre>
       *
       * <code>uint32 group_id = 2;</code>
       */
      public Builder clearGroupId() {
        
        groupId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> buckets_ =
        java.util.Collections.emptyList();
      private void ensureBucketsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          buckets_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_bucket>(buckets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> bucketsBuilder_;

      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket> getBucketsList() {
        if (bucketsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buckets_);
        } else {
          return bucketsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public int getBucketsCount() {
        if (bucketsBuilder_ == null) {
          return buckets_.size();
        } else {
          return bucketsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket getBuckets(int index) {
        if (bucketsBuilder_ == null) {
          return buckets_.get(index);
        } else {
          return bucketsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder setBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket value) {
        if (bucketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketsIsMutable();
          buckets_.set(index, value);
          onChanged();
        } else {
          bucketsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder setBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder builderForValue) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.set(index, builderForValue.build());
          onChanged();
        } else {
          bucketsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder addBuckets(org.opencord.voltha.openflow13.Openflow13.ofp_bucket value) {
        if (bucketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketsIsMutable();
          buckets_.add(value);
          onChanged();
        } else {
          bucketsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder addBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket value) {
        if (bucketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBucketsIsMutable();
          buckets_.add(index, value);
          onChanged();
        } else {
          bucketsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder addBuckets(
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder builderForValue) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.add(builderForValue.build());
          onChanged();
        } else {
          bucketsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder addBuckets(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder builderForValue) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.add(index, builderForValue.build());
          onChanged();
        } else {
          bucketsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder addAllBuckets(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucket> values) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, buckets_);
          onChanged();
        } else {
          bucketsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder clearBuckets() {
        if (bucketsBuilder_ == null) {
          buckets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bucketsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public Builder removeBuckets(int index) {
        if (bucketsBuilder_ == null) {
          ensureBucketsIsMutable();
          buckets_.remove(index);
          onChanged();
        } else {
          bucketsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder getBucketsBuilder(
          int index) {
        return getBucketsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder getBucketsOrBuilder(
          int index) {
        if (bucketsBuilder_ == null) {
          return buckets_.get(index);  } else {
          return bucketsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
           getBucketsOrBuilderList() {
        if (bucketsBuilder_ != null) {
          return bucketsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buckets_);
        }
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder addBucketsBuilder() {
        return getBucketsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_bucket.getDefaultInstance());
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder addBucketsBuilder(
          int index) {
        return getBucketsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.getDefaultInstance());
      }
      /**
       * <pre>
       * List of buckets - 0 or more. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_bucket buckets = 3;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder> 
           getBucketsBuilderList() {
        return getBucketsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_bucket, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder> 
          getBucketsFieldBuilder() {
        if (bucketsBuilder_ == null) {
          bucketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_bucket, org.opencord.voltha.openflow13.Openflow13.ofp_bucket.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_bucketOrBuilder>(
                  buckets_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          buckets_ = null;
        }
        return bucketsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_group_desc)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_group_desc)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_group_desc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_group_desc();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_desc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_group_desc>
        PARSER = new com.google.protobuf.AbstractParser<ofp_group_desc>() {
      @java.lang.Override
      public ofp_group_desc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_group_desc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_group_desc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_group_desc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_desc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_group_entryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_group_entry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.ofp_group_desc desc = 1;</code>
     */
    boolean hasDesc();
    /**
     * <code>.openflow_13.ofp_group_desc desc = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_desc getDesc();
    /**
     * <code>.openflow_13.ofp_group_desc desc = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_descOrBuilder getDescOrBuilder();

    /**
     * <code>.openflow_13.ofp_group_stats stats = 2;</code>
     */
    boolean hasStats();
    /**
     * <code>.openflow_13.ofp_group_stats stats = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_stats getStats();
    /**
     * <code>.openflow_13.ofp_group_stats stats = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_statsOrBuilder getStatsOrBuilder();
  }
  /**
   * Protobuf type {@code openflow_13.ofp_group_entry}
   */
  public  static final class ofp_group_entry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_group_entry)
      ofp_group_entryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_group_entry.newBuilder() to construct.
    private ofp_group_entry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_group_entry() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_group_entry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_group_entry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder subBuilder = null;
              if (desc_ != null) {
                subBuilder = desc_.toBuilder();
              }
              desc_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(desc_);
                desc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder subBuilder = null;
              if (stats_ != null) {
                subBuilder = stats_.toBuilder();
              }
              stats_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stats_);
                stats_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_entry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_entry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder.class);
    }

    public static final int DESC_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.ofp_group_desc desc_;
    /**
     * <code>.openflow_13.ofp_group_desc desc = 1;</code>
     */
    public boolean hasDesc() {
      return desc_ != null;
    }
    /**
     * <code>.openflow_13.ofp_group_desc desc = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_desc getDesc() {
      return desc_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.getDefaultInstance() : desc_;
    }
    /**
     * <code>.openflow_13.ofp_group_desc desc = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_descOrBuilder getDescOrBuilder() {
      return getDesc();
    }

    public static final int STATS_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_group_stats stats_;
    /**
     * <code>.openflow_13.ofp_group_stats stats = 2;</code>
     */
    public boolean hasStats() {
      return stats_ != null;
    }
    /**
     * <code>.openflow_13.ofp_group_stats stats = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats getStats() {
      return stats_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.getDefaultInstance() : stats_;
    }
    /**
     * <code>.openflow_13.ofp_group_stats stats = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_statsOrBuilder getStatsOrBuilder() {
      return getStats();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (desc_ != null) {
        output.writeMessage(1, getDesc());
      }
      if (stats_ != null) {
        output.writeMessage(2, getStats());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (desc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDesc());
      }
      if (stats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStats());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_entry)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_group_entry other = (org.opencord.voltha.openflow13.Openflow13.ofp_group_entry) obj;

      if (hasDesc() != other.hasDesc()) return false;
      if (hasDesc()) {
        if (!getDesc()
            .equals(other.getDesc())) return false;
      }
      if (hasStats() != other.hasStats()) return false;
      if (hasStats()) {
        if (!getStats()
            .equals(other.getStats())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDesc()) {
        hash = (37 * hash) + DESC_FIELD_NUMBER;
        hash = (53 * hash) + getDesc().hashCode();
      }
      if (hasStats()) {
        hash = (37 * hash) + STATS_FIELD_NUMBER;
        hash = (53 * hash) + getStats().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_group_entry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.ofp_group_entry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_group_entry)
        org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_entry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (descBuilder_ == null) {
          desc_ = null;
        } else {
          desc_ = null;
          descBuilder_ = null;
        }
        if (statsBuilder_ == null) {
          stats_ = null;
        } else {
          stats_ = null;
          statsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_entry_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_entry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_entry result = new org.opencord.voltha.openflow13.Openflow13.ofp_group_entry(this);
        if (descBuilder_ == null) {
          result.desc_ = desc_;
        } else {
          result.desc_ = descBuilder_.build();
        }
        if (statsBuilder_ == null) {
          result.stats_ = stats_;
        } else {
          result.stats_ = statsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_entry) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_group_entry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_group_entry other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.getDefaultInstance()) return this;
        if (other.hasDesc()) {
          mergeDesc(other.getDesc());
        }
        if (other.hasStats()) {
          mergeStats(other.getStats());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_entry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_group_entry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_group_desc desc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_desc, org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_descOrBuilder> descBuilder_;
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public boolean hasDesc() {
        return descBuilder_ != null || desc_ != null;
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_desc getDesc() {
        if (descBuilder_ == null) {
          return desc_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.getDefaultInstance() : desc_;
        } else {
          return descBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public Builder setDesc(org.opencord.voltha.openflow13.Openflow13.ofp_group_desc value) {
        if (descBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          desc_ = value;
          onChanged();
        } else {
          descBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public Builder setDesc(
          org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder builderForValue) {
        if (descBuilder_ == null) {
          desc_ = builderForValue.build();
          onChanged();
        } else {
          descBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public Builder mergeDesc(org.opencord.voltha.openflow13.Openflow13.ofp_group_desc value) {
        if (descBuilder_ == null) {
          if (desc_ != null) {
            desc_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.newBuilder(desc_).mergeFrom(value).buildPartial();
          } else {
            desc_ = value;
          }
          onChanged();
        } else {
          descBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public Builder clearDesc() {
        if (descBuilder_ == null) {
          desc_ = null;
          onChanged();
        } else {
          desc_ = null;
          descBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder getDescBuilder() {
        
        onChanged();
        return getDescFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_descOrBuilder getDescOrBuilder() {
        if (descBuilder_ != null) {
          return descBuilder_.getMessageOrBuilder();
        } else {
          return desc_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.getDefaultInstance() : desc_;
        }
      }
      /**
       * <code>.openflow_13.ofp_group_desc desc = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_desc, org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_descOrBuilder> 
          getDescFieldBuilder() {
        if (descBuilder_ == null) {
          descBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_group_desc, org.opencord.voltha.openflow13.Openflow13.ofp_group_desc.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_descOrBuilder>(
                  getDesc(),
                  getParentForChildren(),
                  isClean());
          desc_ = null;
        }
        return descBuilder_;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_group_stats stats_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_stats, org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_statsOrBuilder> statsBuilder_;
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public boolean hasStats() {
        return statsBuilder_ != null || stats_ != null;
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats getStats() {
        if (statsBuilder_ == null) {
          return stats_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.getDefaultInstance() : stats_;
        } else {
          return statsBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public Builder setStats(org.opencord.voltha.openflow13.Openflow13.ofp_group_stats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stats_ = value;
          onChanged();
        } else {
          statsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public Builder setStats(
          org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          stats_ = builderForValue.build();
          onChanged();
        } else {
          statsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public Builder mergeStats(org.opencord.voltha.openflow13.Openflow13.ofp_group_stats value) {
        if (statsBuilder_ == null) {
          if (stats_ != null) {
            stats_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.newBuilder(stats_).mergeFrom(value).buildPartial();
          } else {
            stats_ = value;
          }
          onChanged();
        } else {
          statsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public Builder clearStats() {
        if (statsBuilder_ == null) {
          stats_ = null;
          onChanged();
        } else {
          stats_ = null;
          statsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder getStatsBuilder() {
        
        onChanged();
        return getStatsFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_statsOrBuilder getStatsOrBuilder() {
        if (statsBuilder_ != null) {
          return statsBuilder_.getMessageOrBuilder();
        } else {
          return stats_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.getDefaultInstance() : stats_;
        }
      }
      /**
       * <code>.openflow_13.ofp_group_stats stats = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_stats, org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_statsOrBuilder> 
          getStatsFieldBuilder() {
        if (statsBuilder_ == null) {
          statsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_group_stats, org.opencord.voltha.openflow13.Openflow13.ofp_group_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_statsOrBuilder>(
                  getStats(),
                  getParentForChildren(),
                  isClean());
          stats_ = null;
        }
        return statsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_group_entry)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_group_entry)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_group_entry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_group_entry();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_entry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_group_entry>
        PARSER = new com.google.protobuf.AbstractParser<ofp_group_entry>() {
      @java.lang.Override
      public ofp_group_entry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_group_entry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_group_entry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_group_entry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_group_featuresOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_group_features)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Bitmap of (1 &lt;&lt; OFPGT_*) values supported. 
     * </pre>
     *
     * <code>uint32 types = 1;</code>
     */
    int getTypes();

    /**
     * <pre>
     * Bitmap of OFPGFC_* capability supported. 
     * </pre>
     *
     * <code>uint32 capabilities = 2;</code>
     */
    int getCapabilities();

    /**
     * <pre>
     * Maximum number of groups for each type.
     * </pre>
     *
     * <code>repeated uint32 max_groups = 3;</code>
     */
    java.util.List<java.lang.Integer> getMaxGroupsList();
    /**
     * <pre>
     * Maximum number of groups for each type.
     * </pre>
     *
     * <code>repeated uint32 max_groups = 3;</code>
     */
    int getMaxGroupsCount();
    /**
     * <pre>
     * Maximum number of groups for each type.
     * </pre>
     *
     * <code>repeated uint32 max_groups = 3;</code>
     */
    int getMaxGroups(int index);

    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPAT_*) values
     *supported. 
     * </pre>
     *
     * <code>repeated uint32 actions = 4;</code>
     */
    java.util.List<java.lang.Integer> getActionsList();
    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPAT_*) values
     *supported. 
     * </pre>
     *
     * <code>repeated uint32 actions = 4;</code>
     */
    int getActionsCount();
    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPAT_*) values
     *supported. 
     * </pre>
     *
     * <code>repeated uint32 actions = 4;</code>
     */
    int getActions(int index);
  }
  /**
   * <pre>
   * Body of reply to OFPMP_GROUP_FEATURES request. Group features. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_group_features}
   */
  public  static final class ofp_group_features extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_group_features)
      ofp_group_featuresOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_group_features.newBuilder() to construct.
    private ofp_group_features(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_group_features() {
      maxGroups_ = emptyIntList();
      actions_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_group_features();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_group_features(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              types_ = input.readUInt32();
              break;
            }
            case 16: {

              capabilities_ = input.readUInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                maxGroups_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              maxGroups_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                maxGroups_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                maxGroups_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                actions_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              actions_.addInt(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                actions_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                actions_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          maxGroups_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          actions_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_features_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_features_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_group_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_features.Builder.class);
    }

    public static final int TYPES_FIELD_NUMBER = 1;
    private int types_;
    /**
     * <pre>
     * Bitmap of (1 &lt;&lt; OFPGT_*) values supported. 
     * </pre>
     *
     * <code>uint32 types = 1;</code>
     */
    public int getTypes() {
      return types_;
    }

    public static final int CAPABILITIES_FIELD_NUMBER = 2;
    private int capabilities_;
    /**
     * <pre>
     * Bitmap of OFPGFC_* capability supported. 
     * </pre>
     *
     * <code>uint32 capabilities = 2;</code>
     */
    public int getCapabilities() {
      return capabilities_;
    }

    public static final int MAX_GROUPS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList maxGroups_;
    /**
     * <pre>
     * Maximum number of groups for each type.
     * </pre>
     *
     * <code>repeated uint32 max_groups = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getMaxGroupsList() {
      return maxGroups_;
    }
    /**
     * <pre>
     * Maximum number of groups for each type.
     * </pre>
     *
     * <code>repeated uint32 max_groups = 3;</code>
     */
    public int getMaxGroupsCount() {
      return maxGroups_.size();
    }
    /**
     * <pre>
     * Maximum number of groups for each type.
     * </pre>
     *
     * <code>repeated uint32 max_groups = 3;</code>
     */
    public int getMaxGroups(int index) {
      return maxGroups_.getInt(index);
    }
    private int maxGroupsMemoizedSerializedSize = -1;

    public static final int ACTIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList actions_;
    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPAT_*) values
     *supported. 
     * </pre>
     *
     * <code>repeated uint32 actions = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getActionsList() {
      return actions_;
    }
    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPAT_*) values
     *supported. 
     * </pre>
     *
     * <code>repeated uint32 actions = 4;</code>
     */
    public int getActionsCount() {
      return actions_.size();
    }
    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPAT_*) values
     *supported. 
     * </pre>
     *
     * <code>repeated uint32 actions = 4;</code>
     */
    public int getActions(int index) {
      return actions_.getInt(index);
    }
    private int actionsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (types_ != 0) {
        output.writeUInt32(1, types_);
      }
      if (capabilities_ != 0) {
        output.writeUInt32(2, capabilities_);
      }
      if (getMaxGroupsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(maxGroupsMemoizedSerializedSize);
      }
      for (int i = 0; i < maxGroups_.size(); i++) {
        output.writeUInt32NoTag(maxGroups_.getInt(i));
      }
      if (getActionsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(actionsMemoizedSerializedSize);
      }
      for (int i = 0; i < actions_.size(); i++) {
        output.writeUInt32NoTag(actions_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (types_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, types_);
      }
      if (capabilities_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, capabilities_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < maxGroups_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(maxGroups_.getInt(i));
        }
        size += dataSize;
        if (!getMaxGroupsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        maxGroupsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(actions_.getInt(i));
        }
        size += dataSize;
        if (!getActionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        actionsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_features)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_group_features other = (org.opencord.voltha.openflow13.Openflow13.ofp_group_features) obj;

      if (getTypes()
          != other.getTypes()) return false;
      if (getCapabilities()
          != other.getCapabilities()) return false;
      if (!getMaxGroupsList()
          .equals(other.getMaxGroupsList())) return false;
      if (!getActionsList()
          .equals(other.getActionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getTypes();
      hash = (37 * hash) + CAPABILITIES_FIELD_NUMBER;
      hash = (53 * hash) + getCapabilities();
      if (getMaxGroupsCount() > 0) {
        hash = (37 * hash) + MAX_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxGroupsList().hashCode();
      }
      if (getActionsCount() > 0) {
        hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getActionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_group_features prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_GROUP_FEATURES request. Group features. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_group_features}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_group_features)
        org.opencord.voltha.openflow13.Openflow13.ofp_group_featuresOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_features_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_features_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_group_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_group_features.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_group_features.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        types_ = 0;

        capabilities_ = 0;

        maxGroups_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        actions_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_group_features_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_features getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_group_features.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_features build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_features result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_features buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_features result = new org.opencord.voltha.openflow13.Openflow13.ofp_group_features(this);
        int from_bitField0_ = bitField0_;
        result.types_ = types_;
        result.capabilities_ = capabilities_;
        if (((bitField0_ & 0x00000001) != 0)) {
          maxGroups_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.maxGroups_ = maxGroups_;
        if (((bitField0_ & 0x00000002) != 0)) {
          actions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.actions_ = actions_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_group_features) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_group_features)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_group_features other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_group_features.getDefaultInstance()) return this;
        if (other.getTypes() != 0) {
          setTypes(other.getTypes());
        }
        if (other.getCapabilities() != 0) {
          setCapabilities(other.getCapabilities());
        }
        if (!other.maxGroups_.isEmpty()) {
          if (maxGroups_.isEmpty()) {
            maxGroups_ = other.maxGroups_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMaxGroupsIsMutable();
            maxGroups_.addAll(other.maxGroups_);
          }
          onChanged();
        }
        if (!other.actions_.isEmpty()) {
          if (actions_.isEmpty()) {
            actions_ = other.actions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureActionsIsMutable();
            actions_.addAll(other.actions_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_group_features parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_group_features) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int types_ ;
      /**
       * <pre>
       * Bitmap of (1 &lt;&lt; OFPGT_*) values supported. 
       * </pre>
       *
       * <code>uint32 types = 1;</code>
       */
      public int getTypes() {
        return types_;
      }
      /**
       * <pre>
       * Bitmap of (1 &lt;&lt; OFPGT_*) values supported. 
       * </pre>
       *
       * <code>uint32 types = 1;</code>
       */
      public Builder setTypes(int value) {
        
        types_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of (1 &lt;&lt; OFPGT_*) values supported. 
       * </pre>
       *
       * <code>uint32 types = 1;</code>
       */
      public Builder clearTypes() {
        
        types_ = 0;
        onChanged();
        return this;
      }

      private int capabilities_ ;
      /**
       * <pre>
       * Bitmap of OFPGFC_* capability supported. 
       * </pre>
       *
       * <code>uint32 capabilities = 2;</code>
       */
      public int getCapabilities() {
        return capabilities_;
      }
      /**
       * <pre>
       * Bitmap of OFPGFC_* capability supported. 
       * </pre>
       *
       * <code>uint32 capabilities = 2;</code>
       */
      public Builder setCapabilities(int value) {
        
        capabilities_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmap of OFPGFC_* capability supported. 
       * </pre>
       *
       * <code>uint32 capabilities = 2;</code>
       */
      public Builder clearCapabilities() {
        
        capabilities_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList maxGroups_ = emptyIntList();
      private void ensureMaxGroupsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          maxGroups_ = mutableCopy(maxGroups_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Maximum number of groups for each type.
       * </pre>
       *
       * <code>repeated uint32 max_groups = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getMaxGroupsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(maxGroups_) : maxGroups_;
      }
      /**
       * <pre>
       * Maximum number of groups for each type.
       * </pre>
       *
       * <code>repeated uint32 max_groups = 3;</code>
       */
      public int getMaxGroupsCount() {
        return maxGroups_.size();
      }
      /**
       * <pre>
       * Maximum number of groups for each type.
       * </pre>
       *
       * <code>repeated uint32 max_groups = 3;</code>
       */
      public int getMaxGroups(int index) {
        return maxGroups_.getInt(index);
      }
      /**
       * <pre>
       * Maximum number of groups for each type.
       * </pre>
       *
       * <code>repeated uint32 max_groups = 3;</code>
       */
      public Builder setMaxGroups(
          int index, int value) {
        ensureMaxGroupsIsMutable();
        maxGroups_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of groups for each type.
       * </pre>
       *
       * <code>repeated uint32 max_groups = 3;</code>
       */
      public Builder addMaxGroups(int value) {
        ensureMaxGroupsIsMutable();
        maxGroups_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of groups for each type.
       * </pre>
       *
       * <code>repeated uint32 max_groups = 3;</code>
       */
      public Builder addAllMaxGroups(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMaxGroupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maxGroups_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of groups for each type.
       * </pre>
       *
       * <code>repeated uint32 max_groups = 3;</code>
       */
      public Builder clearMaxGroups() {
        maxGroups_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList actions_ = emptyIntList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          actions_ = mutableCopy(actions_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPAT_*) values
       *supported. 
       * </pre>
       *
       * <code>repeated uint32 actions = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getActionsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(actions_) : actions_;
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPAT_*) values
       *supported. 
       * </pre>
       *
       * <code>repeated uint32 actions = 4;</code>
       */
      public int getActionsCount() {
        return actions_.size();
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPAT_*) values
       *supported. 
       * </pre>
       *
       * <code>repeated uint32 actions = 4;</code>
       */
      public int getActions(int index) {
        return actions_.getInt(index);
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPAT_*) values
       *supported. 
       * </pre>
       *
       * <code>repeated uint32 actions = 4;</code>
       */
      public Builder setActions(
          int index, int value) {
        ensureActionsIsMutable();
        actions_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPAT_*) values
       *supported. 
       * </pre>
       *
       * <code>repeated uint32 actions = 4;</code>
       */
      public Builder addActions(int value) {
        ensureActionsIsMutable();
        actions_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPAT_*) values
       *supported. 
       * </pre>
       *
       * <code>repeated uint32 actions = 4;</code>
       */
      public Builder addAllActions(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, actions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPAT_*) values
       *supported. 
       * </pre>
       *
       * <code>repeated uint32 actions = 4;</code>
       */
      public Builder clearActions() {
        actions_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_group_features)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_group_features)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_group_features DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_group_features();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_group_features getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_group_features>
        PARSER = new com.google.protobuf.AbstractParser<ofp_group_features>() {
      @java.lang.Override
      public ofp_group_features parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_group_features(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_group_features> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_group_features> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_features getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_multipart_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_multipart_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Meter instance, or OFPM_ALL. 
     * </pre>
     *
     * <code>uint32 meter_id = 1;</code>
     */
    int getMeterId();
  }
  /**
   * <pre>
   * Body of OFPMP_METER and OFPMP_METER_CONFIG requests. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_multipart_request}
   */
  public  static final class ofp_meter_multipart_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_multipart_request)
      ofp_meter_multipart_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_multipart_request.newBuilder() to construct.
    private ofp_meter_multipart_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_multipart_request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_multipart_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_multipart_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              meterId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_multipart_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_multipart_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request.Builder.class);
    }

    public static final int METER_ID_FIELD_NUMBER = 1;
    private int meterId_;
    /**
     * <pre>
     * Meter instance, or OFPM_ALL. 
     * </pre>
     *
     * <code>uint32 meter_id = 1;</code>
     */
    public int getMeterId() {
      return meterId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meterId_ != 0) {
        output.writeUInt32(1, meterId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, meterId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request) obj;

      if (getMeterId()
          != other.getMeterId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMeterId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of OFPMP_METER and OFPMP_METER_CONFIG requests. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_multipart_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_multipart_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_multipart_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_multipart_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        meterId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_multipart_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request(this);
        result.meterId_ = meterId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request.getDefaultInstance()) return this;
        if (other.getMeterId() != 0) {
          setMeterId(other.getMeterId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int meterId_ ;
      /**
       * <pre>
       * Meter instance, or OFPM_ALL. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public int getMeterId() {
        return meterId_;
      }
      /**
       * <pre>
       * Meter instance, or OFPM_ALL. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public Builder setMeterId(int value) {
        
        meterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Meter instance, or OFPM_ALL. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public Builder clearMeterId() {
        
        meterId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_multipart_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_multipart_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_multipart_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_multipart_request>() {
      @java.lang.Override
      public ofp_meter_multipart_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_multipart_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_multipart_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_multipart_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_multipart_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_band_statsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_band_stats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of packets in band. 
     * </pre>
     *
     * <code>uint64 packet_band_count = 1;</code>
     */
    long getPacketBandCount();

    /**
     * <pre>
     * Number of bytes in band. 
     * </pre>
     *
     * <code>uint64 byte_band_count = 2;</code>
     */
    long getByteBandCount();
  }
  /**
   * <pre>
   * Statistics for each meter band 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_band_stats}
   */
  public  static final class ofp_meter_band_stats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_band_stats)
      ofp_meter_band_statsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_band_stats.newBuilder() to construct.
    private ofp_meter_band_stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_band_stats() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_band_stats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_band_stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              packetBandCount_ = input.readUInt64();
              break;
            }
            case 16: {

              byteBandCount_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_stats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder.class);
    }

    public static final int PACKET_BAND_COUNT_FIELD_NUMBER = 1;
    private long packetBandCount_;
    /**
     * <pre>
     * Number of packets in band. 
     * </pre>
     *
     * <code>uint64 packet_band_count = 1;</code>
     */
    public long getPacketBandCount() {
      return packetBandCount_;
    }

    public static final int BYTE_BAND_COUNT_FIELD_NUMBER = 2;
    private long byteBandCount_;
    /**
     * <pre>
     * Number of bytes in band. 
     * </pre>
     *
     * <code>uint64 byte_band_count = 2;</code>
     */
    public long getByteBandCount() {
      return byteBandCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (packetBandCount_ != 0L) {
        output.writeUInt64(1, packetBandCount_);
      }
      if (byteBandCount_ != 0L) {
        output.writeUInt64(2, byteBandCount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (packetBandCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, packetBandCount_);
      }
      if (byteBandCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, byteBandCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats) obj;

      if (getPacketBandCount()
          != other.getPacketBandCount()) return false;
      if (getByteBandCount()
          != other.getByteBandCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PACKET_BAND_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPacketBandCount());
      hash = (37 * hash) + BYTE_BAND_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteBandCount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Statistics for each meter band 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_band_stats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_band_stats)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_stats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        packetBandCount_ = 0L;

        byteBandCount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_band_stats_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats(this);
        result.packetBandCount_ = packetBandCount_;
        result.byteBandCount_ = byteBandCount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.getDefaultInstance()) return this;
        if (other.getPacketBandCount() != 0L) {
          setPacketBandCount(other.getPacketBandCount());
        }
        if (other.getByteBandCount() != 0L) {
          setByteBandCount(other.getByteBandCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long packetBandCount_ ;
      /**
       * <pre>
       * Number of packets in band. 
       * </pre>
       *
       * <code>uint64 packet_band_count = 1;</code>
       */
      public long getPacketBandCount() {
        return packetBandCount_;
      }
      /**
       * <pre>
       * Number of packets in band. 
       * </pre>
       *
       * <code>uint64 packet_band_count = 1;</code>
       */
      public Builder setPacketBandCount(long value) {
        
        packetBandCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets in band. 
       * </pre>
       *
       * <code>uint64 packet_band_count = 1;</code>
       */
      public Builder clearPacketBandCount() {
        
        packetBandCount_ = 0L;
        onChanged();
        return this;
      }

      private long byteBandCount_ ;
      /**
       * <pre>
       * Number of bytes in band. 
       * </pre>
       *
       * <code>uint64 byte_band_count = 2;</code>
       */
      public long getByteBandCount() {
        return byteBandCount_;
      }
      /**
       * <pre>
       * Number of bytes in band. 
       * </pre>
       *
       * <code>uint64 byte_band_count = 2;</code>
       */
      public Builder setByteBandCount(long value) {
        
        byteBandCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of bytes in band. 
       * </pre>
       *
       * <code>uint64 byte_band_count = 2;</code>
       */
      public Builder clearByteBandCount() {
        
        byteBandCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_band_stats)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_band_stats)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_band_stats>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_band_stats>() {
      @java.lang.Override
      public ofp_meter_band_stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_band_stats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_band_stats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_band_stats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_statsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_stats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 1;</code>
     */
    int getMeterId();

    /**
     * <pre>
     * Number of flows bound to meter. 
     * </pre>
     *
     * <code>uint32 flow_count = 2;</code>
     */
    int getFlowCount();

    /**
     * <pre>
     * Number of packets in input. 
     * </pre>
     *
     * <code>uint64 packet_in_count = 3;</code>
     */
    long getPacketInCount();

    /**
     * <pre>
     * Number of bytes in input. 
     * </pre>
     *
     * <code>uint64 byte_in_count = 4;</code>
     */
    long getByteInCount();

    /**
     * <pre>
     * Time meter has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 5;</code>
     */
    int getDurationSec();

    /**
     * <pre>
     * Time meter has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 6;</code>
     */
    int getDurationNsec();

    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats> 
        getBandStatsList();
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats getBandStats(int index);
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    int getBandStatsCount();
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder> 
        getBandStatsOrBuilderList();
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder getBandStatsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Body of reply to OFPMP_METER request. Meter statistics. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_stats}
   */
  public  static final class ofp_meter_stats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_stats)
      ofp_meter_statsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_stats.newBuilder() to construct.
    private ofp_meter_stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_stats() {
      bandStats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_stats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              meterId_ = input.readUInt32();
              break;
            }
            case 16: {

              flowCount_ = input.readUInt32();
              break;
            }
            case 24: {

              packetInCount_ = input.readUInt64();
              break;
            }
            case 32: {

              byteInCount_ = input.readUInt64();
              break;
            }
            case 40: {

              durationSec_ = input.readUInt32();
              break;
            }
            case 48: {

              durationNsec_ = input.readUInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                bandStats_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats>();
                mutable_bitField0_ |= 0x00000001;
              }
              bandStats_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          bandStats_ = java.util.Collections.unmodifiableList(bandStats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_stats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder.class);
    }

    public static final int METER_ID_FIELD_NUMBER = 1;
    private int meterId_;
    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 1;</code>
     */
    public int getMeterId() {
      return meterId_;
    }

    public static final int FLOW_COUNT_FIELD_NUMBER = 2;
    private int flowCount_;
    /**
     * <pre>
     * Number of flows bound to meter. 
     * </pre>
     *
     * <code>uint32 flow_count = 2;</code>
     */
    public int getFlowCount() {
      return flowCount_;
    }

    public static final int PACKET_IN_COUNT_FIELD_NUMBER = 3;
    private long packetInCount_;
    /**
     * <pre>
     * Number of packets in input. 
     * </pre>
     *
     * <code>uint64 packet_in_count = 3;</code>
     */
    public long getPacketInCount() {
      return packetInCount_;
    }

    public static final int BYTE_IN_COUNT_FIELD_NUMBER = 4;
    private long byteInCount_;
    /**
     * <pre>
     * Number of bytes in input. 
     * </pre>
     *
     * <code>uint64 byte_in_count = 4;</code>
     */
    public long getByteInCount() {
      return byteInCount_;
    }

    public static final int DURATION_SEC_FIELD_NUMBER = 5;
    private int durationSec_;
    /**
     * <pre>
     * Time meter has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 5;</code>
     */
    public int getDurationSec() {
      return durationSec_;
    }

    public static final int DURATION_NSEC_FIELD_NUMBER = 6;
    private int durationNsec_;
    /**
     * <pre>
     * Time meter has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 6;</code>
     */
    public int getDurationNsec() {
      return durationNsec_;
    }

    public static final int BAND_STATS_FIELD_NUMBER = 7;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats> bandStats_;
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats> getBandStatsList() {
      return bandStats_;
    }
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder> 
        getBandStatsOrBuilderList() {
      return bandStats_;
    }
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    public int getBandStatsCount() {
      return bandStats_.size();
    }
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats getBandStats(int index) {
      return bandStats_.get(index);
    }
    /**
     * <pre>
     * The band_stats length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder getBandStatsOrBuilder(
        int index) {
      return bandStats_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meterId_ != 0) {
        output.writeUInt32(1, meterId_);
      }
      if (flowCount_ != 0) {
        output.writeUInt32(2, flowCount_);
      }
      if (packetInCount_ != 0L) {
        output.writeUInt64(3, packetInCount_);
      }
      if (byteInCount_ != 0L) {
        output.writeUInt64(4, byteInCount_);
      }
      if (durationSec_ != 0) {
        output.writeUInt32(5, durationSec_);
      }
      if (durationNsec_ != 0) {
        output.writeUInt32(6, durationNsec_);
      }
      for (int i = 0; i < bandStats_.size(); i++) {
        output.writeMessage(7, bandStats_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, meterId_);
      }
      if (flowCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, flowCount_);
      }
      if (packetInCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, packetInCount_);
      }
      if (byteInCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, byteInCount_);
      }
      if (durationSec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, durationSec_);
      }
      if (durationNsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, durationNsec_);
      }
      for (int i = 0; i < bandStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, bandStats_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats) obj;

      if (getMeterId()
          != other.getMeterId()) return false;
      if (getFlowCount()
          != other.getFlowCount()) return false;
      if (getPacketInCount()
          != other.getPacketInCount()) return false;
      if (getByteInCount()
          != other.getByteInCount()) return false;
      if (getDurationSec()
          != other.getDurationSec()) return false;
      if (getDurationNsec()
          != other.getDurationNsec()) return false;
      if (!getBandStatsList()
          .equals(other.getBandStatsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMeterId();
      hash = (37 * hash) + FLOW_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getFlowCount();
      hash = (37 * hash) + PACKET_IN_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPacketInCount());
      hash = (37 * hash) + BYTE_IN_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteInCount());
      hash = (37 * hash) + DURATION_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationSec();
      hash = (37 * hash) + DURATION_NSEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationNsec();
      if (getBandStatsCount() > 0) {
        hash = (37 * hash) + BAND_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getBandStatsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_METER request. Meter statistics. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_stats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_stats)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_stats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBandStatsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        meterId_ = 0;

        flowCount_ = 0;

        packetInCount_ = 0L;

        byteInCount_ = 0L;

        durationSec_ = 0;

        durationNsec_ = 0;

        if (bandStatsBuilder_ == null) {
          bandStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bandStatsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_stats_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats(this);
        int from_bitField0_ = bitField0_;
        result.meterId_ = meterId_;
        result.flowCount_ = flowCount_;
        result.packetInCount_ = packetInCount_;
        result.byteInCount_ = byteInCount_;
        result.durationSec_ = durationSec_;
        result.durationNsec_ = durationNsec_;
        if (bandStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            bandStats_ = java.util.Collections.unmodifiableList(bandStats_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.bandStats_ = bandStats_;
        } else {
          result.bandStats_ = bandStatsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.getDefaultInstance()) return this;
        if (other.getMeterId() != 0) {
          setMeterId(other.getMeterId());
        }
        if (other.getFlowCount() != 0) {
          setFlowCount(other.getFlowCount());
        }
        if (other.getPacketInCount() != 0L) {
          setPacketInCount(other.getPacketInCount());
        }
        if (other.getByteInCount() != 0L) {
          setByteInCount(other.getByteInCount());
        }
        if (other.getDurationSec() != 0) {
          setDurationSec(other.getDurationSec());
        }
        if (other.getDurationNsec() != 0) {
          setDurationNsec(other.getDurationNsec());
        }
        if (bandStatsBuilder_ == null) {
          if (!other.bandStats_.isEmpty()) {
            if (bandStats_.isEmpty()) {
              bandStats_ = other.bandStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBandStatsIsMutable();
              bandStats_.addAll(other.bandStats_);
            }
            onChanged();
          }
        } else {
          if (!other.bandStats_.isEmpty()) {
            if (bandStatsBuilder_.isEmpty()) {
              bandStatsBuilder_.dispose();
              bandStatsBuilder_ = null;
              bandStats_ = other.bandStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bandStatsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBandStatsFieldBuilder() : null;
            } else {
              bandStatsBuilder_.addAllMessages(other.bandStats_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int meterId_ ;
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public int getMeterId() {
        return meterId_;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public Builder setMeterId(int value) {
        
        meterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 1;</code>
       */
      public Builder clearMeterId() {
        
        meterId_ = 0;
        onChanged();
        return this;
      }

      private int flowCount_ ;
      /**
       * <pre>
       * Number of flows bound to meter. 
       * </pre>
       *
       * <code>uint32 flow_count = 2;</code>
       */
      public int getFlowCount() {
        return flowCount_;
      }
      /**
       * <pre>
       * Number of flows bound to meter. 
       * </pre>
       *
       * <code>uint32 flow_count = 2;</code>
       */
      public Builder setFlowCount(int value) {
        
        flowCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of flows bound to meter. 
       * </pre>
       *
       * <code>uint32 flow_count = 2;</code>
       */
      public Builder clearFlowCount() {
        
        flowCount_ = 0;
        onChanged();
        return this;
      }

      private long packetInCount_ ;
      /**
       * <pre>
       * Number of packets in input. 
       * </pre>
       *
       * <code>uint64 packet_in_count = 3;</code>
       */
      public long getPacketInCount() {
        return packetInCount_;
      }
      /**
       * <pre>
       * Number of packets in input. 
       * </pre>
       *
       * <code>uint64 packet_in_count = 3;</code>
       */
      public Builder setPacketInCount(long value) {
        
        packetInCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets in input. 
       * </pre>
       *
       * <code>uint64 packet_in_count = 3;</code>
       */
      public Builder clearPacketInCount() {
        
        packetInCount_ = 0L;
        onChanged();
        return this;
      }

      private long byteInCount_ ;
      /**
       * <pre>
       * Number of bytes in input. 
       * </pre>
       *
       * <code>uint64 byte_in_count = 4;</code>
       */
      public long getByteInCount() {
        return byteInCount_;
      }
      /**
       * <pre>
       * Number of bytes in input. 
       * </pre>
       *
       * <code>uint64 byte_in_count = 4;</code>
       */
      public Builder setByteInCount(long value) {
        
        byteInCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of bytes in input. 
       * </pre>
       *
       * <code>uint64 byte_in_count = 4;</code>
       */
      public Builder clearByteInCount() {
        
        byteInCount_ = 0L;
        onChanged();
        return this;
      }

      private int durationSec_ ;
      /**
       * <pre>
       * Time meter has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public int getDurationSec() {
        return durationSec_;
      }
      /**
       * <pre>
       * Time meter has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public Builder setDurationSec(int value) {
        
        durationSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time meter has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 5;</code>
       */
      public Builder clearDurationSec() {
        
        durationSec_ = 0;
        onChanged();
        return this;
      }

      private int durationNsec_ ;
      /**
       * <pre>
       * Time meter has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public int getDurationNsec() {
        return durationNsec_;
      }
      /**
       * <pre>
       * Time meter has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public Builder setDurationNsec(int value) {
        
        durationNsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time meter has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 6;</code>
       */
      public Builder clearDurationNsec() {
        
        durationNsec_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats> bandStats_ =
        java.util.Collections.emptyList();
      private void ensureBandStatsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          bandStats_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats>(bandStats_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder> bandStatsBuilder_;

      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats> getBandStatsList() {
        if (bandStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bandStats_);
        } else {
          return bandStatsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public int getBandStatsCount() {
        if (bandStatsBuilder_ == null) {
          return bandStats_.size();
        } else {
          return bandStatsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats getBandStats(int index) {
        if (bandStatsBuilder_ == null) {
          return bandStats_.get(index);
        } else {
          return bandStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder setBandStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats value) {
        if (bandStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandStatsIsMutable();
          bandStats_.set(index, value);
          onChanged();
        } else {
          bandStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder setBandStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder builderForValue) {
        if (bandStatsBuilder_ == null) {
          ensureBandStatsIsMutable();
          bandStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          bandStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder addBandStats(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats value) {
        if (bandStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandStatsIsMutable();
          bandStats_.add(value);
          onChanged();
        } else {
          bandStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder addBandStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats value) {
        if (bandStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandStatsIsMutable();
          bandStats_.add(index, value);
          onChanged();
        } else {
          bandStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder addBandStats(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder builderForValue) {
        if (bandStatsBuilder_ == null) {
          ensureBandStatsIsMutable();
          bandStats_.add(builderForValue.build());
          onChanged();
        } else {
          bandStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder addBandStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder builderForValue) {
        if (bandStatsBuilder_ == null) {
          ensureBandStatsIsMutable();
          bandStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          bandStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder addAllBandStats(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats> values) {
        if (bandStatsBuilder_ == null) {
          ensureBandStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bandStats_);
          onChanged();
        } else {
          bandStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder clearBandStats() {
        if (bandStatsBuilder_ == null) {
          bandStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bandStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public Builder removeBandStats(int index) {
        if (bandStatsBuilder_ == null) {
          ensureBandStatsIsMutable();
          bandStats_.remove(index);
          onChanged();
        } else {
          bandStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder getBandStatsBuilder(
          int index) {
        return getBandStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder getBandStatsOrBuilder(
          int index) {
        if (bandStatsBuilder_ == null) {
          return bandStats_.get(index);  } else {
          return bandStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder> 
           getBandStatsOrBuilderList() {
        if (bandStatsBuilder_ != null) {
          return bandStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bandStats_);
        }
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder addBandStatsBuilder() {
        return getBandStatsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.getDefaultInstance());
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder addBandStatsBuilder(
          int index) {
        return getBandStatsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.getDefaultInstance());
      }
      /**
       * <pre>
       * The band_stats length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_stats band_stats = 7;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder> 
           getBandStatsBuilderList() {
        return getBandStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder> 
          getBandStatsFieldBuilder() {
        if (bandStatsBuilder_ == null) {
          bandStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_statsOrBuilder>(
                  bandStats_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          bandStats_ = null;
        }
        return bandStatsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_stats)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_stats)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_stats>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_stats>() {
      @java.lang.Override
      public ofp_meter_stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_stats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_stats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_stats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_configOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * All OFPMF_* that apply. 
     * </pre>
     *
     * <code>uint32 flags = 1;</code>
     */
    int getFlags();

    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 2;</code>
     */
    int getMeterId();

    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> 
        getBandsList();
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getBands(int index);
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    int getBandsCount();
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
        getBandsOrBuilderList();
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder getBandsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Body of reply to OFPMP_METER_CONFIG request. Meter configuration. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_config}
   */
  public  static final class ofp_meter_config extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_config)
      ofp_meter_configOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_config.newBuilder() to construct.
    private ofp_meter_config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_config() {
      bands_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_config();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              flags_ = input.readUInt32();
              break;
            }
            case 16: {

              meterId_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                bands_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header>();
                mutable_bitField0_ |= 0x00000001;
              }
              bands_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          bands_ = java.util.Collections.unmodifiableList(bands_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder.class);
    }

    public static final int FLAGS_FIELD_NUMBER = 1;
    private int flags_;
    /**
     * <pre>
     * All OFPMF_* that apply. 
     * </pre>
     *
     * <code>uint32 flags = 1;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int METER_ID_FIELD_NUMBER = 2;
    private int meterId_;
    /**
     * <pre>
     * Meter instance. 
     * </pre>
     *
     * <code>uint32 meter_id = 2;</code>
     */
    public int getMeterId() {
      return meterId_;
    }

    public static final int BANDS_FIELD_NUMBER = 3;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> bands_;
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> getBandsList() {
      return bands_;
    }
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
        getBandsOrBuilderList() {
      return bands_;
    }
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    public int getBandsCount() {
      return bands_.size();
    }
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getBands(int index) {
      return bands_.get(index);
    }
    /**
     * <pre>
     * The bands length is
     *inferred from the length field. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder getBandsOrBuilder(
        int index) {
      return bands_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (flags_ != 0) {
        output.writeUInt32(1, flags_);
      }
      if (meterId_ != 0) {
        output.writeUInt32(2, meterId_);
      }
      for (int i = 0; i < bands_.size(); i++) {
        output.writeMessage(3, bands_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (flags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, flags_);
      }
      if (meterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, meterId_);
      }
      for (int i = 0; i < bands_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, bands_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_config)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_config other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_config) obj;

      if (getFlags()
          != other.getFlags()) return false;
      if (getMeterId()
          != other.getMeterId()) return false;
      if (!getBandsList()
          .equals(other.getBandsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getFlags();
      hash = (37 * hash) + METER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMeterId();
      if (getBandsCount() > 0) {
        hash = (37 * hash) + BANDS_FIELD_NUMBER;
        hash = (53 * hash) + getBandsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_METER_CONFIG request. Meter configuration. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_config)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_configOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_config_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBandsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        flags_ = 0;

        meterId_ = 0;

        if (bandsBuilder_ == null) {
          bands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bandsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_config_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_config getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_config build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_config buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_config result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_config(this);
        int from_bitField0_ = bitField0_;
        result.flags_ = flags_;
        result.meterId_ = meterId_;
        if (bandsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            bands_ = java.util.Collections.unmodifiableList(bands_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.bands_ = bands_;
        } else {
          result.bands_ = bandsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_config) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_config other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.getDefaultInstance()) return this;
        if (other.getFlags() != 0) {
          setFlags(other.getFlags());
        }
        if (other.getMeterId() != 0) {
          setMeterId(other.getMeterId());
        }
        if (bandsBuilder_ == null) {
          if (!other.bands_.isEmpty()) {
            if (bands_.isEmpty()) {
              bands_ = other.bands_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBandsIsMutable();
              bands_.addAll(other.bands_);
            }
            onChanged();
          }
        } else {
          if (!other.bands_.isEmpty()) {
            if (bandsBuilder_.isEmpty()) {
              bandsBuilder_.dispose();
              bandsBuilder_ = null;
              bands_ = other.bands_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bandsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBandsFieldBuilder() : null;
            } else {
              bandsBuilder_.addAllMessages(other.bands_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_config) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int flags_ ;
      /**
       * <pre>
       * All OFPMF_* that apply. 
       * </pre>
       *
       * <code>uint32 flags = 1;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       * All OFPMF_* that apply. 
       * </pre>
       *
       * <code>uint32 flags = 1;</code>
       */
      public Builder setFlags(int value) {
        
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All OFPMF_* that apply. 
       * </pre>
       *
       * <code>uint32 flags = 1;</code>
       */
      public Builder clearFlags() {
        
        flags_ = 0;
        onChanged();
        return this;
      }

      private int meterId_ ;
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 2;</code>
       */
      public int getMeterId() {
        return meterId_;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 2;</code>
       */
      public Builder setMeterId(int value) {
        
        meterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Meter instance. 
       * </pre>
       *
       * <code>uint32 meter_id = 2;</code>
       */
      public Builder clearMeterId() {
        
        meterId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> bands_ =
        java.util.Collections.emptyList();
      private void ensureBandsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          bands_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header>(bands_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> bandsBuilder_;

      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> getBandsList() {
        if (bandsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bands_);
        } else {
          return bandsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public int getBandsCount() {
        if (bandsBuilder_ == null) {
          return bands_.size();
        } else {
          return bandsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header getBands(int index) {
        if (bandsBuilder_ == null) {
          return bands_.get(index);
        } else {
          return bandsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder setBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header value) {
        if (bandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandsIsMutable();
          bands_.set(index, value);
          onChanged();
        } else {
          bandsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder setBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder builderForValue) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.set(index, builderForValue.build());
          onChanged();
        } else {
          bandsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder addBands(org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header value) {
        if (bandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandsIsMutable();
          bands_.add(value);
          onChanged();
        } else {
          bandsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder addBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header value) {
        if (bandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBandsIsMutable();
          bands_.add(index, value);
          onChanged();
        } else {
          bandsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder addBands(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder builderForValue) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.add(builderForValue.build());
          onChanged();
        } else {
          bandsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder addBands(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder builderForValue) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.add(index, builderForValue.build());
          onChanged();
        } else {
          bandsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder addAllBands(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header> values) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bands_);
          onChanged();
        } else {
          bandsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder clearBands() {
        if (bandsBuilder_ == null) {
          bands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bandsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public Builder removeBands(int index) {
        if (bandsBuilder_ == null) {
          ensureBandsIsMutable();
          bands_.remove(index);
          onChanged();
        } else {
          bandsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder getBandsBuilder(
          int index) {
        return getBandsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder getBandsOrBuilder(
          int index) {
        if (bandsBuilder_ == null) {
          return bands_.get(index);  } else {
          return bandsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
           getBandsOrBuilderList() {
        if (bandsBuilder_ != null) {
          return bandsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bands_);
        }
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder addBandsBuilder() {
        return getBandsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.getDefaultInstance());
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder addBandsBuilder(
          int index) {
        return getBandsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.getDefaultInstance());
      }
      /**
       * <pre>
       * The bands length is
       *inferred from the length field. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_meter_band_header bands = 3;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder> 
           getBandsBuilderList() {
        return getBandsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder> 
          getBandsFieldBuilder() {
        if (bandsBuilder_ == null) {
          bandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_band_headerOrBuilder>(
                  bands_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          bands_ = null;
        }
        return bandsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_config)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_config)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_config();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_config>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_config>() {
      @java.lang.Override
      public ofp_meter_config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_config(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_config> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_featuresOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_features)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Maximum number of meters. 
     * </pre>
     *
     * <code>uint32 max_meter = 1;</code>
     */
    int getMaxMeter();

    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPMBT_*) values supported.
     * </pre>
     *
     * <code>uint32 band_types = 2;</code>
     */
    int getBandTypes();

    /**
     * <pre>
     * Bitmaps of "ofp_meter_flags". 
     * </pre>
     *
     * <code>uint32 capabilities = 3;</code>
     */
    int getCapabilities();

    /**
     * <pre>
     * Maximum bands per meters 
     * </pre>
     *
     * <code>uint32 max_bands = 4;</code>
     */
    int getMaxBands();

    /**
     * <pre>
     * Maximum color value 
     * </pre>
     *
     * <code>uint32 max_color = 5;</code>
     */
    int getMaxColor();
  }
  /**
   * <pre>
   * Body of reply to OFPMP_METER_FEATURES request. Meter features. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_meter_features}
   */
  public  static final class ofp_meter_features extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_features)
      ofp_meter_featuresOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_features.newBuilder() to construct.
    private ofp_meter_features(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_features() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_features();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_features(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              maxMeter_ = input.readUInt32();
              break;
            }
            case 16: {

              bandTypes_ = input.readUInt32();
              break;
            }
            case 24: {

              capabilities_ = input.readUInt32();
              break;
            }
            case 32: {

              maxBands_ = input.readUInt32();
              break;
            }
            case 40: {

              maxColor_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_features_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_features_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_features.Builder.class);
    }

    public static final int MAX_METER_FIELD_NUMBER = 1;
    private int maxMeter_;
    /**
     * <pre>
     * Maximum number of meters. 
     * </pre>
     *
     * <code>uint32 max_meter = 1;</code>
     */
    public int getMaxMeter() {
      return maxMeter_;
    }

    public static final int BAND_TYPES_FIELD_NUMBER = 2;
    private int bandTypes_;
    /**
     * <pre>
     * Bitmaps of (1 &lt;&lt; OFPMBT_*) values supported.
     * </pre>
     *
     * <code>uint32 band_types = 2;</code>
     */
    public int getBandTypes() {
      return bandTypes_;
    }

    public static final int CAPABILITIES_FIELD_NUMBER = 3;
    private int capabilities_;
    /**
     * <pre>
     * Bitmaps of "ofp_meter_flags". 
     * </pre>
     *
     * <code>uint32 capabilities = 3;</code>
     */
    public int getCapabilities() {
      return capabilities_;
    }

    public static final int MAX_BANDS_FIELD_NUMBER = 4;
    private int maxBands_;
    /**
     * <pre>
     * Maximum bands per meters 
     * </pre>
     *
     * <code>uint32 max_bands = 4;</code>
     */
    public int getMaxBands() {
      return maxBands_;
    }

    public static final int MAX_COLOR_FIELD_NUMBER = 5;
    private int maxColor_;
    /**
     * <pre>
     * Maximum color value 
     * </pre>
     *
     * <code>uint32 max_color = 5;</code>
     */
    public int getMaxColor() {
      return maxColor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxMeter_ != 0) {
        output.writeUInt32(1, maxMeter_);
      }
      if (bandTypes_ != 0) {
        output.writeUInt32(2, bandTypes_);
      }
      if (capabilities_ != 0) {
        output.writeUInt32(3, capabilities_);
      }
      if (maxBands_ != 0) {
        output.writeUInt32(4, maxBands_);
      }
      if (maxColor_ != 0) {
        output.writeUInt32(5, maxColor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxMeter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, maxMeter_);
      }
      if (bandTypes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, bandTypes_);
      }
      if (capabilities_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, capabilities_);
      }
      if (maxBands_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxBands_);
      }
      if (maxColor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxColor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_features)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_features other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_features) obj;

      if (getMaxMeter()
          != other.getMaxMeter()) return false;
      if (getBandTypes()
          != other.getBandTypes()) return false;
      if (getCapabilities()
          != other.getCapabilities()) return false;
      if (getMaxBands()
          != other.getMaxBands()) return false;
      if (getMaxColor()
          != other.getMaxColor()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAX_METER_FIELD_NUMBER;
      hash = (53 * hash) + getMaxMeter();
      hash = (37 * hash) + BAND_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getBandTypes();
      hash = (37 * hash) + CAPABILITIES_FIELD_NUMBER;
      hash = (53 * hash) + getCapabilities();
      hash = (37 * hash) + MAX_BANDS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxBands();
      hash = (37 * hash) + MAX_COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getMaxColor();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_features prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body of reply to OFPMP_METER_FEATURES request. Meter features. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_meter_features}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_features)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_featuresOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_features_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_features_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_features.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_features.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_features.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxMeter_ = 0;

        bandTypes_ = 0;

        capabilities_ = 0;

        maxBands_ = 0;

        maxColor_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_features_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_features getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_features.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_features build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_features result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_features buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_features result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_features(this);
        result.maxMeter_ = maxMeter_;
        result.bandTypes_ = bandTypes_;
        result.capabilities_ = capabilities_;
        result.maxBands_ = maxBands_;
        result.maxColor_ = maxColor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_features) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_features)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_features other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_features.getDefaultInstance()) return this;
        if (other.getMaxMeter() != 0) {
          setMaxMeter(other.getMaxMeter());
        }
        if (other.getBandTypes() != 0) {
          setBandTypes(other.getBandTypes());
        }
        if (other.getCapabilities() != 0) {
          setCapabilities(other.getCapabilities());
        }
        if (other.getMaxBands() != 0) {
          setMaxBands(other.getMaxBands());
        }
        if (other.getMaxColor() != 0) {
          setMaxColor(other.getMaxColor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_features parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_features) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int maxMeter_ ;
      /**
       * <pre>
       * Maximum number of meters. 
       * </pre>
       *
       * <code>uint32 max_meter = 1;</code>
       */
      public int getMaxMeter() {
        return maxMeter_;
      }
      /**
       * <pre>
       * Maximum number of meters. 
       * </pre>
       *
       * <code>uint32 max_meter = 1;</code>
       */
      public Builder setMaxMeter(int value) {
        
        maxMeter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of meters. 
       * </pre>
       *
       * <code>uint32 max_meter = 1;</code>
       */
      public Builder clearMaxMeter() {
        
        maxMeter_ = 0;
        onChanged();
        return this;
      }

      private int bandTypes_ ;
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPMBT_*) values supported.
       * </pre>
       *
       * <code>uint32 band_types = 2;</code>
       */
      public int getBandTypes() {
        return bandTypes_;
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPMBT_*) values supported.
       * </pre>
       *
       * <code>uint32 band_types = 2;</code>
       */
      public Builder setBandTypes(int value) {
        
        bandTypes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmaps of (1 &lt;&lt; OFPMBT_*) values supported.
       * </pre>
       *
       * <code>uint32 band_types = 2;</code>
       */
      public Builder clearBandTypes() {
        
        bandTypes_ = 0;
        onChanged();
        return this;
      }

      private int capabilities_ ;
      /**
       * <pre>
       * Bitmaps of "ofp_meter_flags". 
       * </pre>
       *
       * <code>uint32 capabilities = 3;</code>
       */
      public int getCapabilities() {
        return capabilities_;
      }
      /**
       * <pre>
       * Bitmaps of "ofp_meter_flags". 
       * </pre>
       *
       * <code>uint32 capabilities = 3;</code>
       */
      public Builder setCapabilities(int value) {
        
        capabilities_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmaps of "ofp_meter_flags". 
       * </pre>
       *
       * <code>uint32 capabilities = 3;</code>
       */
      public Builder clearCapabilities() {
        
        capabilities_ = 0;
        onChanged();
        return this;
      }

      private int maxBands_ ;
      /**
       * <pre>
       * Maximum bands per meters 
       * </pre>
       *
       * <code>uint32 max_bands = 4;</code>
       */
      public int getMaxBands() {
        return maxBands_;
      }
      /**
       * <pre>
       * Maximum bands per meters 
       * </pre>
       *
       * <code>uint32 max_bands = 4;</code>
       */
      public Builder setMaxBands(int value) {
        
        maxBands_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum bands per meters 
       * </pre>
       *
       * <code>uint32 max_bands = 4;</code>
       */
      public Builder clearMaxBands() {
        
        maxBands_ = 0;
        onChanged();
        return this;
      }

      private int maxColor_ ;
      /**
       * <pre>
       * Maximum color value 
       * </pre>
       *
       * <code>uint32 max_color = 5;</code>
       */
      public int getMaxColor() {
        return maxColor_;
      }
      /**
       * <pre>
       * Maximum color value 
       * </pre>
       *
       * <code>uint32 max_color = 5;</code>
       */
      public Builder setMaxColor(int value) {
        
        maxColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum color value 
       * </pre>
       *
       * <code>uint32 max_color = 5;</code>
       */
      public Builder clearMaxColor() {
        
        maxColor_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_features)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_features)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_features DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_features();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_features getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_features>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_features>() {
      @java.lang.Override
      public ofp_meter_features parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_features(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_features> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_features> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_features getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_meter_entryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_meter_entry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.ofp_meter_config config = 1;</code>
     */
    boolean hasConfig();
    /**
     * <code>.openflow_13.ofp_meter_config config = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_config getConfig();
    /**
     * <code>.openflow_13.ofp_meter_config config = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_configOrBuilder getConfigOrBuilder();

    /**
     * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
     */
    boolean hasStats();
    /**
     * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getStats();
    /**
     * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder getStatsOrBuilder();
  }
  /**
   * Protobuf type {@code openflow_13.ofp_meter_entry}
   */
  public  static final class ofp_meter_entry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_meter_entry)
      ofp_meter_entryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_meter_entry.newBuilder() to construct.
    private ofp_meter_entry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_meter_entry() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_meter_entry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_meter_entry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder subBuilder = null;
              if (config_ != null) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder subBuilder = null;
              if (stats_ != null) {
                subBuilder = stats_.toBuilder();
              }
              stats_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stats_);
                stats_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_entry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_entry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder.class);
    }

    public static final int CONFIG_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.ofp_meter_config config_;
    /**
     * <code>.openflow_13.ofp_meter_config config = 1;</code>
     */
    public boolean hasConfig() {
      return config_ != null;
    }
    /**
     * <code>.openflow_13.ofp_meter_config config = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_config getConfig() {
      return config_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.getDefaultInstance() : config_;
    }
    /**
     * <code>.openflow_13.ofp_meter_config config = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_configOrBuilder getConfigOrBuilder() {
      return getConfig();
    }

    public static final int STATS_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats stats_;
    /**
     * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
     */
    public boolean hasStats() {
      return stats_ != null;
    }
    /**
     * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getStats() {
      return stats_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.getDefaultInstance() : stats_;
    }
    /**
     * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder getStatsOrBuilder() {
      return getStats();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (config_ != null) {
        output.writeMessage(1, getConfig());
      }
      if (stats_ != null) {
        output.writeMessage(2, getStats());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (config_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConfig());
      }
      if (stats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStats());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry other = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry) obj;

      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (hasStats() != other.hasStats()) return false;
      if (hasStats()) {
        if (!getStats()
            .equals(other.getStats())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      if (hasStats()) {
        hash = (37 * hash) + STATS_FIELD_NUMBER;
        hash = (53 * hash) + getStats().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.ofp_meter_entry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_meter_entry)
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_entry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.class, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          config_ = null;
          configBuilder_ = null;
        }
        if (statsBuilder_ == null) {
          stats_ = null;
        } else {
          stats_ = null;
          statsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_meter_entry_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry result = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry(this);
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        if (statsBuilder_ == null) {
          result.stats_ = stats_;
        } else {
          result.stats_ = statsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.getDefaultInstance()) return this;
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.hasStats()) {
          mergeStats(other.getStats());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_meter_config config_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_config, org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_configOrBuilder> configBuilder_;
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public boolean hasConfig() {
        return configBuilder_ != null || config_ != null;
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_config getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public Builder setConfig(org.opencord.voltha.openflow13.Openflow13.ofp_meter_config value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public Builder setConfig(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public Builder mergeConfig(org.opencord.voltha.openflow13.Openflow13.ofp_meter_config value) {
        if (configBuilder_ == null) {
          if (config_ != null) {
            config_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          config_ = null;
          configBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder getConfigBuilder() {
        
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_configOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.getDefaultInstance() : config_;
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_config config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_config, org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_configOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_config, org.opencord.voltha.openflow13.Openflow13.ofp_meter_config.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_configOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats stats_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder> statsBuilder_;
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public boolean hasStats() {
        return statsBuilder_ != null || stats_ != null;
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getStats() {
        if (statsBuilder_ == null) {
          return stats_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.getDefaultInstance() : stats_;
        } else {
          return statsBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public Builder setStats(org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stats_ = value;
          onChanged();
        } else {
          statsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public Builder setStats(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          stats_ = builderForValue.build();
          onChanged();
        } else {
          statsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public Builder mergeStats(org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats value) {
        if (statsBuilder_ == null) {
          if (stats_ != null) {
            stats_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.newBuilder(stats_).mergeFrom(value).buildPartial();
          } else {
            stats_ = value;
          }
          onChanged();
        } else {
          statsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public Builder clearStats() {
        if (statsBuilder_ == null) {
          stats_ = null;
          onChanged();
        } else {
          stats_ = null;
          statsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder getStatsBuilder() {
        
        onChanged();
        return getStatsFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder getStatsOrBuilder() {
        if (statsBuilder_ != null) {
          return statsBuilder_.getMessageOrBuilder();
        } else {
          return stats_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.getDefaultInstance() : stats_;
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_stats stats = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder> 
          getStatsFieldBuilder() {
        if (statsBuilder_ == null) {
          statsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder>(
                  getStats(),
                  getParentForChildren(),
                  isClean());
          stats_ = null;
        }
        return statsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_meter_entry)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_meter_entry)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_meter_entry>
        PARSER = new com.google.protobuf.AbstractParser<ofp_meter_entry>() {
      @java.lang.Override
      public ofp_meter_entry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_meter_entry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_meter_entry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_meter_entry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_experimenter_multipart_headerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_experimenter_multipart_header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Experimenter ID which takes the same form
     *as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    int getExperimenter();

    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 2;</code>
     */
    int getExpType();

    /**
     * <pre>
     * Experimenter-defined arbitrary additional data. 
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Body for ofp_multipart_request/reply of type OFPMP_EXPERIMENTER. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_experimenter_multipart_header}
   */
  public  static final class ofp_experimenter_multipart_header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_experimenter_multipart_header)
      ofp_experimenter_multipart_headerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_experimenter_multipart_header.newBuilder() to construct.
    private ofp_experimenter_multipart_header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_experimenter_multipart_header() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_experimenter_multipart_header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_experimenter_multipart_header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              experimenter_ = input.readUInt32();
              break;
            }
            case 16: {

              expType_ = input.readUInt32();
              break;
            }
            case 26: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_multipart_header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_multipart_header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header.Builder.class);
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 1;
    private int experimenter_;
    /**
     * <pre>
     * Experimenter ID which takes the same form
     *as in struct ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    public static final int EXP_TYPE_FIELD_NUMBER = 2;
    private int expType_;
    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 2;</code>
     */
    public int getExpType() {
      return expType_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Experimenter-defined arbitrary additional data. 
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (experimenter_ != 0) {
        output.writeUInt32(1, experimenter_);
      }
      if (expType_ != 0) {
        output.writeUInt32(2, expType_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, experimenter_);
      }
      if (expType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, expType_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header other = (org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header) obj;

      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (getExpType()
          != other.getExpType()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (37 * hash) + EXP_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getExpType();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Body for ofp_multipart_request/reply of type OFPMP_EXPERIMENTER. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_experimenter_multipart_header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_experimenter_multipart_header)
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_headerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_multipart_header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_multipart_header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        experimenter_ = 0;

        expType_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_multipart_header_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header result = new org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header(this);
        result.experimenter_ = experimenter_;
        result.expType_ = expType_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header.getDefaultInstance()) return this;
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        if (other.getExpType() != 0) {
          setExpType(other.getExpType());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int experimenter_ ;
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same form
       *as in struct ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }

      private int expType_ ;
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public int getExpType() {
        return expType_;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public Builder setExpType(int value) {
        
        expType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public Builder clearExpType() {
        
        expType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_experimenter_multipart_header)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_experimenter_multipart_header)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_experimenter_multipart_header>
        PARSER = new com.google.protobuf.AbstractParser<ofp_experimenter_multipart_header>() {
      @java.lang.Override
      public ofp_experimenter_multipart_header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_experimenter_multipart_header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_experimenter_multipart_header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_experimenter_multipart_header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_multipart_header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_experimenter_headerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_experimenter_header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;  /&#42; Type OFPT_EXPERIMENTER. *&#47;
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    int getExperimenter();

    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 2;</code>
     */
    int getExpType();

    /**
     * <pre>
     * Experimenter-defined arbitrary additional data. 
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Experimenter extension. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_experimenter_header}
   */
  public  static final class ofp_experimenter_header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_experimenter_header)
      ofp_experimenter_headerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_experimenter_header.newBuilder() to construct.
    private ofp_experimenter_header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_experimenter_header() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_experimenter_header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_experimenter_header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              experimenter_ = input.readUInt32();
              break;
            }
            case 16: {

              expType_ = input.readUInt32();
              break;
            }
            case 26: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header.Builder.class);
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 1;
    private int experimenter_;
    /**
     * <pre>
     *ofp_header header;  /&#42; Type OFPT_EXPERIMENTER. *&#47;
     * </pre>
     *
     * <code>uint32 experimenter = 1;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    public static final int EXP_TYPE_FIELD_NUMBER = 2;
    private int expType_;
    /**
     * <pre>
     * Experimenter defined. 
     * </pre>
     *
     * <code>uint32 exp_type = 2;</code>
     */
    public int getExpType() {
      return expType_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Experimenter-defined arbitrary additional data. 
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (experimenter_ != 0) {
        output.writeUInt32(1, experimenter_);
      }
      if (expType_ != 0) {
        output.writeUInt32(2, expType_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, experimenter_);
      }
      if (expType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, expType_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header other = (org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header) obj;

      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (getExpType()
          != other.getExpType()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (37 * hash) + EXP_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getExpType();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Experimenter extension. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_experimenter_header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_experimenter_header)
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_headerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        experimenter_ = 0;

        expType_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_experimenter_header_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header result = new org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header(this);
        result.experimenter_ = experimenter_;
        result.expType_ = expType_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header.getDefaultInstance()) return this;
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        if (other.getExpType() != 0) {
          setExpType(other.getExpType());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int experimenter_ ;
      /**
       * <pre>
       *ofp_header header;  /&#42; Type OFPT_EXPERIMENTER. *&#47;
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       *ofp_header header;  /&#42; Type OFPT_EXPERIMENTER. *&#47;
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;  /&#42; Type OFPT_EXPERIMENTER. *&#47;
       * </pre>
       *
       * <code>uint32 experimenter = 1;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }

      private int expType_ ;
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public int getExpType() {
        return expType_;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public Builder setExpType(int value) {
        
        expType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter defined. 
       * </pre>
       *
       * <code>uint32 exp_type = 2;</code>
       */
      public Builder clearExpType() {
        
        expType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter-defined arbitrary additional data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_experimenter_header)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_experimenter_header)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_experimenter_header>
        PARSER = new com.google.protobuf.AbstractParser<ofp_experimenter_header>() {
      @java.lang.Override
      public ofp_experimenter_header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_experimenter_header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_experimenter_header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_experimenter_header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_experimenter_header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_prop_headerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_prop_header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * One of OFPQT_. 
     * </pre>
     *
     * <code>uint32 property = 1;</code>
     */
    int getProperty();

    /**
     * <pre>
     * Length of property, including this header. 
     * </pre>
     *
     * <code>uint32 len = 2;</code>
     */
    int getLen();
  }
  /**
   * <pre>
   * Common description for a queue. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_queue_prop_header}
   */
  public  static final class ofp_queue_prop_header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_prop_header)
      ofp_queue_prop_headerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_prop_header.newBuilder() to construct.
    private ofp_queue_prop_header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_prop_header() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_prop_header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_prop_header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              property_ = input.readUInt32();
              break;
            }
            case 16: {

              len_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder.class);
    }

    public static final int PROPERTY_FIELD_NUMBER = 1;
    private int property_;
    /**
     * <pre>
     * One of OFPQT_. 
     * </pre>
     *
     * <code>uint32 property = 1;</code>
     */
    public int getProperty() {
      return property_;
    }

    public static final int LEN_FIELD_NUMBER = 2;
    private int len_;
    /**
     * <pre>
     * Length of property, including this header. 
     * </pre>
     *
     * <code>uint32 len = 2;</code>
     */
    public int getLen() {
      return len_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (property_ != 0) {
        output.writeUInt32(1, property_);
      }
      if (len_ != 0) {
        output.writeUInt32(2, len_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (property_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, property_);
      }
      if (len_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, len_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header) obj;

      if (getProperty()
          != other.getProperty()) return false;
      if (getLen()
          != other.getLen()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROPERTY_FIELD_NUMBER;
      hash = (53 * hash) + getProperty();
      hash = (37 * hash) + LEN_FIELD_NUMBER;
      hash = (53 * hash) + getLen();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Common description for a queue. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_queue_prop_header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_prop_header)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        property_ = 0;

        len_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_header_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header(this);
        result.property_ = property_;
        result.len_ = len_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance()) return this;
        if (other.getProperty() != 0) {
          setProperty(other.getProperty());
        }
        if (other.getLen() != 0) {
          setLen(other.getLen());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int property_ ;
      /**
       * <pre>
       * One of OFPQT_. 
       * </pre>
       *
       * <code>uint32 property = 1;</code>
       */
      public int getProperty() {
        return property_;
      }
      /**
       * <pre>
       * One of OFPQT_. 
       * </pre>
       *
       * <code>uint32 property = 1;</code>
       */
      public Builder setProperty(int value) {
        
        property_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One of OFPQT_. 
       * </pre>
       *
       * <code>uint32 property = 1;</code>
       */
      public Builder clearProperty() {
        
        property_ = 0;
        onChanged();
        return this;
      }

      private int len_ ;
      /**
       * <pre>
       * Length of property, including this header. 
       * </pre>
       *
       * <code>uint32 len = 2;</code>
       */
      public int getLen() {
        return len_;
      }
      /**
       * <pre>
       * Length of property, including this header. 
       * </pre>
       *
       * <code>uint32 len = 2;</code>
       */
      public Builder setLen(int value) {
        
        len_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Length of property, including this header. 
       * </pre>
       *
       * <code>uint32 len = 2;</code>
       */
      public Builder clearLen() {
        
        len_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_prop_header)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_prop_header)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_prop_header>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_prop_header>() {
      @java.lang.Override
      public ofp_queue_prop_header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_prop_header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_prop_header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_prop_header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_prop_min_rateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_prop_min_rate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * prop: OFPQT_MIN, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    boolean hasPropHeader();
    /**
     * <pre>
     * prop: OFPQT_MIN, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader();
    /**
     * <pre>
     * prop: OFPQT_MIN, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder();

    /**
     * <pre>
     * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
     * </pre>
     *
     * <code>uint32 rate = 2;</code>
     */
    int getRate();
  }
  /**
   * <pre>
   * Min-Rate queue property description. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_queue_prop_min_rate}
   */
  public  static final class ofp_queue_prop_min_rate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_prop_min_rate)
      ofp_queue_prop_min_rateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_prop_min_rate.newBuilder() to construct.
    private ofp_queue_prop_min_rate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_prop_min_rate() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_prop_min_rate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_prop_min_rate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder subBuilder = null;
              if (propHeader_ != null) {
                subBuilder = propHeader_.toBuilder();
              }
              propHeader_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(propHeader_);
                propHeader_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              rate_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_min_rate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_min_rate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate.Builder.class);
    }

    public static final int PROP_HEADER_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header propHeader_;
    /**
     * <pre>
     * prop: OFPQT_MIN, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public boolean hasPropHeader() {
      return propHeader_ != null;
    }
    /**
     * <pre>
     * prop: OFPQT_MIN, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader() {
      return propHeader_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
    }
    /**
     * <pre>
     * prop: OFPQT_MIN, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder() {
      return getPropHeader();
    }

    public static final int RATE_FIELD_NUMBER = 2;
    private int rate_;
    /**
     * <pre>
     * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
     * </pre>
     *
     * <code>uint32 rate = 2;</code>
     */
    public int getRate() {
      return rate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (propHeader_ != null) {
        output.writeMessage(1, getPropHeader());
      }
      if (rate_ != 0) {
        output.writeUInt32(2, rate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (propHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPropHeader());
      }
      if (rate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, rate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate) obj;

      if (hasPropHeader() != other.hasPropHeader()) return false;
      if (hasPropHeader()) {
        if (!getPropHeader()
            .equals(other.getPropHeader())) return false;
      }
      if (getRate()
          != other.getRate()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPropHeader()) {
        hash = (37 * hash) + PROP_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getPropHeader().hashCode();
      }
      hash = (37 * hash) + RATE_FIELD_NUMBER;
      hash = (53 * hash) + getRate();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Min-Rate queue property description. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_queue_prop_min_rate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_prop_min_rate)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_min_rate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_min_rate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (propHeaderBuilder_ == null) {
          propHeader_ = null;
        } else {
          propHeader_ = null;
          propHeaderBuilder_ = null;
        }
        rate_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_min_rate_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate(this);
        if (propHeaderBuilder_ == null) {
          result.propHeader_ = propHeader_;
        } else {
          result.propHeader_ = propHeaderBuilder_.build();
        }
        result.rate_ = rate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate.getDefaultInstance()) return this;
        if (other.hasPropHeader()) {
          mergePropHeader(other.getPropHeader());
        }
        if (other.getRate() != 0) {
          setRate(other.getRate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header propHeader_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> propHeaderBuilder_;
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public boolean hasPropHeader() {
        return propHeaderBuilder_ != null || propHeader_ != null;
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader() {
        if (propHeaderBuilder_ == null) {
          return propHeader_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
        } else {
          return propHeaderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder setPropHeader(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          propHeader_ = value;
          onChanged();
        } else {
          propHeaderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder setPropHeader(
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder builderForValue) {
        if (propHeaderBuilder_ == null) {
          propHeader_ = builderForValue.build();
          onChanged();
        } else {
          propHeaderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder mergePropHeader(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propHeaderBuilder_ == null) {
          if (propHeader_ != null) {
            propHeader_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.newBuilder(propHeader_).mergeFrom(value).buildPartial();
          } else {
            propHeader_ = value;
          }
          onChanged();
        } else {
          propHeaderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder clearPropHeader() {
        if (propHeaderBuilder_ == null) {
          propHeader_ = null;
          onChanged();
        } else {
          propHeader_ = null;
          propHeaderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder getPropHeaderBuilder() {
        
        onChanged();
        return getPropHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder() {
        if (propHeaderBuilder_ != null) {
          return propHeaderBuilder_.getMessageOrBuilder();
        } else {
          return propHeader_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
        }
      }
      /**
       * <pre>
       * prop: OFPQT_MIN, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> 
          getPropHeaderFieldBuilder() {
        if (propHeaderBuilder_ == null) {
          propHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder>(
                  getPropHeader(),
                  getParentForChildren(),
                  isClean());
          propHeader_ = null;
        }
        return propHeaderBuilder_;
      }

      private int rate_ ;
      /**
       * <pre>
       * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public int getRate() {
        return rate_;
      }
      /**
       * <pre>
       * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public Builder setRate(int value) {
        
        rate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public Builder clearRate() {
        
        rate_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_prop_min_rate)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_prop_min_rate)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_prop_min_rate>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_prop_min_rate>() {
      @java.lang.Override
      public ofp_queue_prop_min_rate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_prop_min_rate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_prop_min_rate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_prop_min_rate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_min_rate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_prop_max_rateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_prop_max_rate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * prop: OFPQT_MAX, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    boolean hasPropHeader();
    /**
     * <pre>
     * prop: OFPQT_MAX, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader();
    /**
     * <pre>
     * prop: OFPQT_MAX, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder();

    /**
     * <pre>
     * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
     * </pre>
     *
     * <code>uint32 rate = 2;</code>
     */
    int getRate();
  }
  /**
   * <pre>
   * Max-Rate queue property description. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_queue_prop_max_rate}
   */
  public  static final class ofp_queue_prop_max_rate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_prop_max_rate)
      ofp_queue_prop_max_rateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_prop_max_rate.newBuilder() to construct.
    private ofp_queue_prop_max_rate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_prop_max_rate() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_prop_max_rate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_prop_max_rate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder subBuilder = null;
              if (propHeader_ != null) {
                subBuilder = propHeader_.toBuilder();
              }
              propHeader_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(propHeader_);
                propHeader_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              rate_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_max_rate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_max_rate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate.Builder.class);
    }

    public static final int PROP_HEADER_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header propHeader_;
    /**
     * <pre>
     * prop: OFPQT_MAX, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public boolean hasPropHeader() {
      return propHeader_ != null;
    }
    /**
     * <pre>
     * prop: OFPQT_MAX, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader() {
      return propHeader_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
    }
    /**
     * <pre>
     * prop: OFPQT_MAX, len: 16. 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder() {
      return getPropHeader();
    }

    public static final int RATE_FIELD_NUMBER = 2;
    private int rate_;
    /**
     * <pre>
     * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
     * </pre>
     *
     * <code>uint32 rate = 2;</code>
     */
    public int getRate() {
      return rate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (propHeader_ != null) {
        output.writeMessage(1, getPropHeader());
      }
      if (rate_ != 0) {
        output.writeUInt32(2, rate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (propHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPropHeader());
      }
      if (rate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, rate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate) obj;

      if (hasPropHeader() != other.hasPropHeader()) return false;
      if (hasPropHeader()) {
        if (!getPropHeader()
            .equals(other.getPropHeader())) return false;
      }
      if (getRate()
          != other.getRate()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPropHeader()) {
        hash = (37 * hash) + PROP_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getPropHeader().hashCode();
      }
      hash = (37 * hash) + RATE_FIELD_NUMBER;
      hash = (53 * hash) + getRate();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Max-Rate queue property description. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_queue_prop_max_rate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_prop_max_rate)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_max_rate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_max_rate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (propHeaderBuilder_ == null) {
          propHeader_ = null;
        } else {
          propHeader_ = null;
          propHeaderBuilder_ = null;
        }
        rate_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_max_rate_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate(this);
        if (propHeaderBuilder_ == null) {
          result.propHeader_ = propHeader_;
        } else {
          result.propHeader_ = propHeaderBuilder_.build();
        }
        result.rate_ = rate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate.getDefaultInstance()) return this;
        if (other.hasPropHeader()) {
          mergePropHeader(other.getPropHeader());
        }
        if (other.getRate() != 0) {
          setRate(other.getRate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header propHeader_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> propHeaderBuilder_;
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public boolean hasPropHeader() {
        return propHeaderBuilder_ != null || propHeader_ != null;
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader() {
        if (propHeaderBuilder_ == null) {
          return propHeader_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
        } else {
          return propHeaderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder setPropHeader(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          propHeader_ = value;
          onChanged();
        } else {
          propHeaderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder setPropHeader(
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder builderForValue) {
        if (propHeaderBuilder_ == null) {
          propHeader_ = builderForValue.build();
          onChanged();
        } else {
          propHeaderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder mergePropHeader(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propHeaderBuilder_ == null) {
          if (propHeader_ != null) {
            propHeader_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.newBuilder(propHeader_).mergeFrom(value).buildPartial();
          } else {
            propHeader_ = value;
          }
          onChanged();
        } else {
          propHeaderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder clearPropHeader() {
        if (propHeaderBuilder_ == null) {
          propHeader_ = null;
          onChanged();
        } else {
          propHeader_ = null;
          propHeaderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder getPropHeaderBuilder() {
        
        onChanged();
        return getPropHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder() {
        if (propHeaderBuilder_ != null) {
          return propHeaderBuilder_.getMessageOrBuilder();
        } else {
          return propHeader_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
        }
      }
      /**
       * <pre>
       * prop: OFPQT_MAX, len: 16. 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> 
          getPropHeaderFieldBuilder() {
        if (propHeaderBuilder_ == null) {
          propHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder>(
                  getPropHeader(),
                  getParentForChildren(),
                  isClean());
          propHeader_ = null;
        }
        return propHeaderBuilder_;
      }

      private int rate_ ;
      /**
       * <pre>
       * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public int getRate() {
        return rate_;
      }
      /**
       * <pre>
       * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public Builder setRate(int value) {
        
        rate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In 1/10 of a percent = 0;&gt;1000 -&gt; disabled. 
       * </pre>
       *
       * <code>uint32 rate = 2;</code>
       */
      public Builder clearRate() {
        
        rate_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_prop_max_rate)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_prop_max_rate)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_prop_max_rate>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_prop_max_rate>() {
      @java.lang.Override
      public ofp_queue_prop_max_rate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_prop_max_rate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_prop_max_rate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_prop_max_rate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_max_rate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_prop_experimenterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_prop_experimenter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * prop: OFPQT_EXPERIMENTER 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    boolean hasPropHeader();
    /**
     * <pre>
     * prop: OFPQT_EXPERIMENTER 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader();
    /**
     * <pre>
     * prop: OFPQT_EXPERIMENTER 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder();

    /**
     * <pre>
     * Experimenter ID which takes the same
     *form as in struct
     *ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 2;</code>
     */
    int getExperimenter();

    /**
     * <pre>
     * Experimenter defined data. 
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Experimenter queue property description. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_queue_prop_experimenter}
   */
  public  static final class ofp_queue_prop_experimenter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_prop_experimenter)
      ofp_queue_prop_experimenterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_prop_experimenter.newBuilder() to construct.
    private ofp_queue_prop_experimenter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_prop_experimenter() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_prop_experimenter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_prop_experimenter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder subBuilder = null;
              if (propHeader_ != null) {
                subBuilder = propHeader_.toBuilder();
              }
              propHeader_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(propHeader_);
                propHeader_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              experimenter_ = input.readUInt32();
              break;
            }
            case 26: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_experimenter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_experimenter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter.Builder.class);
    }

    public static final int PROP_HEADER_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header propHeader_;
    /**
     * <pre>
     * prop: OFPQT_EXPERIMENTER 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public boolean hasPropHeader() {
      return propHeader_ != null;
    }
    /**
     * <pre>
     * prop: OFPQT_EXPERIMENTER 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader() {
      return propHeader_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
    }
    /**
     * <pre>
     * prop: OFPQT_EXPERIMENTER 
     * </pre>
     *
     * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder() {
      return getPropHeader();
    }

    public static final int EXPERIMENTER_FIELD_NUMBER = 2;
    private int experimenter_;
    /**
     * <pre>
     * Experimenter ID which takes the same
     *form as in struct
     *ofp_experimenter_header. 
     * </pre>
     *
     * <code>uint32 experimenter = 2;</code>
     */
    public int getExperimenter() {
      return experimenter_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Experimenter defined data. 
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (propHeader_ != null) {
        output.writeMessage(1, getPropHeader());
      }
      if (experimenter_ != 0) {
        output.writeUInt32(2, experimenter_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (propHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPropHeader());
      }
      if (experimenter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, experimenter_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter) obj;

      if (hasPropHeader() != other.hasPropHeader()) return false;
      if (hasPropHeader()) {
        if (!getPropHeader()
            .equals(other.getPropHeader())) return false;
      }
      if (getExperimenter()
          != other.getExperimenter()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPropHeader()) {
        hash = (37 * hash) + PROP_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getPropHeader().hashCode();
      }
      hash = (37 * hash) + EXPERIMENTER_FIELD_NUMBER;
      hash = (53 * hash) + getExperimenter();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Experimenter queue property description. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_queue_prop_experimenter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_prop_experimenter)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_experimenter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_experimenter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (propHeaderBuilder_ == null) {
          propHeader_ = null;
        } else {
          propHeader_ = null;
          propHeaderBuilder_ = null;
        }
        experimenter_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_prop_experimenter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter(this);
        if (propHeaderBuilder_ == null) {
          result.propHeader_ = propHeader_;
        } else {
          result.propHeader_ = propHeaderBuilder_.build();
        }
        result.experimenter_ = experimenter_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter.getDefaultInstance()) return this;
        if (other.hasPropHeader()) {
          mergePropHeader(other.getPropHeader());
        }
        if (other.getExperimenter() != 0) {
          setExperimenter(other.getExperimenter());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header propHeader_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> propHeaderBuilder_;
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public boolean hasPropHeader() {
        return propHeaderBuilder_ != null || propHeader_ != null;
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getPropHeader() {
        if (propHeaderBuilder_ == null) {
          return propHeader_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
        } else {
          return propHeaderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder setPropHeader(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          propHeader_ = value;
          onChanged();
        } else {
          propHeaderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder setPropHeader(
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder builderForValue) {
        if (propHeaderBuilder_ == null) {
          propHeader_ = builderForValue.build();
          onChanged();
        } else {
          propHeaderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder mergePropHeader(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propHeaderBuilder_ == null) {
          if (propHeader_ != null) {
            propHeader_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.newBuilder(propHeader_).mergeFrom(value).buildPartial();
          } else {
            propHeader_ = value;
          }
          onChanged();
        } else {
          propHeaderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public Builder clearPropHeader() {
        if (propHeaderBuilder_ == null) {
          propHeader_ = null;
          onChanged();
        } else {
          propHeader_ = null;
          propHeaderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder getPropHeaderBuilder() {
        
        onChanged();
        return getPropHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropHeaderOrBuilder() {
        if (propHeaderBuilder_ != null) {
          return propHeaderBuilder_.getMessageOrBuilder();
        } else {
          return propHeader_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance() : propHeader_;
        }
      }
      /**
       * <pre>
       * prop: OFPQT_EXPERIMENTER 
       * </pre>
       *
       * <code>.openflow_13.ofp_queue_prop_header prop_header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> 
          getPropHeaderFieldBuilder() {
        if (propHeaderBuilder_ == null) {
          propHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder>(
                  getPropHeader(),
                  getParentForChildren(),
                  isClean());
          propHeader_ = null;
        }
        return propHeaderBuilder_;
      }

      private int experimenter_ ;
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public int getExperimenter() {
        return experimenter_;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public Builder setExperimenter(int value) {
        
        experimenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter ID which takes the same
       *form as in struct
       *ofp_experimenter_header. 
       * </pre>
       *
       * <code>uint32 experimenter = 2;</code>
       */
      public Builder clearExperimenter() {
        
        experimenter_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Experimenter defined data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Experimenter defined data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Experimenter defined data. 
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_prop_experimenter)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_prop_experimenter)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_prop_experimenter>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_prop_experimenter>() {
      @java.lang.Override
      public ofp_queue_prop_experimenter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_prop_experimenter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_prop_experimenter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_prop_experimenter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_experimenter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_packet_queueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_packet_queue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * id for the specific queue. 
     * </pre>
     *
     * <code>uint32 queue_id = 1;</code>
     */
    int getQueueId();

    /**
     * <pre>
     * Port this queue is attached to. 
     * </pre>
     *
     * <code>uint32 port = 2;</code>
     */
    int getPort();

    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header> 
        getPropertiesList();
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getProperties(int index);
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    int getPropertiesCount();
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> 
        getPropertiesOrBuilderList();
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropertiesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Full description for a queue. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_packet_queue}
   */
  public  static final class ofp_packet_queue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_packet_queue)
      ofp_packet_queueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_packet_queue.newBuilder() to construct.
    private ofp_packet_queue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_packet_queue() {
      properties_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_packet_queue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_packet_queue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              queueId_ = input.readUInt32();
              break;
            }
            case 16: {

              port_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                properties_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header>();
                mutable_bitField0_ |= 0x00000001;
              }
              properties_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          properties_ = java.util.Collections.unmodifiableList(properties_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_queue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_queue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.class, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder.class);
    }

    public static final int QUEUE_ID_FIELD_NUMBER = 1;
    private int queueId_;
    /**
     * <pre>
     * id for the specific queue. 
     * </pre>
     *
     * <code>uint32 queue_id = 1;</code>
     */
    public int getQueueId() {
      return queueId_;
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <pre>
     * Port this queue is attached to. 
     * </pre>
     *
     * <code>uint32 port = 2;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int PROPERTIES_FIELD_NUMBER = 4;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header> properties_;
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header> getPropertiesList() {
      return properties_;
    }
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> 
        getPropertiesOrBuilderList() {
      return properties_;
    }
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    public int getPropertiesCount() {
      return properties_.size();
    }
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getProperties(int index) {
      return properties_.get(index);
    }
    /**
     * <pre>
     * List of properties. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropertiesOrBuilder(
        int index) {
      return properties_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (queueId_ != 0) {
        output.writeUInt32(1, queueId_);
      }
      if (port_ != 0) {
        output.writeUInt32(2, port_);
      }
      for (int i = 0; i < properties_.size(); i++) {
        output.writeMessage(4, properties_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (queueId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, queueId_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      for (int i = 0; i < properties_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, properties_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue other = (org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue) obj;

      if (getQueueId()
          != other.getQueueId()) return false;
      if (getPort()
          != other.getPort()) return false;
      if (!getPropertiesList()
          .equals(other.getPropertiesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + QUEUE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQueueId();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      if (getPropertiesCount() > 0) {
        hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + getPropertiesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Full description for a queue. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_packet_queue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_packet_queue)
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_queue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_queue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.class, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropertiesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        queueId_ = 0;

        port_ = 0;

        if (propertiesBuilder_ == null) {
          properties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propertiesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_packet_queue_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue result = new org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue(this);
        int from_bitField0_ = bitField0_;
        result.queueId_ = queueId_;
        result.port_ = port_;
        if (propertiesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            properties_ = java.util.Collections.unmodifiableList(properties_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.properties_ = properties_;
        } else {
          result.properties_ = propertiesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.getDefaultInstance()) return this;
        if (other.getQueueId() != 0) {
          setQueueId(other.getQueueId());
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (propertiesBuilder_ == null) {
          if (!other.properties_.isEmpty()) {
            if (properties_.isEmpty()) {
              properties_ = other.properties_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropertiesIsMutable();
              properties_.addAll(other.properties_);
            }
            onChanged();
          }
        } else {
          if (!other.properties_.isEmpty()) {
            if (propertiesBuilder_.isEmpty()) {
              propertiesBuilder_.dispose();
              propertiesBuilder_ = null;
              properties_ = other.properties_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propertiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropertiesFieldBuilder() : null;
            } else {
              propertiesBuilder_.addAllMessages(other.properties_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int queueId_ ;
      /**
       * <pre>
       * id for the specific queue. 
       * </pre>
       *
       * <code>uint32 queue_id = 1;</code>
       */
      public int getQueueId() {
        return queueId_;
      }
      /**
       * <pre>
       * id for the specific queue. 
       * </pre>
       *
       * <code>uint32 queue_id = 1;</code>
       */
      public Builder setQueueId(int value) {
        
        queueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id for the specific queue. 
       * </pre>
       *
       * <code>uint32 queue_id = 1;</code>
       */
      public Builder clearQueueId() {
        
        queueId_ = 0;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * Port this queue is attached to. 
       * </pre>
       *
       * <code>uint32 port = 2;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * Port this queue is attached to. 
       * </pre>
       *
       * <code>uint32 port = 2;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Port this queue is attached to. 
       * </pre>
       *
       * <code>uint32 port = 2;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header> properties_ =
        java.util.Collections.emptyList();
      private void ensurePropertiesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          properties_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header>(properties_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> propertiesBuilder_;

      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header> getPropertiesList() {
        if (propertiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(properties_);
        } else {
          return propertiesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public int getPropertiesCount() {
        if (propertiesBuilder_ == null) {
          return properties_.size();
        } else {
          return propertiesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header getProperties(int index) {
        if (propertiesBuilder_ == null) {
          return properties_.get(index);
        } else {
          return propertiesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder setProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertiesIsMutable();
          properties_.set(index, value);
          onChanged();
        } else {
          propertiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder setProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.set(index, builderForValue.build());
          onChanged();
        } else {
          propertiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder addProperties(org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertiesIsMutable();
          properties_.add(value);
          onChanged();
        } else {
          propertiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder addProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertiesIsMutable();
          properties_.add(index, value);
          onChanged();
        } else {
          propertiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder addProperties(
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.add(builderForValue.build());
          onChanged();
        } else {
          propertiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder addProperties(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.add(index, builderForValue.build());
          onChanged();
        } else {
          propertiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder addAllProperties(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header> values) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, properties_);
          onChanged();
        } else {
          propertiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder clearProperties() {
        if (propertiesBuilder_ == null) {
          properties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propertiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public Builder removeProperties(int index) {
        if (propertiesBuilder_ == null) {
          ensurePropertiesIsMutable();
          properties_.remove(index);
          onChanged();
        } else {
          propertiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder getPropertiesBuilder(
          int index) {
        return getPropertiesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder getPropertiesOrBuilder(
          int index) {
        if (propertiesBuilder_ == null) {
          return properties_.get(index);  } else {
          return propertiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> 
           getPropertiesOrBuilderList() {
        if (propertiesBuilder_ != null) {
          return propertiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(properties_);
        }
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder addPropertiesBuilder() {
        return getPropertiesFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance());
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder addPropertiesBuilder(
          int index) {
        return getPropertiesFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.getDefaultInstance());
      }
      /**
       * <pre>
       * List of properties. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_queue_prop_header properties = 4;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder> 
           getPropertiesBuilderList() {
        return getPropertiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder> 
          getPropertiesFieldBuilder() {
        if (propertiesBuilder_ == null) {
          propertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_header.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_queue_prop_headerOrBuilder>(
                  properties_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          properties_ = null;
        }
        return propertiesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_packet_queue)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_packet_queue)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_packet_queue>
        PARSER = new com.google.protobuf.AbstractParser<ofp_packet_queue>() {
      @java.lang.Override
      public ofp_packet_queue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_packet_queue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_packet_queue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_packet_queue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_get_config_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_get_config_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 port = 1;</code>
     */
    int getPort();
  }
  /**
   * <pre>
   * Query for port queue configuration. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_queue_get_config_request}
   */
  public  static final class ofp_queue_get_config_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_get_config_request)
      ofp_queue_get_config_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_get_config_request.newBuilder() to construct.
    private ofp_queue_get_config_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_get_config_request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_get_config_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_get_config_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              port_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private int port_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 port = 1;</code>
     */
    public int getPort() {
      return port_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != 0) {
        output.writeUInt32(1, port_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, port_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request) obj;

      if (getPort()
          != other.getPort()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Query for port queue configuration. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_queue_get_config_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_get_config_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        port_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request(this);
        result.port_ = port_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request.getDefaultInstance()) return this;
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_get_config_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_get_config_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_get_config_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_get_config_request>() {
      @java.lang.Override
      public ofp_queue_get_config_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_get_config_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_get_config_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_get_config_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_get_config_replyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_get_config_reply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 port = 1;</code>
     */
    int getPort();

    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue> 
        getQueuesList();
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue getQueues(int index);
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    int getQueuesCount();
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder> 
        getQueuesOrBuilderList();
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder getQueuesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Queue configuration for a given port. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_queue_get_config_reply}
   */
  public  static final class ofp_queue_get_config_reply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_get_config_reply)
      ofp_queue_get_config_replyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_get_config_reply.newBuilder() to construct.
    private ofp_queue_get_config_reply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_get_config_reply() {
      queues_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_get_config_reply();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_get_config_reply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              port_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                queues_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue>();
                mutable_bitField0_ |= 0x00000001;
              }
              queues_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          queues_ = java.util.Collections.unmodifiableList(queues_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_reply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_reply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private int port_;
    /**
     * <pre>
     *ofp_header header;
     * </pre>
     *
     * <code>uint32 port = 1;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int QUEUES_FIELD_NUMBER = 2;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue> queues_;
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue> getQueuesList() {
      return queues_;
    }
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder> 
        getQueuesOrBuilderList() {
      return queues_;
    }
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    public int getQueuesCount() {
      return queues_.size();
    }
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue getQueues(int index) {
      return queues_.get(index);
    }
    /**
     * <pre>
     * List of configured queues. 
     * </pre>
     *
     * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder getQueuesOrBuilder(
        int index) {
      return queues_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != 0) {
        output.writeUInt32(1, port_);
      }
      for (int i = 0; i < queues_.size(); i++) {
        output.writeMessage(2, queues_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, port_);
      }
      for (int i = 0; i < queues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, queues_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply) obj;

      if (getPort()
          != other.getPort()) return false;
      if (!getQueuesList()
          .equals(other.getQueuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      if (getQueuesCount() > 0) {
        hash = (37 * hash) + QUEUES_FIELD_NUMBER;
        hash = (53 * hash) + getQueuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Queue configuration for a given port. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_queue_get_config_reply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_get_config_reply)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_replyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_reply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_reply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getQueuesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        port_ = 0;

        if (queuesBuilder_ == null) {
          queues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          queuesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_get_config_reply_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply(this);
        int from_bitField0_ = bitField0_;
        result.port_ = port_;
        if (queuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            queues_ = java.util.Collections.unmodifiableList(queues_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.queues_ = queues_;
        } else {
          result.queues_ = queuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply.getDefaultInstance()) return this;
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (queuesBuilder_ == null) {
          if (!other.queues_.isEmpty()) {
            if (queues_.isEmpty()) {
              queues_ = other.queues_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureQueuesIsMutable();
              queues_.addAll(other.queues_);
            }
            onChanged();
          }
        } else {
          if (!other.queues_.isEmpty()) {
            if (queuesBuilder_.isEmpty()) {
              queuesBuilder_.dispose();
              queuesBuilder_ = null;
              queues_ = other.queues_;
              bitField0_ = (bitField0_ & ~0x00000001);
              queuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getQueuesFieldBuilder() : null;
            } else {
              queuesBuilder_.addAllMessages(other.queues_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int port_ ;
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;
       * </pre>
       *
       * <code>uint32 port = 1;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue> queues_ =
        java.util.Collections.emptyList();
      private void ensureQueuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          queues_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue>(queues_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder> queuesBuilder_;

      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue> getQueuesList() {
        if (queuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(queues_);
        } else {
          return queuesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public int getQueuesCount() {
        if (queuesBuilder_ == null) {
          return queues_.size();
        } else {
          return queuesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue getQueues(int index) {
        if (queuesBuilder_ == null) {
          return queues_.get(index);
        } else {
          return queuesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder setQueues(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue value) {
        if (queuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueuesIsMutable();
          queues_.set(index, value);
          onChanged();
        } else {
          queuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder setQueues(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder builderForValue) {
        if (queuesBuilder_ == null) {
          ensureQueuesIsMutable();
          queues_.set(index, builderForValue.build());
          onChanged();
        } else {
          queuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder addQueues(org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue value) {
        if (queuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueuesIsMutable();
          queues_.add(value);
          onChanged();
        } else {
          queuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder addQueues(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue value) {
        if (queuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueuesIsMutable();
          queues_.add(index, value);
          onChanged();
        } else {
          queuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder addQueues(
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder builderForValue) {
        if (queuesBuilder_ == null) {
          ensureQueuesIsMutable();
          queues_.add(builderForValue.build());
          onChanged();
        } else {
          queuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder addQueues(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder builderForValue) {
        if (queuesBuilder_ == null) {
          ensureQueuesIsMutable();
          queues_.add(index, builderForValue.build());
          onChanged();
        } else {
          queuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder addAllQueues(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue> values) {
        if (queuesBuilder_ == null) {
          ensureQueuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, queues_);
          onChanged();
        } else {
          queuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder clearQueues() {
        if (queuesBuilder_ == null) {
          queues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          queuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public Builder removeQueues(int index) {
        if (queuesBuilder_ == null) {
          ensureQueuesIsMutable();
          queues_.remove(index);
          onChanged();
        } else {
          queuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder getQueuesBuilder(
          int index) {
        return getQueuesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder getQueuesOrBuilder(
          int index) {
        if (queuesBuilder_ == null) {
          return queues_.get(index);  } else {
          return queuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder> 
           getQueuesOrBuilderList() {
        if (queuesBuilder_ != null) {
          return queuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(queues_);
        }
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder addQueuesBuilder() {
        return getQueuesFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.getDefaultInstance());
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder addQueuesBuilder(
          int index) {
        return getQueuesFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.getDefaultInstance());
      }
      /**
       * <pre>
       * List of configured queues. 
       * </pre>
       *
       * <code>repeated .openflow_13.ofp_packet_queue queues = 2;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder> 
           getQueuesBuilderList() {
        return getQueuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder> 
          getQueuesFieldBuilder() {
        if (queuesBuilder_ == null) {
          queuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queue.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_queueOrBuilder>(
                  queues_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          queues_ = null;
        }
        return queuesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_get_config_reply)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_get_config_reply)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_get_config_reply>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_get_config_reply>() {
      @java.lang.Override
      public ofp_queue_get_config_reply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_get_config_reply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_get_config_reply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_get_config_reply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_get_config_reply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_action_set_queueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_action_set_queue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * OFPAT_SET_QUEUE. 
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     * Queue id for the packets. 
     * </pre>
     *
     * <code>uint32 queue_id = 3;</code>
     */
    int getQueueId();
  }
  /**
   * <pre>
   * OFPAT_SET_QUEUE action struct: send packets to given queue on port. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_action_set_queue}
   */
  public  static final class ofp_action_set_queue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_action_set_queue)
      ofp_action_set_queueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_action_set_queue.newBuilder() to construct.
    private ofp_action_set_queue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_action_set_queue() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_action_set_queue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_action_set_queue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              type_ = input.readUInt32();
              break;
            }
            case 24: {

              queueId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_queue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_queue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * OFPAT_SET_QUEUE. 
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int QUEUE_ID_FIELD_NUMBER = 3;
    private int queueId_;
    /**
     * <pre>
     * Queue id for the packets. 
     * </pre>
     *
     * <code>uint32 queue_id = 3;</code>
     */
    public int getQueueId() {
      return queueId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (queueId_ != 0) {
        output.writeUInt32(3, queueId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (queueId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, queueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue other = (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue) obj;

      if (getType()
          != other.getType()) return false;
      if (getQueueId()
          != other.getQueueId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + QUEUE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQueueId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OFPAT_SET_QUEUE action struct: send packets to given queue on port. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_action_set_queue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_action_set_queue)
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_queue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_queue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue.class, org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        queueId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_action_set_queue_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue result = new org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue(this);
        result.type_ = type_;
        result.queueId_ = queueId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getQueueId() != 0) {
          setQueueId(other.getQueueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * OFPAT_SET_QUEUE. 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * OFPAT_SET_QUEUE. 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OFPAT_SET_QUEUE. 
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int queueId_ ;
      /**
       * <pre>
       * Queue id for the packets. 
       * </pre>
       *
       * <code>uint32 queue_id = 3;</code>
       */
      public int getQueueId() {
        return queueId_;
      }
      /**
       * <pre>
       * Queue id for the packets. 
       * </pre>
       *
       * <code>uint32 queue_id = 3;</code>
       */
      public Builder setQueueId(int value) {
        
        queueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Queue id for the packets. 
       * </pre>
       *
       * <code>uint32 queue_id = 3;</code>
       */
      public Builder clearQueueId() {
        
        queueId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_action_set_queue)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_action_set_queue)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_action_set_queue>
        PARSER = new com.google.protobuf.AbstractParser<ofp_action_set_queue>() {
      @java.lang.Override
      public ofp_action_set_queue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_action_set_queue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_action_set_queue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_action_set_queue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_action_set_queue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_stats_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_stats_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * All ports if OFPP_ANY. 
     * </pre>
     *
     * <code>uint32 port_no = 1;</code>
     */
    int getPortNo();

    /**
     * <pre>
     * All queues if OFPQ_ALL. 
     * </pre>
     *
     * <code>uint32 queue_id = 2;</code>
     */
    int getQueueId();
  }
  /**
   * Protobuf type {@code openflow_13.ofp_queue_stats_request}
   */
  public  static final class ofp_queue_stats_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_stats_request)
      ofp_queue_stats_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_stats_request.newBuilder() to construct.
    private ofp_queue_stats_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_stats_request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_stats_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_stats_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              portNo_ = input.readUInt32();
              break;
            }
            case 16: {

              queueId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request.Builder.class);
    }

    public static final int PORT_NO_FIELD_NUMBER = 1;
    private int portNo_;
    /**
     * <pre>
     * All ports if OFPP_ANY. 
     * </pre>
     *
     * <code>uint32 port_no = 1;</code>
     */
    public int getPortNo() {
      return portNo_;
    }

    public static final int QUEUE_ID_FIELD_NUMBER = 2;
    private int queueId_;
    /**
     * <pre>
     * All queues if OFPQ_ALL. 
     * </pre>
     *
     * <code>uint32 queue_id = 2;</code>
     */
    public int getQueueId() {
      return queueId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portNo_ != 0) {
        output.writeUInt32(1, portNo_);
      }
      if (queueId_ != 0) {
        output.writeUInt32(2, queueId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, portNo_);
      }
      if (queueId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, queueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request) obj;

      if (getPortNo()
          != other.getPortNo()) return false;
      if (getQueueId()
          != other.getQueueId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_NO_FIELD_NUMBER;
      hash = (53 * hash) + getPortNo();
      hash = (37 * hash) + QUEUE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQueueId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.ofp_queue_stats_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_stats_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portNo_ = 0;

        queueId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request(this);
        result.portNo_ = portNo_;
        result.queueId_ = queueId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request.getDefaultInstance()) return this;
        if (other.getPortNo() != 0) {
          setPortNo(other.getPortNo());
        }
        if (other.getQueueId() != 0) {
          setQueueId(other.getQueueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int portNo_ ;
      /**
       * <pre>
       * All ports if OFPP_ANY. 
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public int getPortNo() {
        return portNo_;
      }
      /**
       * <pre>
       * All ports if OFPP_ANY. 
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public Builder setPortNo(int value) {
        
        portNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All ports if OFPP_ANY. 
       * </pre>
       *
       * <code>uint32 port_no = 1;</code>
       */
      public Builder clearPortNo() {
        
        portNo_ = 0;
        onChanged();
        return this;
      }

      private int queueId_ ;
      /**
       * <pre>
       * All queues if OFPQ_ALL. 
       * </pre>
       *
       * <code>uint32 queue_id = 2;</code>
       */
      public int getQueueId() {
        return queueId_;
      }
      /**
       * <pre>
       * All queues if OFPQ_ALL. 
       * </pre>
       *
       * <code>uint32 queue_id = 2;</code>
       */
      public Builder setQueueId(int value) {
        
        queueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All queues if OFPQ_ALL. 
       * </pre>
       *
       * <code>uint32 queue_id = 2;</code>
       */
      public Builder clearQueueId() {
        
        queueId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_stats_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_stats_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_stats_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_stats_request>() {
      @java.lang.Override
      public ofp_queue_stats_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_stats_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_stats_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_stats_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_queue_statsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_queue_stats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 port_no = 1;</code>
     */
    int getPortNo();

    /**
     * <pre>
     * Queue i.d 
     * </pre>
     *
     * <code>uint32 queue_id = 2;</code>
     */
    int getQueueId();

    /**
     * <pre>
     * Number of transmitted bytes. 
     * </pre>
     *
     * <code>uint64 tx_bytes = 3;</code>
     */
    long getTxBytes();

    /**
     * <pre>
     * Number of transmitted packets. 
     * </pre>
     *
     * <code>uint64 tx_packets = 4;</code>
     */
    long getTxPackets();

    /**
     * <pre>
     * Number of packets dropped due to overrun. 
     * </pre>
     *
     * <code>uint64 tx_errors = 5;</code>
     */
    long getTxErrors();

    /**
     * <pre>
     * Time queue has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 6;</code>
     */
    int getDurationSec();

    /**
     * <pre>
     * Time queue has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 7;</code>
     */
    int getDurationNsec();
  }
  /**
   * Protobuf type {@code openflow_13.ofp_queue_stats}
   */
  public  static final class ofp_queue_stats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_queue_stats)
      ofp_queue_statsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_queue_stats.newBuilder() to construct.
    private ofp_queue_stats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_queue_stats() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_queue_stats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_queue_stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              portNo_ = input.readUInt32();
              break;
            }
            case 16: {

              queueId_ = input.readUInt32();
              break;
            }
            case 24: {

              txBytes_ = input.readUInt64();
              break;
            }
            case 32: {

              txPackets_ = input.readUInt64();
              break;
            }
            case 40: {

              txErrors_ = input.readUInt64();
              break;
            }
            case 48: {

              durationSec_ = input.readUInt32();
              break;
            }
            case 56: {

              durationNsec_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats.Builder.class);
    }

    public static final int PORT_NO_FIELD_NUMBER = 1;
    private int portNo_;
    /**
     * <code>uint32 port_no = 1;</code>
     */
    public int getPortNo() {
      return portNo_;
    }

    public static final int QUEUE_ID_FIELD_NUMBER = 2;
    private int queueId_;
    /**
     * <pre>
     * Queue i.d 
     * </pre>
     *
     * <code>uint32 queue_id = 2;</code>
     */
    public int getQueueId() {
      return queueId_;
    }

    public static final int TX_BYTES_FIELD_NUMBER = 3;
    private long txBytes_;
    /**
     * <pre>
     * Number of transmitted bytes. 
     * </pre>
     *
     * <code>uint64 tx_bytes = 3;</code>
     */
    public long getTxBytes() {
      return txBytes_;
    }

    public static final int TX_PACKETS_FIELD_NUMBER = 4;
    private long txPackets_;
    /**
     * <pre>
     * Number of transmitted packets. 
     * </pre>
     *
     * <code>uint64 tx_packets = 4;</code>
     */
    public long getTxPackets() {
      return txPackets_;
    }

    public static final int TX_ERRORS_FIELD_NUMBER = 5;
    private long txErrors_;
    /**
     * <pre>
     * Number of packets dropped due to overrun. 
     * </pre>
     *
     * <code>uint64 tx_errors = 5;</code>
     */
    public long getTxErrors() {
      return txErrors_;
    }

    public static final int DURATION_SEC_FIELD_NUMBER = 6;
    private int durationSec_;
    /**
     * <pre>
     * Time queue has been alive in seconds. 
     * </pre>
     *
     * <code>uint32 duration_sec = 6;</code>
     */
    public int getDurationSec() {
      return durationSec_;
    }

    public static final int DURATION_NSEC_FIELD_NUMBER = 7;
    private int durationNsec_;
    /**
     * <pre>
     * Time queue has been alive in nanoseconds
     *beyond duration_sec. 
     * </pre>
     *
     * <code>uint32 duration_nsec = 7;</code>
     */
    public int getDurationNsec() {
      return durationNsec_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portNo_ != 0) {
        output.writeUInt32(1, portNo_);
      }
      if (queueId_ != 0) {
        output.writeUInt32(2, queueId_);
      }
      if (txBytes_ != 0L) {
        output.writeUInt64(3, txBytes_);
      }
      if (txPackets_ != 0L) {
        output.writeUInt64(4, txPackets_);
      }
      if (txErrors_ != 0L) {
        output.writeUInt64(5, txErrors_);
      }
      if (durationSec_ != 0) {
        output.writeUInt32(6, durationSec_);
      }
      if (durationNsec_ != 0) {
        output.writeUInt32(7, durationNsec_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, portNo_);
      }
      if (queueId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, queueId_);
      }
      if (txBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, txBytes_);
      }
      if (txPackets_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, txPackets_);
      }
      if (txErrors_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, txErrors_);
      }
      if (durationSec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, durationSec_);
      }
      if (durationNsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, durationNsec_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats other = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats) obj;

      if (getPortNo()
          != other.getPortNo()) return false;
      if (getQueueId()
          != other.getQueueId()) return false;
      if (getTxBytes()
          != other.getTxBytes()) return false;
      if (getTxPackets()
          != other.getTxPackets()) return false;
      if (getTxErrors()
          != other.getTxErrors()) return false;
      if (getDurationSec()
          != other.getDurationSec()) return false;
      if (getDurationNsec()
          != other.getDurationNsec()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_NO_FIELD_NUMBER;
      hash = (53 * hash) + getPortNo();
      hash = (37 * hash) + QUEUE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQueueId();
      hash = (37 * hash) + TX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxBytes());
      hash = (37 * hash) + TX_PACKETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxPackets());
      hash = (37 * hash) + TX_ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxErrors());
      hash = (37 * hash) + DURATION_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationSec();
      hash = (37 * hash) + DURATION_NSEC_FIELD_NUMBER;
      hash = (53 * hash) + getDurationNsec();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.ofp_queue_stats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_queue_stats)
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_statsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats.class, org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portNo_ = 0;

        queueId_ = 0;

        txBytes_ = 0L;

        txPackets_ = 0L;

        txErrors_ = 0L;

        durationSec_ = 0;

        durationNsec_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_queue_stats_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats result = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats(this);
        result.portNo_ = portNo_;
        result.queueId_ = queueId_;
        result.txBytes_ = txBytes_;
        result.txPackets_ = txPackets_;
        result.txErrors_ = txErrors_;
        result.durationSec_ = durationSec_;
        result.durationNsec_ = durationNsec_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats.getDefaultInstance()) return this;
        if (other.getPortNo() != 0) {
          setPortNo(other.getPortNo());
        }
        if (other.getQueueId() != 0) {
          setQueueId(other.getQueueId());
        }
        if (other.getTxBytes() != 0L) {
          setTxBytes(other.getTxBytes());
        }
        if (other.getTxPackets() != 0L) {
          setTxPackets(other.getTxPackets());
        }
        if (other.getTxErrors() != 0L) {
          setTxErrors(other.getTxErrors());
        }
        if (other.getDurationSec() != 0) {
          setDurationSec(other.getDurationSec());
        }
        if (other.getDurationNsec() != 0) {
          setDurationNsec(other.getDurationNsec());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int portNo_ ;
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public int getPortNo() {
        return portNo_;
      }
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public Builder setPortNo(int value) {
        
        portNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 port_no = 1;</code>
       */
      public Builder clearPortNo() {
        
        portNo_ = 0;
        onChanged();
        return this;
      }

      private int queueId_ ;
      /**
       * <pre>
       * Queue i.d 
       * </pre>
       *
       * <code>uint32 queue_id = 2;</code>
       */
      public int getQueueId() {
        return queueId_;
      }
      /**
       * <pre>
       * Queue i.d 
       * </pre>
       *
       * <code>uint32 queue_id = 2;</code>
       */
      public Builder setQueueId(int value) {
        
        queueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Queue i.d 
       * </pre>
       *
       * <code>uint32 queue_id = 2;</code>
       */
      public Builder clearQueueId() {
        
        queueId_ = 0;
        onChanged();
        return this;
      }

      private long txBytes_ ;
      /**
       * <pre>
       * Number of transmitted bytes. 
       * </pre>
       *
       * <code>uint64 tx_bytes = 3;</code>
       */
      public long getTxBytes() {
        return txBytes_;
      }
      /**
       * <pre>
       * Number of transmitted bytes. 
       * </pre>
       *
       * <code>uint64 tx_bytes = 3;</code>
       */
      public Builder setTxBytes(long value) {
        
        txBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of transmitted bytes. 
       * </pre>
       *
       * <code>uint64 tx_bytes = 3;</code>
       */
      public Builder clearTxBytes() {
        
        txBytes_ = 0L;
        onChanged();
        return this;
      }

      private long txPackets_ ;
      /**
       * <pre>
       * Number of transmitted packets. 
       * </pre>
       *
       * <code>uint64 tx_packets = 4;</code>
       */
      public long getTxPackets() {
        return txPackets_;
      }
      /**
       * <pre>
       * Number of transmitted packets. 
       * </pre>
       *
       * <code>uint64 tx_packets = 4;</code>
       */
      public Builder setTxPackets(long value) {
        
        txPackets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of transmitted packets. 
       * </pre>
       *
       * <code>uint64 tx_packets = 4;</code>
       */
      public Builder clearTxPackets() {
        
        txPackets_ = 0L;
        onChanged();
        return this;
      }

      private long txErrors_ ;
      /**
       * <pre>
       * Number of packets dropped due to overrun. 
       * </pre>
       *
       * <code>uint64 tx_errors = 5;</code>
       */
      public long getTxErrors() {
        return txErrors_;
      }
      /**
       * <pre>
       * Number of packets dropped due to overrun. 
       * </pre>
       *
       * <code>uint64 tx_errors = 5;</code>
       */
      public Builder setTxErrors(long value) {
        
        txErrors_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of packets dropped due to overrun. 
       * </pre>
       *
       * <code>uint64 tx_errors = 5;</code>
       */
      public Builder clearTxErrors() {
        
        txErrors_ = 0L;
        onChanged();
        return this;
      }

      private int durationSec_ ;
      /**
       * <pre>
       * Time queue has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 6;</code>
       */
      public int getDurationSec() {
        return durationSec_;
      }
      /**
       * <pre>
       * Time queue has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 6;</code>
       */
      public Builder setDurationSec(int value) {
        
        durationSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time queue has been alive in seconds. 
       * </pre>
       *
       * <code>uint32 duration_sec = 6;</code>
       */
      public Builder clearDurationSec() {
        
        durationSec_ = 0;
        onChanged();
        return this;
      }

      private int durationNsec_ ;
      /**
       * <pre>
       * Time queue has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 7;</code>
       */
      public int getDurationNsec() {
        return durationNsec_;
      }
      /**
       * <pre>
       * Time queue has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 7;</code>
       */
      public Builder setDurationNsec(int value) {
        
        durationNsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time queue has been alive in nanoseconds
       *beyond duration_sec. 
       * </pre>
       *
       * <code>uint32 duration_nsec = 7;</code>
       */
      public Builder clearDurationNsec() {
        
        durationNsec_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_queue_stats)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_queue_stats)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_queue_stats>
        PARSER = new com.google.protobuf.AbstractParser<ofp_queue_stats>() {
      @java.lang.Override
      public ofp_queue_stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_queue_stats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_queue_stats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_queue_stats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_queue_stats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_role_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_role_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
     * </pre>
     *
     * <code>.openflow_13.ofp_controller_role role = 1;</code>
     */
    int getRoleValue();
    /**
     * <pre>
     *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
     * </pre>
     *
     * <code>.openflow_13.ofp_controller_role role = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_controller_role getRole();

    /**
     * <pre>
     * Master Election Generation Id 
     * </pre>
     *
     * <code>uint64 generation_id = 2;</code>
     */
    long getGenerationId();
  }
  /**
   * <pre>
   * Role request and reply message. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_role_request}
   */
  public  static final class ofp_role_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_role_request)
      ofp_role_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_role_request.newBuilder() to construct.
    private ofp_role_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_role_request() {
      role_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_role_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_role_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              role_ = rawValue;
              break;
            }
            case 16: {

              generationId_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_role_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_role_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_role_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_role_request.Builder.class);
    }

    public static final int ROLE_FIELD_NUMBER = 1;
    private int role_;
    /**
     * <pre>
     *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
     * </pre>
     *
     * <code>.openflow_13.ofp_controller_role role = 1;</code>
     */
    public int getRoleValue() {
      return role_;
    }
    /**
     * <pre>
     *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
     * </pre>
     *
     * <code>.openflow_13.ofp_controller_role role = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_controller_role getRole() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.openflow13.Openflow13.ofp_controller_role result = org.opencord.voltha.openflow13.Openflow13.ofp_controller_role.valueOf(role_);
      return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_controller_role.UNRECOGNIZED : result;
    }

    public static final int GENERATION_ID_FIELD_NUMBER = 2;
    private long generationId_;
    /**
     * <pre>
     * Master Election Generation Id 
     * </pre>
     *
     * <code>uint64 generation_id = 2;</code>
     */
    public long getGenerationId() {
      return generationId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (role_ != org.opencord.voltha.openflow13.Openflow13.ofp_controller_role.OFPCR_ROLE_NOCHANGE.getNumber()) {
        output.writeEnum(1, role_);
      }
      if (generationId_ != 0L) {
        output.writeUInt64(2, generationId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (role_ != org.opencord.voltha.openflow13.Openflow13.ofp_controller_role.OFPCR_ROLE_NOCHANGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, role_);
      }
      if (generationId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, generationId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_role_request)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_role_request other = (org.opencord.voltha.openflow13.Openflow13.ofp_role_request) obj;

      if (role_ != other.role_) return false;
      if (getGenerationId()
          != other.getGenerationId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROLE_FIELD_NUMBER;
      hash = (53 * hash) + role_;
      hash = (37 * hash) + GENERATION_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGenerationId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_role_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Role request and reply message. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_role_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_role_request)
        org.opencord.voltha.openflow13.Openflow13.ofp_role_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_role_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_role_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_role_request.class, org.opencord.voltha.openflow13.Openflow13.ofp_role_request.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_role_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        role_ = 0;

        generationId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_role_request_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_role_request getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_role_request.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_role_request build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_role_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_role_request buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_role_request result = new org.opencord.voltha.openflow13.Openflow13.ofp_role_request(this);
        result.role_ = role_;
        result.generationId_ = generationId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_role_request) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_role_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_role_request other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_role_request.getDefaultInstance()) return this;
        if (other.role_ != 0) {
          setRoleValue(other.getRoleValue());
        }
        if (other.getGenerationId() != 0L) {
          setGenerationId(other.getGenerationId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_role_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_role_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int role_ = 0;
      /**
       * <pre>
       *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
       * </pre>
       *
       * <code>.openflow_13.ofp_controller_role role = 1;</code>
       */
      public int getRoleValue() {
        return role_;
      }
      /**
       * <pre>
       *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
       * </pre>
       *
       * <code>.openflow_13.ofp_controller_role role = 1;</code>
       */
      public Builder setRoleValue(int value) {
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
       * </pre>
       *
       * <code>.openflow_13.ofp_controller_role role = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_controller_role getRole() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.openflow13.Openflow13.ofp_controller_role result = org.opencord.voltha.openflow13.Openflow13.ofp_controller_role.valueOf(role_);
        return result == null ? org.opencord.voltha.openflow13.Openflow13.ofp_controller_role.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
       * </pre>
       *
       * <code>.openflow_13.ofp_controller_role role = 1;</code>
       */
      public Builder setRole(org.opencord.voltha.openflow13.Openflow13.ofp_controller_role value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        role_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;        /&#42; Type OFPT_ROLE_REQUEST/OFPT_ROLE_REPLY. *&#47;
       * </pre>
       *
       * <code>.openflow_13.ofp_controller_role role = 1;</code>
       */
      public Builder clearRole() {
        
        role_ = 0;
        onChanged();
        return this;
      }

      private long generationId_ ;
      /**
       * <pre>
       * Master Election Generation Id 
       * </pre>
       *
       * <code>uint64 generation_id = 2;</code>
       */
      public long getGenerationId() {
        return generationId_;
      }
      /**
       * <pre>
       * Master Election Generation Id 
       * </pre>
       *
       * <code>uint64 generation_id = 2;</code>
       */
      public Builder setGenerationId(long value) {
        
        generationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Master Election Generation Id 
       * </pre>
       *
       * <code>uint64 generation_id = 2;</code>
       */
      public Builder clearGenerationId() {
        
        generationId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_role_request)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_role_request)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_role_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_role_request();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_role_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_role_request>
        PARSER = new com.google.protobuf.AbstractParser<ofp_role_request>() {
      @java.lang.Override
      public ofp_role_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_role_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_role_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_role_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_role_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ofp_async_configOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ofp_async_config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
     * </pre>
     *
     * <code>repeated uint32 packet_in_mask = 1;</code>
     */
    java.util.List<java.lang.Integer> getPacketInMaskList();
    /**
     * <pre>
     *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
     * </pre>
     *
     * <code>repeated uint32 packet_in_mask = 1;</code>
     */
    int getPacketInMaskCount();
    /**
     * <pre>
     *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
     * </pre>
     *
     * <code>repeated uint32 packet_in_mask = 1;</code>
     */
    int getPacketInMask(int index);

    /**
     * <pre>
     * Bitmasks of OFPPR_* values. 
     * </pre>
     *
     * <code>repeated uint32 port_status_mask = 2;</code>
     */
    java.util.List<java.lang.Integer> getPortStatusMaskList();
    /**
     * <pre>
     * Bitmasks of OFPPR_* values. 
     * </pre>
     *
     * <code>repeated uint32 port_status_mask = 2;</code>
     */
    int getPortStatusMaskCount();
    /**
     * <pre>
     * Bitmasks of OFPPR_* values. 
     * </pre>
     *
     * <code>repeated uint32 port_status_mask = 2;</code>
     */
    int getPortStatusMask(int index);

    /**
     * <pre>
     * Bitmasks of OFPRR_* values. 
     * </pre>
     *
     * <code>repeated uint32 flow_removed_mask = 3;</code>
     */
    java.util.List<java.lang.Integer> getFlowRemovedMaskList();
    /**
     * <pre>
     * Bitmasks of OFPRR_* values. 
     * </pre>
     *
     * <code>repeated uint32 flow_removed_mask = 3;</code>
     */
    int getFlowRemovedMaskCount();
    /**
     * <pre>
     * Bitmasks of OFPRR_* values. 
     * </pre>
     *
     * <code>repeated uint32 flow_removed_mask = 3;</code>
     */
    int getFlowRemovedMask(int index);
  }
  /**
   * <pre>
   * Asynchronous message configuration. 
   * </pre>
   *
   * Protobuf type {@code openflow_13.ofp_async_config}
   */
  public  static final class ofp_async_config extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ofp_async_config)
      ofp_async_configOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ofp_async_config.newBuilder() to construct.
    private ofp_async_config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ofp_async_config() {
      packetInMask_ = emptyIntList();
      portStatusMask_ = emptyIntList();
      flowRemovedMask_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ofp_async_config();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ofp_async_config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                packetInMask_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              packetInMask_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                packetInMask_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                packetInMask_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                portStatusMask_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              portStatusMask_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                portStatusMask_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                portStatusMask_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                flowRemovedMask_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              flowRemovedMask_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                flowRemovedMask_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                flowRemovedMask_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          packetInMask_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          portStatusMask_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          flowRemovedMask_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_async_config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_async_config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ofp_async_config.class, org.opencord.voltha.openflow13.Openflow13.ofp_async_config.Builder.class);
    }

    public static final int PACKET_IN_MASK_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList packetInMask_;
    /**
     * <pre>
     *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
     * </pre>
     *
     * <code>repeated uint32 packet_in_mask = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getPacketInMaskList() {
      return packetInMask_;
    }
    /**
     * <pre>
     *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
     * </pre>
     *
     * <code>repeated uint32 packet_in_mask = 1;</code>
     */
    public int getPacketInMaskCount() {
      return packetInMask_.size();
    }
    /**
     * <pre>
     *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
     * </pre>
     *
     * <code>repeated uint32 packet_in_mask = 1;</code>
     */
    public int getPacketInMask(int index) {
      return packetInMask_.getInt(index);
    }
    private int packetInMaskMemoizedSerializedSize = -1;

    public static final int PORT_STATUS_MASK_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList portStatusMask_;
    /**
     * <pre>
     * Bitmasks of OFPPR_* values. 
     * </pre>
     *
     * <code>repeated uint32 port_status_mask = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getPortStatusMaskList() {
      return portStatusMask_;
    }
    /**
     * <pre>
     * Bitmasks of OFPPR_* values. 
     * </pre>
     *
     * <code>repeated uint32 port_status_mask = 2;</code>
     */
    public int getPortStatusMaskCount() {
      return portStatusMask_.size();
    }
    /**
     * <pre>
     * Bitmasks of OFPPR_* values. 
     * </pre>
     *
     * <code>repeated uint32 port_status_mask = 2;</code>
     */
    public int getPortStatusMask(int index) {
      return portStatusMask_.getInt(index);
    }
    private int portStatusMaskMemoizedSerializedSize = -1;

    public static final int FLOW_REMOVED_MASK_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList flowRemovedMask_;
    /**
     * <pre>
     * Bitmasks of OFPRR_* values. 
     * </pre>
     *
     * <code>repeated uint32 flow_removed_mask = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getFlowRemovedMaskList() {
      return flowRemovedMask_;
    }
    /**
     * <pre>
     * Bitmasks of OFPRR_* values. 
     * </pre>
     *
     * <code>repeated uint32 flow_removed_mask = 3;</code>
     */
    public int getFlowRemovedMaskCount() {
      return flowRemovedMask_.size();
    }
    /**
     * <pre>
     * Bitmasks of OFPRR_* values. 
     * </pre>
     *
     * <code>repeated uint32 flow_removed_mask = 3;</code>
     */
    public int getFlowRemovedMask(int index) {
      return flowRemovedMask_.getInt(index);
    }
    private int flowRemovedMaskMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getPacketInMaskList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(packetInMaskMemoizedSerializedSize);
      }
      for (int i = 0; i < packetInMask_.size(); i++) {
        output.writeUInt32NoTag(packetInMask_.getInt(i));
      }
      if (getPortStatusMaskList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(portStatusMaskMemoizedSerializedSize);
      }
      for (int i = 0; i < portStatusMask_.size(); i++) {
        output.writeUInt32NoTag(portStatusMask_.getInt(i));
      }
      if (getFlowRemovedMaskList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(flowRemovedMaskMemoizedSerializedSize);
      }
      for (int i = 0; i < flowRemovedMask_.size(); i++) {
        output.writeUInt32NoTag(flowRemovedMask_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < packetInMask_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(packetInMask_.getInt(i));
        }
        size += dataSize;
        if (!getPacketInMaskList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packetInMaskMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < portStatusMask_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(portStatusMask_.getInt(i));
        }
        size += dataSize;
        if (!getPortStatusMaskList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        portStatusMaskMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flowRemovedMask_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(flowRemovedMask_.getInt(i));
        }
        size += dataSize;
        if (!getFlowRemovedMaskList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        flowRemovedMaskMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ofp_async_config)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ofp_async_config other = (org.opencord.voltha.openflow13.Openflow13.ofp_async_config) obj;

      if (!getPacketInMaskList()
          .equals(other.getPacketInMaskList())) return false;
      if (!getPortStatusMaskList()
          .equals(other.getPortStatusMaskList())) return false;
      if (!getFlowRemovedMaskList()
          .equals(other.getFlowRemovedMaskList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPacketInMaskCount() > 0) {
        hash = (37 * hash) + PACKET_IN_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getPacketInMaskList().hashCode();
      }
      if (getPortStatusMaskCount() > 0) {
        hash = (37 * hash) + PORT_STATUS_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getPortStatusMaskList().hashCode();
      }
      if (getFlowRemovedMaskCount() > 0) {
        hash = (37 * hash) + FLOW_REMOVED_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getFlowRemovedMaskList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ofp_async_config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Asynchronous message configuration. 
     * </pre>
     *
     * Protobuf type {@code openflow_13.ofp_async_config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ofp_async_config)
        org.opencord.voltha.openflow13.Openflow13.ofp_async_configOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_async_config_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_async_config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ofp_async_config.class, org.opencord.voltha.openflow13.Openflow13.ofp_async_config.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ofp_async_config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        packetInMask_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        portStatusMask_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        flowRemovedMask_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ofp_async_config_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_async_config getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ofp_async_config.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_async_config build() {
        org.opencord.voltha.openflow13.Openflow13.ofp_async_config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ofp_async_config buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ofp_async_config result = new org.opencord.voltha.openflow13.Openflow13.ofp_async_config(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          packetInMask_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.packetInMask_ = packetInMask_;
        if (((bitField0_ & 0x00000002) != 0)) {
          portStatusMask_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.portStatusMask_ = portStatusMask_;
        if (((bitField0_ & 0x00000004) != 0)) {
          flowRemovedMask_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.flowRemovedMask_ = flowRemovedMask_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ofp_async_config) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_async_config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ofp_async_config other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ofp_async_config.getDefaultInstance()) return this;
        if (!other.packetInMask_.isEmpty()) {
          if (packetInMask_.isEmpty()) {
            packetInMask_ = other.packetInMask_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePacketInMaskIsMutable();
            packetInMask_.addAll(other.packetInMask_);
          }
          onChanged();
        }
        if (!other.portStatusMask_.isEmpty()) {
          if (portStatusMask_.isEmpty()) {
            portStatusMask_ = other.portStatusMask_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePortStatusMaskIsMutable();
            portStatusMask_.addAll(other.portStatusMask_);
          }
          onChanged();
        }
        if (!other.flowRemovedMask_.isEmpty()) {
          if (flowRemovedMask_.isEmpty()) {
            flowRemovedMask_ = other.flowRemovedMask_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFlowRemovedMaskIsMutable();
            flowRemovedMask_.addAll(other.flowRemovedMask_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ofp_async_config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ofp_async_config) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList packetInMask_ = emptyIntList();
      private void ensurePacketInMaskIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          packetInMask_ = mutableCopy(packetInMask_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
       * </pre>
       *
       * <code>repeated uint32 packet_in_mask = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getPacketInMaskList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(packetInMask_) : packetInMask_;
      }
      /**
       * <pre>
       *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
       * </pre>
       *
       * <code>repeated uint32 packet_in_mask = 1;</code>
       */
      public int getPacketInMaskCount() {
        return packetInMask_.size();
      }
      /**
       * <pre>
       *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
       * </pre>
       *
       * <code>repeated uint32 packet_in_mask = 1;</code>
       */
      public int getPacketInMask(int index) {
        return packetInMask_.getInt(index);
      }
      /**
       * <pre>
       *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
       * </pre>
       *
       * <code>repeated uint32 packet_in_mask = 1;</code>
       */
      public Builder setPacketInMask(
          int index, int value) {
        ensurePacketInMaskIsMutable();
        packetInMask_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
       * </pre>
       *
       * <code>repeated uint32 packet_in_mask = 1;</code>
       */
      public Builder addPacketInMask(int value) {
        ensurePacketInMaskIsMutable();
        packetInMask_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
       * </pre>
       *
       * <code>repeated uint32 packet_in_mask = 1;</code>
       */
      public Builder addAllPacketInMask(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePacketInMaskIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, packetInMask_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ofp_header header;    /&#42; OFPT_GET_ASYNC_REPLY or OFPT_SET_ASYNC. *&#47;
       * </pre>
       *
       * <code>repeated uint32 packet_in_mask = 1;</code>
       */
      public Builder clearPacketInMask() {
        packetInMask_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList portStatusMask_ = emptyIntList();
      private void ensurePortStatusMaskIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          portStatusMask_ = mutableCopy(portStatusMask_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Bitmasks of OFPPR_* values. 
       * </pre>
       *
       * <code>repeated uint32 port_status_mask = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getPortStatusMaskList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(portStatusMask_) : portStatusMask_;
      }
      /**
       * <pre>
       * Bitmasks of OFPPR_* values. 
       * </pre>
       *
       * <code>repeated uint32 port_status_mask = 2;</code>
       */
      public int getPortStatusMaskCount() {
        return portStatusMask_.size();
      }
      /**
       * <pre>
       * Bitmasks of OFPPR_* values. 
       * </pre>
       *
       * <code>repeated uint32 port_status_mask = 2;</code>
       */
      public int getPortStatusMask(int index) {
        return portStatusMask_.getInt(index);
      }
      /**
       * <pre>
       * Bitmasks of OFPPR_* values. 
       * </pre>
       *
       * <code>repeated uint32 port_status_mask = 2;</code>
       */
      public Builder setPortStatusMask(
          int index, int value) {
        ensurePortStatusMaskIsMutable();
        portStatusMask_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmasks of OFPPR_* values. 
       * </pre>
       *
       * <code>repeated uint32 port_status_mask = 2;</code>
       */
      public Builder addPortStatusMask(int value) {
        ensurePortStatusMaskIsMutable();
        portStatusMask_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmasks of OFPPR_* values. 
       * </pre>
       *
       * <code>repeated uint32 port_status_mask = 2;</code>
       */
      public Builder addAllPortStatusMask(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePortStatusMaskIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, portStatusMask_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmasks of OFPPR_* values. 
       * </pre>
       *
       * <code>repeated uint32 port_status_mask = 2;</code>
       */
      public Builder clearPortStatusMask() {
        portStatusMask_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList flowRemovedMask_ = emptyIntList();
      private void ensureFlowRemovedMaskIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          flowRemovedMask_ = mutableCopy(flowRemovedMask_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Bitmasks of OFPRR_* values. 
       * </pre>
       *
       * <code>repeated uint32 flow_removed_mask = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getFlowRemovedMaskList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(flowRemovedMask_) : flowRemovedMask_;
      }
      /**
       * <pre>
       * Bitmasks of OFPRR_* values. 
       * </pre>
       *
       * <code>repeated uint32 flow_removed_mask = 3;</code>
       */
      public int getFlowRemovedMaskCount() {
        return flowRemovedMask_.size();
      }
      /**
       * <pre>
       * Bitmasks of OFPRR_* values. 
       * </pre>
       *
       * <code>repeated uint32 flow_removed_mask = 3;</code>
       */
      public int getFlowRemovedMask(int index) {
        return flowRemovedMask_.getInt(index);
      }
      /**
       * <pre>
       * Bitmasks of OFPRR_* values. 
       * </pre>
       *
       * <code>repeated uint32 flow_removed_mask = 3;</code>
       */
      public Builder setFlowRemovedMask(
          int index, int value) {
        ensureFlowRemovedMaskIsMutable();
        flowRemovedMask_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmasks of OFPRR_* values. 
       * </pre>
       *
       * <code>repeated uint32 flow_removed_mask = 3;</code>
       */
      public Builder addFlowRemovedMask(int value) {
        ensureFlowRemovedMaskIsMutable();
        flowRemovedMask_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmasks of OFPRR_* values. 
       * </pre>
       *
       * <code>repeated uint32 flow_removed_mask = 3;</code>
       */
      public Builder addAllFlowRemovedMask(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlowRemovedMaskIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, flowRemovedMask_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bitmasks of OFPRR_* values. 
       * </pre>
       *
       * <code>repeated uint32 flow_removed_mask = 3;</code>
       */
      public Builder clearFlowRemovedMask() {
        flowRemovedMask_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ofp_async_config)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ofp_async_config)
    private static final org.opencord.voltha.openflow13.Openflow13.ofp_async_config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ofp_async_config();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ofp_async_config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ofp_async_config>
        PARSER = new com.google.protobuf.AbstractParser<ofp_async_config>() {
      @java.lang.Override
      public ofp_async_config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ofp_async_config(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ofp_async_config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ofp_async_config> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ofp_async_config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeterModUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.MeterModUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
     */
    boolean hasMeterMod();
    /**
     * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod getMeterMod();
    /**
     * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_modOrBuilder getMeterModOrBuilder();

    /**
     * <pre>
     *Transaction id associated with this request.
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    int getXid();
  }
  /**
   * Protobuf type {@code openflow_13.MeterModUpdate}
   */
  public  static final class MeterModUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.MeterModUpdate)
      MeterModUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeterModUpdate.newBuilder() to construct.
    private MeterModUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeterModUpdate() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeterModUpdate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MeterModUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder subBuilder = null;
              if (meterMod_ != null) {
                subBuilder = meterMod_.toBuilder();
              }
              meterMod_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(meterMod_);
                meterMod_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              xid_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterModUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterModUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.MeterModUpdate.class, org.opencord.voltha.openflow13.Openflow13.MeterModUpdate.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METER_MOD_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod meterMod_;
    /**
     * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
     */
    public boolean hasMeterMod() {
      return meterMod_ != null;
    }
    /**
     * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod getMeterMod() {
      return meterMod_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.getDefaultInstance() : meterMod_;
    }
    /**
     * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_modOrBuilder getMeterModOrBuilder() {
      return getMeterMod();
    }

    public static final int XID_FIELD_NUMBER = 3;
    private int xid_;
    /**
     * <pre>
     *Transaction id associated with this request.
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    public int getXid() {
      return xid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (meterMod_ != null) {
        output.writeMessage(2, getMeterMod());
      }
      if (xid_ != 0) {
        output.writeUInt32(3, xid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (meterMod_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMeterMod());
      }
      if (xid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, xid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.MeterModUpdate)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.MeterModUpdate other = (org.opencord.voltha.openflow13.Openflow13.MeterModUpdate) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasMeterMod() != other.hasMeterMod()) return false;
      if (hasMeterMod()) {
        if (!getMeterMod()
            .equals(other.getMeterMod())) return false;
      }
      if (getXid()
          != other.getXid()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasMeterMod()) {
        hash = (37 * hash) + METER_MOD_FIELD_NUMBER;
        hash = (53 * hash) + getMeterMod().hashCode();
      }
      hash = (37 * hash) + XID_FIELD_NUMBER;
      hash = (53 * hash) + getXid();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.MeterModUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.MeterModUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.MeterModUpdate)
        org.opencord.voltha.openflow13.Openflow13.MeterModUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterModUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterModUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.MeterModUpdate.class, org.opencord.voltha.openflow13.Openflow13.MeterModUpdate.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.MeterModUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (meterModBuilder_ == null) {
          meterMod_ = null;
        } else {
          meterMod_ = null;
          meterModBuilder_ = null;
        }
        xid_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterModUpdate_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.MeterModUpdate getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.MeterModUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.MeterModUpdate build() {
        org.opencord.voltha.openflow13.Openflow13.MeterModUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.MeterModUpdate buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.MeterModUpdate result = new org.opencord.voltha.openflow13.Openflow13.MeterModUpdate(this);
        result.id_ = id_;
        if (meterModBuilder_ == null) {
          result.meterMod_ = meterMod_;
        } else {
          result.meterMod_ = meterModBuilder_.build();
        }
        result.xid_ = xid_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.MeterModUpdate) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.MeterModUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.MeterModUpdate other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.MeterModUpdate.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasMeterMod()) {
          mergeMeterMod(other.getMeterMod());
        }
        if (other.getXid() != 0) {
          setXid(other.getXid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.MeterModUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.MeterModUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod meterMod_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod, org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_modOrBuilder> meterModBuilder_;
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public boolean hasMeterMod() {
        return meterModBuilder_ != null || meterMod_ != null;
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod getMeterMod() {
        if (meterModBuilder_ == null) {
          return meterMod_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.getDefaultInstance() : meterMod_;
        } else {
          return meterModBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public Builder setMeterMod(org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod value) {
        if (meterModBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meterMod_ = value;
          onChanged();
        } else {
          meterModBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public Builder setMeterMod(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder builderForValue) {
        if (meterModBuilder_ == null) {
          meterMod_ = builderForValue.build();
          onChanged();
        } else {
          meterModBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public Builder mergeMeterMod(org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod value) {
        if (meterModBuilder_ == null) {
          if (meterMod_ != null) {
            meterMod_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.newBuilder(meterMod_).mergeFrom(value).buildPartial();
          } else {
            meterMod_ = value;
          }
          onChanged();
        } else {
          meterModBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public Builder clearMeterMod() {
        if (meterModBuilder_ == null) {
          meterMod_ = null;
          onChanged();
        } else {
          meterMod_ = null;
          meterModBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder getMeterModBuilder() {
        
        onChanged();
        return getMeterModFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_modOrBuilder getMeterModOrBuilder() {
        if (meterModBuilder_ != null) {
          return meterModBuilder_.getMessageOrBuilder();
        } else {
          return meterMod_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.getDefaultInstance() : meterMod_;
        }
      }
      /**
       * <code>.openflow_13.ofp_meter_mod meter_mod = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod, org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_modOrBuilder> 
          getMeterModFieldBuilder() {
        if (meterModBuilder_ == null) {
          meterModBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod, org.opencord.voltha.openflow13.Openflow13.ofp_meter_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_modOrBuilder>(
                  getMeterMod(),
                  getParentForChildren(),
                  isClean());
          meterMod_ = null;
        }
        return meterModBuilder_;
      }

      private int xid_ ;
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public int getXid() {
        return xid_;
      }
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder setXid(int value) {
        
        xid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder clearXid() {
        
        xid_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.MeterModUpdate)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.MeterModUpdate)
    private static final org.opencord.voltha.openflow13.Openflow13.MeterModUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.MeterModUpdate();
    }

    public static org.opencord.voltha.openflow13.Openflow13.MeterModUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeterModUpdate>
        PARSER = new com.google.protobuf.AbstractParser<MeterModUpdate>() {
      @java.lang.Override
      public MeterModUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MeterModUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MeterModUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeterModUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.MeterModUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeterStatsReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.MeterStatsReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats> 
        getMeterStatsList();
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getMeterStats(int index);
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    int getMeterStatsCount();
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder> 
        getMeterStatsOrBuilderList();
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder getMeterStatsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code openflow_13.MeterStatsReply}
   */
  public  static final class MeterStatsReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.MeterStatsReply)
      MeterStatsReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeterStatsReply.newBuilder() to construct.
    private MeterStatsReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeterStatsReply() {
      meterStats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeterStatsReply();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MeterStatsReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                meterStats_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats>();
                mutable_bitField0_ |= 0x00000001;
              }
              meterStats_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          meterStats_ = java.util.Collections.unmodifiableList(meterStats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterStatsReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterStatsReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.MeterStatsReply.class, org.opencord.voltha.openflow13.Openflow13.MeterStatsReply.Builder.class);
    }

    public static final int METER_STATS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats> meterStats_;
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats> getMeterStatsList() {
      return meterStats_;
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder> 
        getMeterStatsOrBuilderList() {
      return meterStats_;
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    public int getMeterStatsCount() {
      return meterStats_.size();
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getMeterStats(int index) {
      return meterStats_.get(index);
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder getMeterStatsOrBuilder(
        int index) {
      return meterStats_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < meterStats_.size(); i++) {
        output.writeMessage(1, meterStats_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < meterStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, meterStats_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.MeterStatsReply)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.MeterStatsReply other = (org.opencord.voltha.openflow13.Openflow13.MeterStatsReply) obj;

      if (!getMeterStatsList()
          .equals(other.getMeterStatsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMeterStatsCount() > 0) {
        hash = (37 * hash) + METER_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getMeterStatsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.MeterStatsReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.MeterStatsReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.MeterStatsReply)
        org.opencord.voltha.openflow13.Openflow13.MeterStatsReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterStatsReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterStatsReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.MeterStatsReply.class, org.opencord.voltha.openflow13.Openflow13.MeterStatsReply.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.MeterStatsReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMeterStatsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (meterStatsBuilder_ == null) {
          meterStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          meterStatsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_MeterStatsReply_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.MeterStatsReply getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.MeterStatsReply.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.MeterStatsReply build() {
        org.opencord.voltha.openflow13.Openflow13.MeterStatsReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.MeterStatsReply buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.MeterStatsReply result = new org.opencord.voltha.openflow13.Openflow13.MeterStatsReply(this);
        int from_bitField0_ = bitField0_;
        if (meterStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            meterStats_ = java.util.Collections.unmodifiableList(meterStats_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.meterStats_ = meterStats_;
        } else {
          result.meterStats_ = meterStatsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.MeterStatsReply) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.MeterStatsReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.MeterStatsReply other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.MeterStatsReply.getDefaultInstance()) return this;
        if (meterStatsBuilder_ == null) {
          if (!other.meterStats_.isEmpty()) {
            if (meterStats_.isEmpty()) {
              meterStats_ = other.meterStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMeterStatsIsMutable();
              meterStats_.addAll(other.meterStats_);
            }
            onChanged();
          }
        } else {
          if (!other.meterStats_.isEmpty()) {
            if (meterStatsBuilder_.isEmpty()) {
              meterStatsBuilder_.dispose();
              meterStatsBuilder_ = null;
              meterStats_ = other.meterStats_;
              bitField0_ = (bitField0_ & ~0x00000001);
              meterStatsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMeterStatsFieldBuilder() : null;
            } else {
              meterStatsBuilder_.addAllMessages(other.meterStats_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.MeterStatsReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.MeterStatsReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats> meterStats_ =
        java.util.Collections.emptyList();
      private void ensureMeterStatsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          meterStats_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats>(meterStats_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder> meterStatsBuilder_;

      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats> getMeterStatsList() {
        if (meterStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(meterStats_);
        } else {
          return meterStatsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public int getMeterStatsCount() {
        if (meterStatsBuilder_ == null) {
          return meterStats_.size();
        } else {
          return meterStatsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats getMeterStats(int index) {
        if (meterStatsBuilder_ == null) {
          return meterStats_.get(index);
        } else {
          return meterStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder setMeterStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats value) {
        if (meterStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeterStatsIsMutable();
          meterStats_.set(index, value);
          onChanged();
        } else {
          meterStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder setMeterStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder builderForValue) {
        if (meterStatsBuilder_ == null) {
          ensureMeterStatsIsMutable();
          meterStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          meterStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder addMeterStats(org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats value) {
        if (meterStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeterStatsIsMutable();
          meterStats_.add(value);
          onChanged();
        } else {
          meterStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder addMeterStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats value) {
        if (meterStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeterStatsIsMutable();
          meterStats_.add(index, value);
          onChanged();
        } else {
          meterStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder addMeterStats(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder builderForValue) {
        if (meterStatsBuilder_ == null) {
          ensureMeterStatsIsMutable();
          meterStats_.add(builderForValue.build());
          onChanged();
        } else {
          meterStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder addMeterStats(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder builderForValue) {
        if (meterStatsBuilder_ == null) {
          ensureMeterStatsIsMutable();
          meterStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          meterStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder addAllMeterStats(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats> values) {
        if (meterStatsBuilder_ == null) {
          ensureMeterStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, meterStats_);
          onChanged();
        } else {
          meterStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder clearMeterStats() {
        if (meterStatsBuilder_ == null) {
          meterStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          meterStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public Builder removeMeterStats(int index) {
        if (meterStatsBuilder_ == null) {
          ensureMeterStatsIsMutable();
          meterStats_.remove(index);
          onChanged();
        } else {
          meterStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder getMeterStatsBuilder(
          int index) {
        return getMeterStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder getMeterStatsOrBuilder(
          int index) {
        if (meterStatsBuilder_ == null) {
          return meterStats_.get(index);  } else {
          return meterStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder> 
           getMeterStatsOrBuilderList() {
        if (meterStatsBuilder_ != null) {
          return meterStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(meterStats_);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder addMeterStatsBuilder() {
        return getMeterStatsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder addMeterStatsBuilder(
          int index) {
        return getMeterStatsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_stats meter_stats = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder> 
           getMeterStatsBuilderList() {
        return getMeterStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder> 
          getMeterStatsFieldBuilder() {
        if (meterStatsBuilder_ == null) {
          meterStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats, org.opencord.voltha.openflow13.Openflow13.ofp_meter_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_statsOrBuilder>(
                  meterStats_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          meterStats_ = null;
        }
        return meterStatsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.MeterStatsReply)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.MeterStatsReply)
    private static final org.opencord.voltha.openflow13.Openflow13.MeterStatsReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.MeterStatsReply();
    }

    public static org.opencord.voltha.openflow13.Openflow13.MeterStatsReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeterStatsReply>
        PARSER = new com.google.protobuf.AbstractParser<MeterStatsReply>() {
      @java.lang.Override
      public MeterStatsReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MeterStatsReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MeterStatsReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeterStatsReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.MeterStatsReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowTableUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.FlowTableUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
     */
    boolean hasFlowMod();
    /**
     * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod getFlowMod();
    /**
     * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_flow_modOrBuilder getFlowModOrBuilder();

    /**
     * <pre>
     *Transaction id associated with this request.
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    int getXid();
  }
  /**
   * Protobuf type {@code openflow_13.FlowTableUpdate}
   */
  public  static final class FlowTableUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.FlowTableUpdate)
      FlowTableUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowTableUpdate.newBuilder() to construct.
    private FlowTableUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowTableUpdate() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowTableUpdate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowTableUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder subBuilder = null;
              if (flowMod_ != null) {
                subBuilder = flowMod_.toBuilder();
              }
              flowMod_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flowMod_);
                flowMod_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              xid_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowTableUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowTableUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate.class, org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_MOD_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod flowMod_;
    /**
     * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
     */
    public boolean hasFlowMod() {
      return flowMod_ != null;
    }
    /**
     * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod getFlowMod() {
      return flowMod_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.getDefaultInstance() : flowMod_;
    }
    /**
     * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_modOrBuilder getFlowModOrBuilder() {
      return getFlowMod();
    }

    public static final int XID_FIELD_NUMBER = 3;
    private int xid_;
    /**
     * <pre>
     *Transaction id associated with this request.
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    public int getXid() {
      return xid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (flowMod_ != null) {
        output.writeMessage(2, getFlowMod());
      }
      if (xid_ != 0) {
        output.writeUInt32(3, xid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (flowMod_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFlowMod());
      }
      if (xid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, xid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate other = (org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasFlowMod() != other.hasFlowMod()) return false;
      if (hasFlowMod()) {
        if (!getFlowMod()
            .equals(other.getFlowMod())) return false;
      }
      if (getXid()
          != other.getXid()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasFlowMod()) {
        hash = (37 * hash) + FLOW_MOD_FIELD_NUMBER;
        hash = (53 * hash) + getFlowMod().hashCode();
      }
      hash = (37 * hash) + XID_FIELD_NUMBER;
      hash = (53 * hash) + getXid();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.FlowTableUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.FlowTableUpdate)
        org.opencord.voltha.openflow13.Openflow13.FlowTableUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowTableUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowTableUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate.class, org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (flowModBuilder_ == null) {
          flowMod_ = null;
        } else {
          flowMod_ = null;
          flowModBuilder_ = null;
        }
        xid_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowTableUpdate_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate build() {
        org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate result = new org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate(this);
        result.id_ = id_;
        if (flowModBuilder_ == null) {
          result.flowMod_ = flowMod_;
        } else {
          result.flowMod_ = flowModBuilder_.build();
        }
        result.xid_ = xid_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasFlowMod()) {
          mergeFlowMod(other.getFlowMod());
        }
        if (other.getXid() != 0) {
          setXid(other.getXid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod flowMod_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod, org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_flow_modOrBuilder> flowModBuilder_;
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public boolean hasFlowMod() {
        return flowModBuilder_ != null || flowMod_ != null;
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod getFlowMod() {
        if (flowModBuilder_ == null) {
          return flowMod_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.getDefaultInstance() : flowMod_;
        } else {
          return flowModBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public Builder setFlowMod(org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod value) {
        if (flowModBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flowMod_ = value;
          onChanged();
        } else {
          flowModBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public Builder setFlowMod(
          org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder builderForValue) {
        if (flowModBuilder_ == null) {
          flowMod_ = builderForValue.build();
          onChanged();
        } else {
          flowModBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public Builder mergeFlowMod(org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod value) {
        if (flowModBuilder_ == null) {
          if (flowMod_ != null) {
            flowMod_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.newBuilder(flowMod_).mergeFrom(value).buildPartial();
          } else {
            flowMod_ = value;
          }
          onChanged();
        } else {
          flowModBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public Builder clearFlowMod() {
        if (flowModBuilder_ == null) {
          flowMod_ = null;
          onChanged();
        } else {
          flowMod_ = null;
          flowModBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder getFlowModBuilder() {
        
        onChanged();
        return getFlowModFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_modOrBuilder getFlowModOrBuilder() {
        if (flowModBuilder_ != null) {
          return flowModBuilder_.getMessageOrBuilder();
        } else {
          return flowMod_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.getDefaultInstance() : flowMod_;
        }
      }
      /**
       * <code>.openflow_13.ofp_flow_mod flow_mod = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod, org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_flow_modOrBuilder> 
          getFlowModFieldBuilder() {
        if (flowModBuilder_ == null) {
          flowModBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod, org.opencord.voltha.openflow13.Openflow13.ofp_flow_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_flow_modOrBuilder>(
                  getFlowMod(),
                  getParentForChildren(),
                  isClean());
          flowMod_ = null;
        }
        return flowModBuilder_;
      }

      private int xid_ ;
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public int getXid() {
        return xid_;
      }
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder setXid(int value) {
        
        xid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder clearXid() {
        
        xid_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.FlowTableUpdate)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.FlowTableUpdate)
    private static final org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate();
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowTableUpdate>
        PARSER = new com.google.protobuf.AbstractParser<FlowTableUpdate>() {
      @java.lang.Override
      public FlowTableUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowTableUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowTableUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowTableUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.FlowTableUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowGroupTableUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.FlowGroupTableUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
     */
    boolean hasGroupMod();
    /**
     * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_mod getGroupMod();
    /**
     * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_modOrBuilder getGroupModOrBuilder();

    /**
     * <pre>
     *Transaction id associated with this request.
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    int getXid();
  }
  /**
   * Protobuf type {@code openflow_13.FlowGroupTableUpdate}
   */
  public  static final class FlowGroupTableUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.FlowGroupTableUpdate)
      FlowGroupTableUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowGroupTableUpdate.newBuilder() to construct.
    private FlowGroupTableUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowGroupTableUpdate() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowGroupTableUpdate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowGroupTableUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder subBuilder = null;
              if (groupMod_ != null) {
                subBuilder = groupMod_.toBuilder();
              }
              groupMod_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupMod_);
                groupMod_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              xid_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupTableUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupTableUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate.class, org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Device.id or LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GROUP_MOD_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_group_mod groupMod_;
    /**
     * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
     */
    public boolean hasGroupMod() {
      return groupMod_ != null;
    }
    /**
     * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod getGroupMod() {
      return groupMod_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.getDefaultInstance() : groupMod_;
    }
    /**
     * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_modOrBuilder getGroupModOrBuilder() {
      return getGroupMod();
    }

    public static final int XID_FIELD_NUMBER = 3;
    private int xid_;
    /**
     * <pre>
     *Transaction id associated with this request.
     * </pre>
     *
     * <code>uint32 xid = 3;</code>
     */
    public int getXid() {
      return xid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (groupMod_ != null) {
        output.writeMessage(2, getGroupMod());
      }
      if (xid_ != 0) {
        output.writeUInt32(3, xid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (groupMod_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGroupMod());
      }
      if (xid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, xid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate other = (org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasGroupMod() != other.hasGroupMod()) return false;
      if (hasGroupMod()) {
        if (!getGroupMod()
            .equals(other.getGroupMod())) return false;
      }
      if (getXid()
          != other.getXid()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasGroupMod()) {
        hash = (37 * hash) + GROUP_MOD_FIELD_NUMBER;
        hash = (53 * hash) + getGroupMod().hashCode();
      }
      hash = (37 * hash) + XID_FIELD_NUMBER;
      hash = (53 * hash) + getXid();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.FlowGroupTableUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.FlowGroupTableUpdate)
        org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupTableUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupTableUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate.class, org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (groupModBuilder_ == null) {
          groupMod_ = null;
        } else {
          groupMod_ = null;
          groupModBuilder_ = null;
        }
        xid_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupTableUpdate_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate build() {
        org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate result = new org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate(this);
        result.id_ = id_;
        if (groupModBuilder_ == null) {
          result.groupMod_ = groupMod_;
        } else {
          result.groupMod_ = groupModBuilder_.build();
        }
        result.xid_ = xid_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasGroupMod()) {
          mergeGroupMod(other.getGroupMod());
        }
        if (other.getXid() != 0) {
          setXid(other.getXid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device.id or LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_group_mod groupMod_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_mod, org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_modOrBuilder> groupModBuilder_;
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public boolean hasGroupMod() {
        return groupModBuilder_ != null || groupMod_ != null;
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod getGroupMod() {
        if (groupModBuilder_ == null) {
          return groupMod_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.getDefaultInstance() : groupMod_;
        } else {
          return groupModBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public Builder setGroupMod(org.opencord.voltha.openflow13.Openflow13.ofp_group_mod value) {
        if (groupModBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupMod_ = value;
          onChanged();
        } else {
          groupModBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public Builder setGroupMod(
          org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder builderForValue) {
        if (groupModBuilder_ == null) {
          groupMod_ = builderForValue.build();
          onChanged();
        } else {
          groupModBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public Builder mergeGroupMod(org.opencord.voltha.openflow13.Openflow13.ofp_group_mod value) {
        if (groupModBuilder_ == null) {
          if (groupMod_ != null) {
            groupMod_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.newBuilder(groupMod_).mergeFrom(value).buildPartial();
          } else {
            groupMod_ = value;
          }
          onChanged();
        } else {
          groupModBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public Builder clearGroupMod() {
        if (groupModBuilder_ == null) {
          groupMod_ = null;
          onChanged();
        } else {
          groupMod_ = null;
          groupModBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder getGroupModBuilder() {
        
        onChanged();
        return getGroupModFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_modOrBuilder getGroupModOrBuilder() {
        if (groupModBuilder_ != null) {
          return groupModBuilder_.getMessageOrBuilder();
        } else {
          return groupMod_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.getDefaultInstance() : groupMod_;
        }
      }
      /**
       * <code>.openflow_13.ofp_group_mod group_mod = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_mod, org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_modOrBuilder> 
          getGroupModFieldBuilder() {
        if (groupModBuilder_ == null) {
          groupModBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_group_mod, org.opencord.voltha.openflow13.Openflow13.ofp_group_mod.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_modOrBuilder>(
                  getGroupMod(),
                  getParentForChildren(),
                  isClean());
          groupMod_ = null;
        }
        return groupModBuilder_;
      }

      private int xid_ ;
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public int getXid() {
        return xid_;
      }
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder setXid(int value) {
        
        xid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Transaction id associated with this request.
       * </pre>
       *
       * <code>uint32 xid = 3;</code>
       */
      public Builder clearXid() {
        
        xid_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.FlowGroupTableUpdate)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.FlowGroupTableUpdate)
    private static final org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate();
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowGroupTableUpdate>
        PARSER = new com.google.protobuf.AbstractParser<FlowGroupTableUpdate>() {
      @java.lang.Override
      public FlowGroupTableUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowGroupTableUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowGroupTableUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowGroupTableUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.FlowGroupTableUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.Flows)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats> 
        getItemsList();
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats getItems(int index);
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code openflow_13.Flows}
   */
  public  static final class Flows extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.Flows)
      FlowsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Flows.newBuilder() to construct.
    private Flows(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Flows() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Flows();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Flows(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                items_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Flows_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Flows_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.Flows.class, org.opencord.voltha.openflow13.Openflow13.Flows.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats> items_;
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.Flows)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.Flows other = (org.opencord.voltha.openflow13.Openflow13.Flows) obj;

      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Flows parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.Flows prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.Flows}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.Flows)
        org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Flows_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Flows_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.Flows.class, org.opencord.voltha.openflow13.Openflow13.Flows.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.Flows.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Flows_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.Flows getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.Flows build() {
        org.opencord.voltha.openflow13.Openflow13.Flows result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.Flows buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.Flows result = new org.opencord.voltha.openflow13.Openflow13.Flows(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.Flows) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.Flows)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.Flows other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.Flows parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.Flows) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          items_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder addItems(org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder addItems(
          org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_flow_stats items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats, org.opencord.voltha.openflow13.Openflow13.ofp_flow_stats.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_flow_statsOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.Flows)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.Flows)
    private static final org.opencord.voltha.openflow13.Openflow13.Flows DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.Flows();
    }

    public static org.opencord.voltha.openflow13.Openflow13.Flows getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Flows>
        PARSER = new com.google.protobuf.AbstractParser<Flows>() {
      @java.lang.Override
      public Flows parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Flows(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Flows> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Flows> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.Flows getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.Meters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry> 
        getItemsList();
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry getItems(int index);
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code openflow_13.Meters}
   */
  public  static final class Meters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.Meters)
      MetersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Meters.newBuilder() to construct.
    private Meters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Meters() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Meters();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Meters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                items_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Meters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Meters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.Meters.class, org.opencord.voltha.openflow13.Openflow13.Meters.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry> items_;
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.Meters)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.Meters other = (org.opencord.voltha.openflow13.Openflow13.Meters) obj;

      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.Meters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.Meters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.Meters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.Meters)
        org.opencord.voltha.openflow13.Openflow13.MetersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Meters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Meters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.Meters.class, org.opencord.voltha.openflow13.Openflow13.Meters.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.Meters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_Meters_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.Meters getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.Meters.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.Meters build() {
        org.opencord.voltha.openflow13.Openflow13.Meters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.Meters buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.Meters result = new org.opencord.voltha.openflow13.Openflow13.Meters(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.Meters) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.Meters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.Meters other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.Meters.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.Meters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.Meters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          items_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder addItems(org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder addItems(
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_meter_entry items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entry.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_meter_entryOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.Meters)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.Meters)
    private static final org.opencord.voltha.openflow13.Openflow13.Meters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.Meters();
    }

    public static org.opencord.voltha.openflow13.Openflow13.Meters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Meters>
        PARSER = new com.google.protobuf.AbstractParser<Meters>() {
      @java.lang.Override
      public Meters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Meters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Meters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Meters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.Meters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowGroupsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.FlowGroups)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry> 
        getItemsList();
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_entry getItems(int index);
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code openflow_13.FlowGroups}
   */
  public  static final class FlowGroups extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.FlowGroups)
      FlowGroupsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowGroups.newBuilder() to construct.
    private FlowGroups(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowGroups() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowGroups();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowGroups(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                items_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroups_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroups_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.class, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry> items_;
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.FlowGroups)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.FlowGroups other = (org.opencord.voltha.openflow13.Openflow13.FlowGroups) obj;

      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.FlowGroups prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.FlowGroups}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.FlowGroups)
        org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroups_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroups_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.FlowGroups.class, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.FlowGroups.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroups_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups build() {
        org.opencord.voltha.openflow13.Openflow13.FlowGroups result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.FlowGroups result = new org.opencord.voltha.openflow13.Openflow13.FlowGroups(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.FlowGroups) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.FlowGroups)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.FlowGroups other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.FlowGroups parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.FlowGroups) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          items_ = new java.util.ArrayList<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_entry, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder setItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder addItems(org.opencord.voltha.openflow13.Openflow13.ofp_group_entry value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder addItems(
          org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder addItems(
          int index, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends org.opencord.voltha.openflow13.Openflow13.ofp_group_entry> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.getDefaultInstance());
      }
      /**
       * <code>repeated .openflow_13.ofp_group_entry items = 1;</code>
       */
      public java.util.List<org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_group_entry, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_group_entry, org.opencord.voltha.openflow13.Openflow13.ofp_group_entry.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_group_entryOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.FlowGroups)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.FlowGroups)
    private static final org.opencord.voltha.openflow13.Openflow13.FlowGroups DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.FlowGroups();
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowGroups getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowGroups>
        PARSER = new com.google.protobuf.AbstractParser<FlowGroups>() {
      @java.lang.Override
      public FlowGroups parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowGroups(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowGroups> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowGroups> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.FlowGroups getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowChangesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.FlowChanges)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.Flows to_add = 1;</code>
     */
    boolean hasToAdd();
    /**
     * <code>.openflow_13.Flows to_add = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.Flows getToAdd();
    /**
     * <code>.openflow_13.Flows to_add = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder getToAddOrBuilder();

    /**
     * <code>.openflow_13.Flows to_remove = 2;</code>
     */
    boolean hasToRemove();
    /**
     * <code>.openflow_13.Flows to_remove = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.Flows getToRemove();
    /**
     * <code>.openflow_13.Flows to_remove = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder getToRemoveOrBuilder();
  }
  /**
   * Protobuf type {@code openflow_13.FlowChanges}
   */
  public  static final class FlowChanges extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.FlowChanges)
      FlowChangesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowChanges.newBuilder() to construct.
    private FlowChanges(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowChanges() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowChanges();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowChanges(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.Flows.Builder subBuilder = null;
              if (toAdd_ != null) {
                subBuilder = toAdd_.toBuilder();
              }
              toAdd_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.Flows.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toAdd_);
                toAdd_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.Flows.Builder subBuilder = null;
              if (toRemove_ != null) {
                subBuilder = toRemove_.toBuilder();
              }
              toRemove_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.Flows.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toRemove_);
                toRemove_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowChanges_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowChanges_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.FlowChanges.class, org.opencord.voltha.openflow13.Openflow13.FlowChanges.Builder.class);
    }

    public static final int TO_ADD_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.Flows toAdd_;
    /**
     * <code>.openflow_13.Flows to_add = 1;</code>
     */
    public boolean hasToAdd() {
      return toAdd_ != null;
    }
    /**
     * <code>.openflow_13.Flows to_add = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.Flows getToAdd() {
      return toAdd_ == null ? org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance() : toAdd_;
    }
    /**
     * <code>.openflow_13.Flows to_add = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder getToAddOrBuilder() {
      return getToAdd();
    }

    public static final int TO_REMOVE_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.Flows toRemove_;
    /**
     * <code>.openflow_13.Flows to_remove = 2;</code>
     */
    public boolean hasToRemove() {
      return toRemove_ != null;
    }
    /**
     * <code>.openflow_13.Flows to_remove = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.Flows getToRemove() {
      return toRemove_ == null ? org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance() : toRemove_;
    }
    /**
     * <code>.openflow_13.Flows to_remove = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder getToRemoveOrBuilder() {
      return getToRemove();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (toAdd_ != null) {
        output.writeMessage(1, getToAdd());
      }
      if (toRemove_ != null) {
        output.writeMessage(2, getToRemove());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (toAdd_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getToAdd());
      }
      if (toRemove_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToRemove());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.FlowChanges)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.FlowChanges other = (org.opencord.voltha.openflow13.Openflow13.FlowChanges) obj;

      if (hasToAdd() != other.hasToAdd()) return false;
      if (hasToAdd()) {
        if (!getToAdd()
            .equals(other.getToAdd())) return false;
      }
      if (hasToRemove() != other.hasToRemove()) return false;
      if (hasToRemove()) {
        if (!getToRemove()
            .equals(other.getToRemove())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasToAdd()) {
        hash = (37 * hash) + TO_ADD_FIELD_NUMBER;
        hash = (53 * hash) + getToAdd().hashCode();
      }
      if (hasToRemove()) {
        hash = (37 * hash) + TO_REMOVE_FIELD_NUMBER;
        hash = (53 * hash) + getToRemove().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.FlowChanges prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.FlowChanges}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.FlowChanges)
        org.opencord.voltha.openflow13.Openflow13.FlowChangesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowChanges_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowChanges_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.FlowChanges.class, org.opencord.voltha.openflow13.Openflow13.FlowChanges.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.FlowChanges.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (toAddBuilder_ == null) {
          toAdd_ = null;
        } else {
          toAdd_ = null;
          toAddBuilder_ = null;
        }
        if (toRemoveBuilder_ == null) {
          toRemove_ = null;
        } else {
          toRemove_ = null;
          toRemoveBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowChanges_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowChanges getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.FlowChanges.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowChanges build() {
        org.opencord.voltha.openflow13.Openflow13.FlowChanges result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowChanges buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.FlowChanges result = new org.opencord.voltha.openflow13.Openflow13.FlowChanges(this);
        if (toAddBuilder_ == null) {
          result.toAdd_ = toAdd_;
        } else {
          result.toAdd_ = toAddBuilder_.build();
        }
        if (toRemoveBuilder_ == null) {
          result.toRemove_ = toRemove_;
        } else {
          result.toRemove_ = toRemoveBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.FlowChanges) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.FlowChanges)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.FlowChanges other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.FlowChanges.getDefaultInstance()) return this;
        if (other.hasToAdd()) {
          mergeToAdd(other.getToAdd());
        }
        if (other.hasToRemove()) {
          mergeToRemove(other.getToRemove());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.FlowChanges parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.FlowChanges) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.Flows toAdd_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.Flows, org.opencord.voltha.openflow13.Openflow13.Flows.Builder, org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder> toAddBuilder_;
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public boolean hasToAdd() {
        return toAddBuilder_ != null || toAdd_ != null;
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.Flows getToAdd() {
        if (toAddBuilder_ == null) {
          return toAdd_ == null ? org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance() : toAdd_;
        } else {
          return toAddBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public Builder setToAdd(org.opencord.voltha.openflow13.Openflow13.Flows value) {
        if (toAddBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toAdd_ = value;
          onChanged();
        } else {
          toAddBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public Builder setToAdd(
          org.opencord.voltha.openflow13.Openflow13.Flows.Builder builderForValue) {
        if (toAddBuilder_ == null) {
          toAdd_ = builderForValue.build();
          onChanged();
        } else {
          toAddBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public Builder mergeToAdd(org.opencord.voltha.openflow13.Openflow13.Flows value) {
        if (toAddBuilder_ == null) {
          if (toAdd_ != null) {
            toAdd_ =
              org.opencord.voltha.openflow13.Openflow13.Flows.newBuilder(toAdd_).mergeFrom(value).buildPartial();
          } else {
            toAdd_ = value;
          }
          onChanged();
        } else {
          toAddBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public Builder clearToAdd() {
        if (toAddBuilder_ == null) {
          toAdd_ = null;
          onChanged();
        } else {
          toAdd_ = null;
          toAddBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.Flows.Builder getToAddBuilder() {
        
        onChanged();
        return getToAddFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder getToAddOrBuilder() {
        if (toAddBuilder_ != null) {
          return toAddBuilder_.getMessageOrBuilder();
        } else {
          return toAdd_ == null ?
              org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance() : toAdd_;
        }
      }
      /**
       * <code>.openflow_13.Flows to_add = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.Flows, org.opencord.voltha.openflow13.Openflow13.Flows.Builder, org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder> 
          getToAddFieldBuilder() {
        if (toAddBuilder_ == null) {
          toAddBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.Flows, org.opencord.voltha.openflow13.Openflow13.Flows.Builder, org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder>(
                  getToAdd(),
                  getParentForChildren(),
                  isClean());
          toAdd_ = null;
        }
        return toAddBuilder_;
      }

      private org.opencord.voltha.openflow13.Openflow13.Flows toRemove_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.Flows, org.opencord.voltha.openflow13.Openflow13.Flows.Builder, org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder> toRemoveBuilder_;
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public boolean hasToRemove() {
        return toRemoveBuilder_ != null || toRemove_ != null;
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.Flows getToRemove() {
        if (toRemoveBuilder_ == null) {
          return toRemove_ == null ? org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance() : toRemove_;
        } else {
          return toRemoveBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public Builder setToRemove(org.opencord.voltha.openflow13.Openflow13.Flows value) {
        if (toRemoveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toRemove_ = value;
          onChanged();
        } else {
          toRemoveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public Builder setToRemove(
          org.opencord.voltha.openflow13.Openflow13.Flows.Builder builderForValue) {
        if (toRemoveBuilder_ == null) {
          toRemove_ = builderForValue.build();
          onChanged();
        } else {
          toRemoveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public Builder mergeToRemove(org.opencord.voltha.openflow13.Openflow13.Flows value) {
        if (toRemoveBuilder_ == null) {
          if (toRemove_ != null) {
            toRemove_ =
              org.opencord.voltha.openflow13.Openflow13.Flows.newBuilder(toRemove_).mergeFrom(value).buildPartial();
          } else {
            toRemove_ = value;
          }
          onChanged();
        } else {
          toRemoveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public Builder clearToRemove() {
        if (toRemoveBuilder_ == null) {
          toRemove_ = null;
          onChanged();
        } else {
          toRemove_ = null;
          toRemoveBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.Flows.Builder getToRemoveBuilder() {
        
        onChanged();
        return getToRemoveFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder getToRemoveOrBuilder() {
        if (toRemoveBuilder_ != null) {
          return toRemoveBuilder_.getMessageOrBuilder();
        } else {
          return toRemove_ == null ?
              org.opencord.voltha.openflow13.Openflow13.Flows.getDefaultInstance() : toRemove_;
        }
      }
      /**
       * <code>.openflow_13.Flows to_remove = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.Flows, org.opencord.voltha.openflow13.Openflow13.Flows.Builder, org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder> 
          getToRemoveFieldBuilder() {
        if (toRemoveBuilder_ == null) {
          toRemoveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.Flows, org.opencord.voltha.openflow13.Openflow13.Flows.Builder, org.opencord.voltha.openflow13.Openflow13.FlowsOrBuilder>(
                  getToRemove(),
                  getParentForChildren(),
                  isClean());
          toRemove_ = null;
        }
        return toRemoveBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.FlowChanges)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.FlowChanges)
    private static final org.opencord.voltha.openflow13.Openflow13.FlowChanges DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.FlowChanges();
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowChanges getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowChanges>
        PARSER = new com.google.protobuf.AbstractParser<FlowChanges>() {
      @java.lang.Override
      public FlowChanges parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowChanges(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowChanges> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowChanges> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.FlowChanges getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowGroupChangesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.FlowGroupChanges)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.openflow_13.FlowGroups to_add = 1;</code>
     */
    boolean hasToAdd();
    /**
     * <code>.openflow_13.FlowGroups to_add = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowGroups getToAdd();
    /**
     * <code>.openflow_13.FlowGroups to_add = 1;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToAddOrBuilder();

    /**
     * <code>.openflow_13.FlowGroups to_remove = 2;</code>
     */
    boolean hasToRemove();
    /**
     * <code>.openflow_13.FlowGroups to_remove = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowGroups getToRemove();
    /**
     * <code>.openflow_13.FlowGroups to_remove = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToRemoveOrBuilder();

    /**
     * <code>.openflow_13.FlowGroups to_update = 3;</code>
     */
    boolean hasToUpdate();
    /**
     * <code>.openflow_13.FlowGroups to_update = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowGroups getToUpdate();
    /**
     * <code>.openflow_13.FlowGroups to_update = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToUpdateOrBuilder();
  }
  /**
   * Protobuf type {@code openflow_13.FlowGroupChanges}
   */
  public  static final class FlowGroupChanges extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.FlowGroupChanges)
      FlowGroupChangesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowGroupChanges.newBuilder() to construct.
    private FlowGroupChanges(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowGroupChanges() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowGroupChanges();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowGroupChanges(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder subBuilder = null;
              if (toAdd_ != null) {
                subBuilder = toAdd_.toBuilder();
              }
              toAdd_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.FlowGroups.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toAdd_);
                toAdd_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder subBuilder = null;
              if (toRemove_ != null) {
                subBuilder = toRemove_.toBuilder();
              }
              toRemove_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.FlowGroups.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toRemove_);
                toRemove_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder subBuilder = null;
              if (toUpdate_ != null) {
                subBuilder = toUpdate_.toBuilder();
              }
              toUpdate_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.FlowGroups.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toUpdate_);
                toUpdate_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupChanges_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupChanges_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges.class, org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges.Builder.class);
    }

    public static final int TO_ADD_FIELD_NUMBER = 1;
    private org.opencord.voltha.openflow13.Openflow13.FlowGroups toAdd_;
    /**
     * <code>.openflow_13.FlowGroups to_add = 1;</code>
     */
    public boolean hasToAdd() {
      return toAdd_ != null;
    }
    /**
     * <code>.openflow_13.FlowGroups to_add = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowGroups getToAdd() {
      return toAdd_ == null ? org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toAdd_;
    }
    /**
     * <code>.openflow_13.FlowGroups to_add = 1;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToAddOrBuilder() {
      return getToAdd();
    }

    public static final int TO_REMOVE_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.FlowGroups toRemove_;
    /**
     * <code>.openflow_13.FlowGroups to_remove = 2;</code>
     */
    public boolean hasToRemove() {
      return toRemove_ != null;
    }
    /**
     * <code>.openflow_13.FlowGroups to_remove = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowGroups getToRemove() {
      return toRemove_ == null ? org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toRemove_;
    }
    /**
     * <code>.openflow_13.FlowGroups to_remove = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToRemoveOrBuilder() {
      return getToRemove();
    }

    public static final int TO_UPDATE_FIELD_NUMBER = 3;
    private org.opencord.voltha.openflow13.Openflow13.FlowGroups toUpdate_;
    /**
     * <code>.openflow_13.FlowGroups to_update = 3;</code>
     */
    public boolean hasToUpdate() {
      return toUpdate_ != null;
    }
    /**
     * <code>.openflow_13.FlowGroups to_update = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowGroups getToUpdate() {
      return toUpdate_ == null ? org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toUpdate_;
    }
    /**
     * <code>.openflow_13.FlowGroups to_update = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToUpdateOrBuilder() {
      return getToUpdate();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (toAdd_ != null) {
        output.writeMessage(1, getToAdd());
      }
      if (toRemove_ != null) {
        output.writeMessage(2, getToRemove());
      }
      if (toUpdate_ != null) {
        output.writeMessage(3, getToUpdate());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (toAdd_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getToAdd());
      }
      if (toRemove_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToRemove());
      }
      if (toUpdate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToUpdate());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges other = (org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges) obj;

      if (hasToAdd() != other.hasToAdd()) return false;
      if (hasToAdd()) {
        if (!getToAdd()
            .equals(other.getToAdd())) return false;
      }
      if (hasToRemove() != other.hasToRemove()) return false;
      if (hasToRemove()) {
        if (!getToRemove()
            .equals(other.getToRemove())) return false;
      }
      if (hasToUpdate() != other.hasToUpdate()) return false;
      if (hasToUpdate()) {
        if (!getToUpdate()
            .equals(other.getToUpdate())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasToAdd()) {
        hash = (37 * hash) + TO_ADD_FIELD_NUMBER;
        hash = (53 * hash) + getToAdd().hashCode();
      }
      if (hasToRemove()) {
        hash = (37 * hash) + TO_REMOVE_FIELD_NUMBER;
        hash = (53 * hash) + getToRemove().hashCode();
      }
      if (hasToUpdate()) {
        hash = (37 * hash) + TO_UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getToUpdate().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.FlowGroupChanges}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.FlowGroupChanges)
        org.opencord.voltha.openflow13.Openflow13.FlowGroupChangesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupChanges_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupChanges_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges.class, org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (toAddBuilder_ == null) {
          toAdd_ = null;
        } else {
          toAdd_ = null;
          toAddBuilder_ = null;
        }
        if (toRemoveBuilder_ == null) {
          toRemove_ = null;
        } else {
          toRemove_ = null;
          toRemoveBuilder_ = null;
        }
        if (toUpdateBuilder_ == null) {
          toUpdate_ = null;
        } else {
          toUpdate_ = null;
          toUpdateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_FlowGroupChanges_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges build() {
        org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges result = new org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges(this);
        if (toAddBuilder_ == null) {
          result.toAdd_ = toAdd_;
        } else {
          result.toAdd_ = toAddBuilder_.build();
        }
        if (toRemoveBuilder_ == null) {
          result.toRemove_ = toRemove_;
        } else {
          result.toRemove_ = toRemoveBuilder_.build();
        }
        if (toUpdateBuilder_ == null) {
          result.toUpdate_ = toUpdate_;
        } else {
          result.toUpdate_ = toUpdateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges.getDefaultInstance()) return this;
        if (other.hasToAdd()) {
          mergeToAdd(other.getToAdd());
        }
        if (other.hasToRemove()) {
          mergeToRemove(other.getToRemove());
        }
        if (other.hasToUpdate()) {
          mergeToUpdate(other.getToUpdate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.FlowGroups toAdd_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder> toAddBuilder_;
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public boolean hasToAdd() {
        return toAddBuilder_ != null || toAdd_ != null;
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups getToAdd() {
        if (toAddBuilder_ == null) {
          return toAdd_ == null ? org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toAdd_;
        } else {
          return toAddBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public Builder setToAdd(org.opencord.voltha.openflow13.Openflow13.FlowGroups value) {
        if (toAddBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toAdd_ = value;
          onChanged();
        } else {
          toAddBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public Builder setToAdd(
          org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder builderForValue) {
        if (toAddBuilder_ == null) {
          toAdd_ = builderForValue.build();
          onChanged();
        } else {
          toAddBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public Builder mergeToAdd(org.opencord.voltha.openflow13.Openflow13.FlowGroups value) {
        if (toAddBuilder_ == null) {
          if (toAdd_ != null) {
            toAdd_ =
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.newBuilder(toAdd_).mergeFrom(value).buildPartial();
          } else {
            toAdd_ = value;
          }
          onChanged();
        } else {
          toAddBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public Builder clearToAdd() {
        if (toAddBuilder_ == null) {
          toAdd_ = null;
          onChanged();
        } else {
          toAdd_ = null;
          toAddBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder getToAddBuilder() {
        
        onChanged();
        return getToAddFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToAddOrBuilder() {
        if (toAddBuilder_ != null) {
          return toAddBuilder_.getMessageOrBuilder();
        } else {
          return toAdd_ == null ?
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toAdd_;
        }
      }
      /**
       * <code>.openflow_13.FlowGroups to_add = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder> 
          getToAddFieldBuilder() {
        if (toAddBuilder_ == null) {
          toAddBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder>(
                  getToAdd(),
                  getParentForChildren(),
                  isClean());
          toAdd_ = null;
        }
        return toAddBuilder_;
      }

      private org.opencord.voltha.openflow13.Openflow13.FlowGroups toRemove_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder> toRemoveBuilder_;
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public boolean hasToRemove() {
        return toRemoveBuilder_ != null || toRemove_ != null;
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups getToRemove() {
        if (toRemoveBuilder_ == null) {
          return toRemove_ == null ? org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toRemove_;
        } else {
          return toRemoveBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public Builder setToRemove(org.opencord.voltha.openflow13.Openflow13.FlowGroups value) {
        if (toRemoveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toRemove_ = value;
          onChanged();
        } else {
          toRemoveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public Builder setToRemove(
          org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder builderForValue) {
        if (toRemoveBuilder_ == null) {
          toRemove_ = builderForValue.build();
          onChanged();
        } else {
          toRemoveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public Builder mergeToRemove(org.opencord.voltha.openflow13.Openflow13.FlowGroups value) {
        if (toRemoveBuilder_ == null) {
          if (toRemove_ != null) {
            toRemove_ =
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.newBuilder(toRemove_).mergeFrom(value).buildPartial();
          } else {
            toRemove_ = value;
          }
          onChanged();
        } else {
          toRemoveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public Builder clearToRemove() {
        if (toRemoveBuilder_ == null) {
          toRemove_ = null;
          onChanged();
        } else {
          toRemove_ = null;
          toRemoveBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder getToRemoveBuilder() {
        
        onChanged();
        return getToRemoveFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToRemoveOrBuilder() {
        if (toRemoveBuilder_ != null) {
          return toRemoveBuilder_.getMessageOrBuilder();
        } else {
          return toRemove_ == null ?
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toRemove_;
        }
      }
      /**
       * <code>.openflow_13.FlowGroups to_remove = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder> 
          getToRemoveFieldBuilder() {
        if (toRemoveBuilder_ == null) {
          toRemoveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder>(
                  getToRemove(),
                  getParentForChildren(),
                  isClean());
          toRemove_ = null;
        }
        return toRemoveBuilder_;
      }

      private org.opencord.voltha.openflow13.Openflow13.FlowGroups toUpdate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder> toUpdateBuilder_;
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public boolean hasToUpdate() {
        return toUpdateBuilder_ != null || toUpdate_ != null;
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups getToUpdate() {
        if (toUpdateBuilder_ == null) {
          return toUpdate_ == null ? org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toUpdate_;
        } else {
          return toUpdateBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public Builder setToUpdate(org.opencord.voltha.openflow13.Openflow13.FlowGroups value) {
        if (toUpdateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toUpdate_ = value;
          onChanged();
        } else {
          toUpdateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public Builder setToUpdate(
          org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder builderForValue) {
        if (toUpdateBuilder_ == null) {
          toUpdate_ = builderForValue.build();
          onChanged();
        } else {
          toUpdateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public Builder mergeToUpdate(org.opencord.voltha.openflow13.Openflow13.FlowGroups value) {
        if (toUpdateBuilder_ == null) {
          if (toUpdate_ != null) {
            toUpdate_ =
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.newBuilder(toUpdate_).mergeFrom(value).buildPartial();
          } else {
            toUpdate_ = value;
          }
          onChanged();
        } else {
          toUpdateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public Builder clearToUpdate() {
        if (toUpdateBuilder_ == null) {
          toUpdate_ = null;
          onChanged();
        } else {
          toUpdate_ = null;
          toUpdateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder getToUpdateBuilder() {
        
        onChanged();
        return getToUpdateFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder getToUpdateOrBuilder() {
        if (toUpdateBuilder_ != null) {
          return toUpdateBuilder_.getMessageOrBuilder();
        } else {
          return toUpdate_ == null ?
              org.opencord.voltha.openflow13.Openflow13.FlowGroups.getDefaultInstance() : toUpdate_;
        }
      }
      /**
       * <code>.openflow_13.FlowGroups to_update = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder> 
          getToUpdateFieldBuilder() {
        if (toUpdateBuilder_ == null) {
          toUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.FlowGroups, org.opencord.voltha.openflow13.Openflow13.FlowGroups.Builder, org.opencord.voltha.openflow13.Openflow13.FlowGroupsOrBuilder>(
                  getToUpdate(),
                  getParentForChildren(),
                  isClean());
          toUpdate_ = null;
        }
        return toUpdateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.FlowGroupChanges)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.FlowGroupChanges)
    private static final org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges();
    }

    public static org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowGroupChanges>
        PARSER = new com.google.protobuf.AbstractParser<FlowGroupChanges>() {
      @java.lang.Override
      public FlowGroupChanges parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowGroupChanges(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowGroupChanges> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowGroupChanges> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.FlowGroupChanges getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PacketInOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.PacketIn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
     */
    boolean hasPacketIn();
    /**
     * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_packet_in getPacketIn();
    /**
     * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_packet_inOrBuilder getPacketInOrBuilder();
  }
  /**
   * Protobuf type {@code openflow_13.PacketIn}
   */
  public  static final class PacketIn extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.PacketIn)
      PacketInOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PacketIn.newBuilder() to construct.
    private PacketIn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PacketIn() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PacketIn();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PacketIn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder subBuilder = null;
              if (packetIn_ != null) {
                subBuilder = packetIn_.toBuilder();
              }
              packetIn_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(packetIn_);
                packetIn_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketIn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketIn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.PacketIn.class, org.opencord.voltha.openflow13.Openflow13.PacketIn.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PACKET_IN_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_packet_in packetIn_;
    /**
     * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
     */
    public boolean hasPacketIn() {
      return packetIn_ != null;
    }
    /**
     * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in getPacketIn() {
      return packetIn_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.getDefaultInstance() : packetIn_;
    }
    /**
     * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_inOrBuilder getPacketInOrBuilder() {
      return getPacketIn();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (packetIn_ != null) {
        output.writeMessage(2, getPacketIn());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (packetIn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPacketIn());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.PacketIn)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.PacketIn other = (org.opencord.voltha.openflow13.Openflow13.PacketIn) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasPacketIn() != other.hasPacketIn()) return false;
      if (hasPacketIn()) {
        if (!getPacketIn()
            .equals(other.getPacketIn())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasPacketIn()) {
        hash = (37 * hash) + PACKET_IN_FIELD_NUMBER;
        hash = (53 * hash) + getPacketIn().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.PacketIn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.PacketIn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.PacketIn)
        org.opencord.voltha.openflow13.Openflow13.PacketInOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketIn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketIn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.PacketIn.class, org.opencord.voltha.openflow13.Openflow13.PacketIn.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.PacketIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (packetInBuilder_ == null) {
          packetIn_ = null;
        } else {
          packetIn_ = null;
          packetInBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketIn_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.PacketIn getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.PacketIn.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.PacketIn build() {
        org.opencord.voltha.openflow13.Openflow13.PacketIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.PacketIn buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.PacketIn result = new org.opencord.voltha.openflow13.Openflow13.PacketIn(this);
        result.id_ = id_;
        if (packetInBuilder_ == null) {
          result.packetIn_ = packetIn_;
        } else {
          result.packetIn_ = packetInBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.PacketIn) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.PacketIn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.PacketIn other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.PacketIn.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasPacketIn()) {
          mergePacketIn(other.getPacketIn());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.PacketIn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.PacketIn) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_packet_in packetIn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_in, org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_inOrBuilder> packetInBuilder_;
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public boolean hasPacketIn() {
        return packetInBuilder_ != null || packetIn_ != null;
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in getPacketIn() {
        if (packetInBuilder_ == null) {
          return packetIn_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.getDefaultInstance() : packetIn_;
        } else {
          return packetInBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public Builder setPacketIn(org.opencord.voltha.openflow13.Openflow13.ofp_packet_in value) {
        if (packetInBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packetIn_ = value;
          onChanged();
        } else {
          packetInBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public Builder setPacketIn(
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder builderForValue) {
        if (packetInBuilder_ == null) {
          packetIn_ = builderForValue.build();
          onChanged();
        } else {
          packetInBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public Builder mergePacketIn(org.opencord.voltha.openflow13.Openflow13.ofp_packet_in value) {
        if (packetInBuilder_ == null) {
          if (packetIn_ != null) {
            packetIn_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.newBuilder(packetIn_).mergeFrom(value).buildPartial();
          } else {
            packetIn_ = value;
          }
          onChanged();
        } else {
          packetInBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public Builder clearPacketIn() {
        if (packetInBuilder_ == null) {
          packetIn_ = null;
          onChanged();
        } else {
          packetIn_ = null;
          packetInBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder getPacketInBuilder() {
        
        onChanged();
        return getPacketInFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_inOrBuilder getPacketInOrBuilder() {
        if (packetInBuilder_ != null) {
          return packetInBuilder_.getMessageOrBuilder();
        } else {
          return packetIn_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.getDefaultInstance() : packetIn_;
        }
      }
      /**
       * <code>.openflow_13.ofp_packet_in packet_in = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_in, org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_inOrBuilder> 
          getPacketInFieldBuilder() {
        if (packetInBuilder_ == null) {
          packetInBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_in, org.opencord.voltha.openflow13.Openflow13.ofp_packet_in.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_inOrBuilder>(
                  getPacketIn(),
                  getParentForChildren(),
                  isClean());
          packetIn_ = null;
        }
        return packetInBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.PacketIn)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.PacketIn)
    private static final org.opencord.voltha.openflow13.Openflow13.PacketIn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.PacketIn();
    }

    public static org.opencord.voltha.openflow13.Openflow13.PacketIn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PacketIn>
        PARSER = new com.google.protobuf.AbstractParser<PacketIn>() {
      @java.lang.Override
      public PacketIn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PacketIn(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PacketIn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PacketIn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.PacketIn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PacketOutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.PacketOut)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
     */
    boolean hasPacketOut();
    /**
     * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_packet_out getPacketOut();
    /**
     * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_packet_outOrBuilder getPacketOutOrBuilder();
  }
  /**
   * Protobuf type {@code openflow_13.PacketOut}
   */
  public  static final class PacketOut extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.PacketOut)
      PacketOutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PacketOut.newBuilder() to construct.
    private PacketOut(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PacketOut() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PacketOut();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PacketOut(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder subBuilder = null;
              if (packetOut_ != null) {
                subBuilder = packetOut_.toBuilder();
              }
              packetOut_ = input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(packetOut_);
                packetOut_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketOut_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketOut_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.PacketOut.class, org.opencord.voltha.openflow13.Openflow13.PacketOut.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PACKET_OUT_FIELD_NUMBER = 2;
    private org.opencord.voltha.openflow13.Openflow13.ofp_packet_out packetOut_;
    /**
     * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
     */
    public boolean hasPacketOut() {
      return packetOut_ != null;
    }
    /**
     * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_out getPacketOut() {
      return packetOut_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.getDefaultInstance() : packetOut_;
    }
    /**
     * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_packet_outOrBuilder getPacketOutOrBuilder() {
      return getPacketOut();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (packetOut_ != null) {
        output.writeMessage(2, getPacketOut());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (packetOut_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPacketOut());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.PacketOut)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.PacketOut other = (org.opencord.voltha.openflow13.Openflow13.PacketOut) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasPacketOut() != other.hasPacketOut()) return false;
      if (hasPacketOut()) {
        if (!getPacketOut()
            .equals(other.getPacketOut())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasPacketOut()) {
        hash = (37 * hash) + PACKET_OUT_FIELD_NUMBER;
        hash = (53 * hash) + getPacketOut().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.PacketOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.PacketOut prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.PacketOut}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.PacketOut)
        org.opencord.voltha.openflow13.Openflow13.PacketOutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketOut_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketOut_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.PacketOut.class, org.opencord.voltha.openflow13.Openflow13.PacketOut.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.PacketOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (packetOutBuilder_ == null) {
          packetOut_ = null;
        } else {
          packetOut_ = null;
          packetOutBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_PacketOut_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.PacketOut getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.PacketOut.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.PacketOut build() {
        org.opencord.voltha.openflow13.Openflow13.PacketOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.PacketOut buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.PacketOut result = new org.opencord.voltha.openflow13.Openflow13.PacketOut(this);
        result.id_ = id_;
        if (packetOutBuilder_ == null) {
          result.packetOut_ = packetOut_;
        } else {
          result.packetOut_ = packetOutBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.PacketOut) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.PacketOut)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.PacketOut other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.PacketOut.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasPacketOut()) {
          mergePacketOut(other.getPacketOut());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.PacketOut parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.PacketOut) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private org.opencord.voltha.openflow13.Openflow13.ofp_packet_out packetOut_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_out, org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_outOrBuilder> packetOutBuilder_;
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public boolean hasPacketOut() {
        return packetOutBuilder_ != null || packetOut_ != null;
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_out getPacketOut() {
        if (packetOutBuilder_ == null) {
          return packetOut_ == null ? org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.getDefaultInstance() : packetOut_;
        } else {
          return packetOutBuilder_.getMessage();
        }
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public Builder setPacketOut(org.opencord.voltha.openflow13.Openflow13.ofp_packet_out value) {
        if (packetOutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packetOut_ = value;
          onChanged();
        } else {
          packetOutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public Builder setPacketOut(
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder builderForValue) {
        if (packetOutBuilder_ == null) {
          packetOut_ = builderForValue.build();
          onChanged();
        } else {
          packetOutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public Builder mergePacketOut(org.opencord.voltha.openflow13.Openflow13.ofp_packet_out value) {
        if (packetOutBuilder_ == null) {
          if (packetOut_ != null) {
            packetOut_ =
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.newBuilder(packetOut_).mergeFrom(value).buildPartial();
          } else {
            packetOut_ = value;
          }
          onChanged();
        } else {
          packetOutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public Builder clearPacketOut() {
        if (packetOutBuilder_ == null) {
          packetOut_ = null;
          onChanged();
        } else {
          packetOut_ = null;
          packetOutBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder getPacketOutBuilder() {
        
        onChanged();
        return getPacketOutFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_packet_outOrBuilder getPacketOutOrBuilder() {
        if (packetOutBuilder_ != null) {
          return packetOutBuilder_.getMessageOrBuilder();
        } else {
          return packetOut_ == null ?
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.getDefaultInstance() : packetOut_;
        }
      }
      /**
       * <code>.openflow_13.ofp_packet_out packet_out = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_packet_out, org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_outOrBuilder> 
          getPacketOutFieldBuilder() {
        if (packetOutBuilder_ == null) {
          packetOutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_packet_out, org.opencord.voltha.openflow13.Openflow13.ofp_packet_out.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_packet_outOrBuilder>(
                  getPacketOut(),
                  getParentForChildren(),
                  isClean());
          packetOut_ = null;
        }
        return packetOutBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.PacketOut)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.PacketOut)
    private static final org.opencord.voltha.openflow13.Openflow13.PacketOut DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.PacketOut();
    }

    public static org.opencord.voltha.openflow13.Openflow13.PacketOut getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PacketOut>
        PARSER = new com.google.protobuf.AbstractParser<PacketOut>() {
      @java.lang.Override
      public PacketOut parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PacketOut(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PacketOut> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PacketOut> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.PacketOut getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChangeEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:openflow_13.ChangeEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.openflow_13.ofp_port_status port_status = 2;</code>
     */
    boolean hasPortStatus();
    /**
     * <code>.openflow_13.ofp_port_status port_status = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_port_status getPortStatus();
    /**
     * <code>.openflow_13.ofp_port_status port_status = 2;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_port_statusOrBuilder getPortStatusOrBuilder();

    /**
     * <code>.openflow_13.ofp_error_msg error = 3;</code>
     */
    boolean hasError();
    /**
     * <code>.openflow_13.ofp_error_msg error = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_error_msg getError();
    /**
     * <code>.openflow_13.ofp_error_msg error = 3;</code>
     */
    org.opencord.voltha.openflow13.Openflow13.ofp_error_msgOrBuilder getErrorOrBuilder();

    public org.opencord.voltha.openflow13.Openflow13.ChangeEvent.EventCase getEventCase();
  }
  /**
   * Protobuf type {@code openflow_13.ChangeEvent}
   */
  public  static final class ChangeEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:openflow_13.ChangeEvent)
      ChangeEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChangeEvent.newBuilder() to construct.
    private ChangeEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChangeEvent() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChangeEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChangeEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder subBuilder = null;
              if (eventCase_ == 2) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_).toBuilder();
              }
              event_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_port_status.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 2;
              break;
            }
            case 26: {
              org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder subBuilder = null;
              if (eventCase_ == 3) {
                subBuilder = ((org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_).toBuilder();
              }
              event_ =
                  input.readMessage(org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_);
                event_ = subBuilder.buildPartial();
              }
              eventCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ChangeEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ChangeEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.openflow13.Openflow13.ChangeEvent.class, org.opencord.voltha.openflow13.Openflow13.ChangeEvent.Builder.class);
    }

    private int eventCase_ = 0;
    private java.lang.Object event_;
    public enum EventCase
        implements com.google.protobuf.Internal.EnumLite {
      PORT_STATUS(2),
      ERROR(3),
      EVENT_NOT_SET(0);
      private final int value;
      private EventCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventCase valueOf(int value) {
        return forNumber(value);
      }

      public static EventCase forNumber(int value) {
        switch (value) {
          case 2: return PORT_STATUS;
          case 3: return ERROR;
          case 0: return EVENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EventCase
    getEventCase() {
      return EventCase.forNumber(
          eventCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * LogicalDevice.id
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_STATUS_FIELD_NUMBER = 2;
    /**
     * <code>.openflow_13.ofp_port_status port_status = 2;</code>
     */
    public boolean hasPortStatus() {
      return eventCase_ == 2;
    }
    /**
     * <code>.openflow_13.ofp_port_status port_status = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_status getPortStatus() {
      if (eventCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_port_status port_status = 2;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_port_statusOrBuilder getPortStatusOrBuilder() {
      if (eventCase_ == 2) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance();
    }

    public static final int ERROR_FIELD_NUMBER = 3;
    /**
     * <code>.openflow_13.ofp_error_msg error = 3;</code>
     */
    public boolean hasError() {
      return eventCase_ == 3;
    }
    /**
     * <code>.openflow_13.ofp_error_msg error = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_error_msg getError() {
      if (eventCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance();
    }
    /**
     * <code>.openflow_13.ofp_error_msg error = 3;</code>
     */
    public org.opencord.voltha.openflow13.Openflow13.ofp_error_msgOrBuilder getErrorOrBuilder() {
      if (eventCase_ == 3) {
         return (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_;
      }
      return org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (eventCase_ == 2) {
        output.writeMessage(2, (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_);
      }
      if (eventCase_ == 3) {
        output.writeMessage(3, (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (eventCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_);
      }
      if (eventCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.openflow13.Openflow13.ChangeEvent)) {
        return super.equals(obj);
      }
      org.opencord.voltha.openflow13.Openflow13.ChangeEvent other = (org.opencord.voltha.openflow13.Openflow13.ChangeEvent) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getEventCase().equals(other.getEventCase())) return false;
      switch (eventCase_) {
        case 2:
          if (!getPortStatus()
              .equals(other.getPortStatus())) return false;
          break;
        case 3:
          if (!getError()
              .equals(other.getError())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      switch (eventCase_) {
        case 2:
          hash = (37 * hash) + PORT_STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getPortStatus().hashCode();
          break;
        case 3:
          hash = (37 * hash) + ERROR_FIELD_NUMBER;
          hash = (53 * hash) + getError().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.openflow13.Openflow13.ChangeEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code openflow_13.ChangeEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:openflow_13.ChangeEvent)
        org.opencord.voltha.openflow13.Openflow13.ChangeEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ChangeEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ChangeEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.openflow13.Openflow13.ChangeEvent.class, org.opencord.voltha.openflow13.Openflow13.ChangeEvent.Builder.class);
      }

      // Construct using org.opencord.voltha.openflow13.Openflow13.ChangeEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        eventCase_ = 0;
        event_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.openflow13.Openflow13.internal_static_openflow_13_ChangeEvent_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ChangeEvent getDefaultInstanceForType() {
        return org.opencord.voltha.openflow13.Openflow13.ChangeEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ChangeEvent build() {
        org.opencord.voltha.openflow13.Openflow13.ChangeEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.openflow13.Openflow13.ChangeEvent buildPartial() {
        org.opencord.voltha.openflow13.Openflow13.ChangeEvent result = new org.opencord.voltha.openflow13.Openflow13.ChangeEvent(this);
        result.id_ = id_;
        if (eventCase_ == 2) {
          if (portStatusBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = portStatusBuilder_.build();
          }
        }
        if (eventCase_ == 3) {
          if (errorBuilder_ == null) {
            result.event_ = event_;
          } else {
            result.event_ = errorBuilder_.build();
          }
        }
        result.eventCase_ = eventCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.openflow13.Openflow13.ChangeEvent) {
          return mergeFrom((org.opencord.voltha.openflow13.Openflow13.ChangeEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.openflow13.Openflow13.ChangeEvent other) {
        if (other == org.opencord.voltha.openflow13.Openflow13.ChangeEvent.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        switch (other.getEventCase()) {
          case PORT_STATUS: {
            mergePortStatus(other.getPortStatus());
            break;
          }
          case ERROR: {
            mergeError(other.getError());
            break;
          }
          case EVENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.openflow13.Openflow13.ChangeEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.openflow13.Openflow13.ChangeEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int eventCase_ = 0;
      private java.lang.Object event_;
      public EventCase
          getEventCase() {
        return EventCase.forNumber(
            eventCase_);
      }

      public Builder clearEvent() {
        eventCase_ = 0;
        event_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object id_ = "";
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LogicalDevice.id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port_status, org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_port_statusOrBuilder> portStatusBuilder_;
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public boolean hasPortStatus() {
        return eventCase_ == 2;
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_status getPortStatus() {
        if (portStatusBuilder_ == null) {
          if (eventCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance();
        } else {
          if (eventCase_ == 2) {
            return portStatusBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public Builder setPortStatus(org.opencord.voltha.openflow13.Openflow13.ofp_port_status value) {
        if (portStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          portStatusBuilder_.setMessage(value);
        }
        eventCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public Builder setPortStatus(
          org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder builderForValue) {
        if (portStatusBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          portStatusBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public Builder mergePortStatus(org.opencord.voltha.openflow13.Openflow13.ofp_port_status value) {
        if (portStatusBuilder_ == null) {
          if (eventCase_ == 2 &&
              event_ != org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance()) {
            event_ = org.opencord.voltha.openflow13.Openflow13.ofp_port_status.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 2) {
            portStatusBuilder_.mergeFrom(value);
          }
          portStatusBuilder_.setMessage(value);
        }
        eventCase_ = 2;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public Builder clearPortStatus() {
        if (portStatusBuilder_ == null) {
          if (eventCase_ == 2) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 2) {
            eventCase_ = 0;
            event_ = null;
          }
          portStatusBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder getPortStatusBuilder() {
        return getPortStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_port_statusOrBuilder getPortStatusOrBuilder() {
        if ((eventCase_ == 2) && (portStatusBuilder_ != null)) {
          return portStatusBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 2) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_port_status port_status = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_port_status, org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_port_statusOrBuilder> 
          getPortStatusFieldBuilder() {
        if (portStatusBuilder_ == null) {
          if (!(eventCase_ == 2)) {
            event_ = org.opencord.voltha.openflow13.Openflow13.ofp_port_status.getDefaultInstance();
          }
          portStatusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_port_status, org.opencord.voltha.openflow13.Openflow13.ofp_port_status.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_port_statusOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_port_status) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 2;
        onChanged();;
        return portStatusBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_error_msg, org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_error_msgOrBuilder> errorBuilder_;
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public boolean hasError() {
        return eventCase_ == 3;
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_msg getError() {
        if (errorBuilder_ == null) {
          if (eventCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance();
        } else {
          if (eventCase_ == 3) {
            return errorBuilder_.getMessage();
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public Builder setError(org.opencord.voltha.openflow13.Openflow13.ofp_error_msg value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }
        eventCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public Builder setError(
          org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder builderForValue) {
        if (errorBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public Builder mergeError(org.opencord.voltha.openflow13.Openflow13.ofp_error_msg value) {
        if (errorBuilder_ == null) {
          if (eventCase_ == 3 &&
              event_ != org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance()) {
            event_ = org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.newBuilder((org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 3) {
            errorBuilder_.mergeFrom(value);
          }
          errorBuilder_.setMessage(value);
        }
        eventCase_ = 3;
        return this;
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          if (eventCase_ == 3) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 3) {
            eventCase_ = 0;
            event_ = null;
          }
          errorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder getErrorBuilder() {
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      public org.opencord.voltha.openflow13.Openflow13.ofp_error_msgOrBuilder getErrorOrBuilder() {
        if ((eventCase_ == 3) && (errorBuilder_ != null)) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 3) {
            return (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_;
          }
          return org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance();
        }
      }
      /**
       * <code>.openflow_13.ofp_error_msg error = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.openflow13.Openflow13.ofp_error_msg, org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_error_msgOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          if (!(eventCase_ == 3)) {
            event_ = org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.getDefaultInstance();
          }
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.openflow13.Openflow13.ofp_error_msg, org.opencord.voltha.openflow13.Openflow13.ofp_error_msg.Builder, org.opencord.voltha.openflow13.Openflow13.ofp_error_msgOrBuilder>(
                  (org.opencord.voltha.openflow13.Openflow13.ofp_error_msg) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 3;
        onChanged();;
        return errorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:openflow_13.ChangeEvent)
    }

    // @@protoc_insertion_point(class_scope:openflow_13.ChangeEvent)
    private static final org.opencord.voltha.openflow13.Openflow13.ChangeEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.openflow13.Openflow13.ChangeEvent();
    }

    public static org.opencord.voltha.openflow13.Openflow13.ChangeEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChangeEvent>
        PARSER = new com.google.protobuf.AbstractParser<ChangeEvent>() {
      @java.lang.Override
      public ChangeEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChangeEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChangeEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChangeEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.openflow13.Openflow13.ChangeEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_hello_elem_header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_hello_elem_header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_hello_elem_versionbitmap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_hello_elem_versionbitmap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_hello_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_hello_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_switch_config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_switch_config_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_mod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_mod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_port_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_port_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_switch_features_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_switch_features_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_port_status_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_port_status_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_port_mod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_port_mod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_match_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_match_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_oxm_field_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_oxm_field_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_oxm_ofb_field_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_oxm_ofb_field_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_oxm_experimenter_field_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_oxm_experimenter_field_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_output_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_output_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_mpls_ttl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_mpls_ttl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_push_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_push_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_pop_mpls_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_pop_mpls_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_group_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_group_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_nw_ttl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_nw_ttl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_set_field_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_set_field_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_experimenter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_experimenter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_instruction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_instruction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_instruction_goto_table_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_instruction_goto_table_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_instruction_write_metadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_instruction_write_metadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_instruction_actions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_instruction_actions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_instruction_meter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_instruction_meter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_instruction_experimenter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_instruction_experimenter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_flow_mod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_flow_mod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_bucket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_bucket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_group_mod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_group_mod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_packet_out_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_packet_out_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_packet_in_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_packet_in_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_flow_removed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_flow_removed_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_band_header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_band_header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_band_drop_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_band_drop_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_band_dscp_remark_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_band_dscp_remark_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_band_experimenter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_band_experimenter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_mod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_mod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_error_msg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_error_msg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_error_experimenter_msg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_error_experimenter_msg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_multipart_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_multipart_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_multipart_reply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_multipart_reply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_desc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_desc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_flow_stats_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_flow_stats_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_flow_stats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_flow_stats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_aggregate_stats_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_aggregate_stats_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_aggregate_stats_reply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_aggregate_stats_reply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_feature_property_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_feature_property_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_feature_prop_instructions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_feature_prop_instructions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_feature_prop_next_tables_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_feature_prop_next_tables_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_feature_prop_actions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_feature_prop_actions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_feature_prop_oxm_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_feature_prop_oxm_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_feature_prop_experimenter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_feature_prop_experimenter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_features_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_features_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_table_stats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_table_stats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_port_stats_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_port_stats_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_port_stats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_port_stats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_group_stats_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_group_stats_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_bucket_counter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_bucket_counter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_group_stats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_group_stats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_group_desc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_group_desc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_group_entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_group_entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_group_features_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_group_features_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_multipart_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_multipart_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_band_stats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_band_stats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_stats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_stats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_config_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_features_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_features_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_meter_entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_meter_entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_experimenter_multipart_header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_experimenter_multipart_header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_experimenter_header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_experimenter_header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_prop_header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_prop_header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_prop_min_rate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_prop_min_rate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_prop_max_rate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_prop_max_rate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_prop_experimenter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_prop_experimenter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_packet_queue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_packet_queue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_get_config_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_get_config_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_get_config_reply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_get_config_reply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_action_set_queue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_action_set_queue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_stats_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_stats_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_queue_stats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_queue_stats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_role_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_role_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ofp_async_config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ofp_async_config_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_MeterModUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_MeterModUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_MeterStatsReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_MeterStatsReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_FlowTableUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_FlowTableUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_FlowGroupTableUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_FlowGroupTableUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_Flows_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_Flows_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_Meters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_Meters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_FlowGroups_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_FlowGroups_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_FlowChanges_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_FlowChanges_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_FlowGroupChanges_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_FlowGroupChanges_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_PacketIn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_PacketIn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_PacketOut_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_PacketOut_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_openflow_13_ChangeEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_openflow_13_ChangeEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037voltha_protos/openflow_13.proto\022\013openf" +
      "low_13\032\034google/api/annotations.proto\"O\n\n" +
      "ofp_header\022\017\n\007version\030\001 \001(\r\022#\n\004type\030\002 \001(" +
      "\0162\025.openflow_13.ofp_type\022\013\n\003xid\030\003 \001(\r\"\226\001" +
      "\n\025ofp_hello_elem_header\022.\n\004type\030\001 \001(\0162 ." +
      "openflow_13.ofp_hello_elem_type\022B\n\rversi" +
      "onbitmap\030\002 \001(\0132).openflow_13.ofp_hello_e" +
      "lem_versionbitmapH\000B\t\n\007element\"/\n\034ofp_he" +
      "llo_elem_versionbitmap\022\017\n\007bitmaps\030\002 \003(\r\"" +
      "A\n\tofp_hello\0224\n\010elements\030\001 \003(\0132\".openflo" +
      "w_13.ofp_hello_elem_header\"9\n\021ofp_switch" +
      "_config\022\r\n\005flags\030\001 \001(\r\022\025\n\rmiss_send_len\030" +
      "\002 \001(\r\"1\n\rofp_table_mod\022\020\n\010table_id\030\001 \001(\r" +
      "\022\016\n\006config\030\002 \001(\r\"\303\001\n\010ofp_port\022\017\n\007port_no" +
      "\030\001 \001(\r\022\017\n\007hw_addr\030\002 \003(\r\022\014\n\004name\030\003 \001(\t\022\016\n" +
      "\006config\030\004 \001(\r\022\r\n\005state\030\005 \001(\r\022\014\n\004curr\030\006 \001" +
      "(\r\022\022\n\nadvertised\030\007 \001(\r\022\021\n\tsupported\030\010 \001(" +
      "\r\022\014\n\004peer\030\t \001(\r\022\022\n\ncurr_speed\030\n \001(\r\022\021\n\tm" +
      "ax_speed\030\013 \001(\r\"{\n\023ofp_switch_features\022\023\n" +
      "\013datapath_id\030\001 \001(\004\022\021\n\tn_buffers\030\002 \001(\r\022\020\n" +
      "\010n_tables\030\003 \001(\r\022\024\n\014auxiliary_id\030\004 \001(\r\022\024\n" +
      "\014capabilities\030\005 \001(\r\"d\n\017ofp_port_status\022," +
      "\n\006reason\030\001 \001(\0162\034.openflow_13.ofp_port_re" +
      "ason\022#\n\004desc\030\002 \001(\0132\025.openflow_13.ofp_por" +
      "t\"a\n\014ofp_port_mod\022\017\n\007port_no\030\001 \001(\r\022\017\n\007hw" +
      "_addr\030\002 \003(\r\022\016\n\006config\030\003 \001(\r\022\014\n\004mask\030\004 \001(" +
      "\r\022\021\n\tadvertise\030\005 \001(\r\"f\n\tofp_match\022)\n\004typ" +
      "e\030\001 \001(\0162\033.openflow_13.ofp_match_type\022.\n\n" +
      "oxm_fields\030\002 \003(\0132\032.openflow_13.ofp_oxm_f" +
      "ield\"\303\001\n\rofp_oxm_field\022-\n\toxm_class\030\001 \001(" +
      "\0162\032.openflow_13.ofp_oxm_class\0223\n\tofb_fie" +
      "ld\030\004 \001(\0132\036.openflow_13.ofp_oxm_ofb_field" +
      "H\000\022E\n\022experimenter_field\030\005 \001(\0132\'.openflo" +
      "w_13.ofp_oxm_experimenter_fieldH\000B\007\n\005fie" +
      "ld\"\213\n\n\021ofp_oxm_ofb_field\022.\n\004type\030\001 \001(\0162 " +
      ".openflow_13.oxm_ofb_field_types\022\020\n\010has_" +
      "mask\030\002 \001(\010\022\016\n\004port\030\003 \001(\rH\000\022\027\n\rphysical_p" +
      "ort\030\004 \001(\rH\000\022\030\n\016table_metadata\030\005 \001(\004H\000\022\021\n" +
      "\007eth_dst\030\006 \001(\014H\000\022\021\n\007eth_src\030\007 \001(\014H\000\022\022\n\010e" +
      "th_type\030\010 \001(\rH\000\022\022\n\010vlan_vid\030\t \001(\rH\000\022\022\n\010v" +
      "lan_pcp\030\n \001(\rH\000\022\021\n\007ip_dscp\030\013 \001(\rH\000\022\020\n\006ip" +
      "_ecn\030\014 \001(\rH\000\022\022\n\010ip_proto\030\r \001(\rH\000\022\022\n\010ipv4" +
      "_src\030\016 \001(\rH\000\022\022\n\010ipv4_dst\030\017 \001(\rH\000\022\021\n\007tcp_" +
      "src\030\020 \001(\rH\000\022\021\n\007tcp_dst\030\021 \001(\rH\000\022\021\n\007udp_sr" +
      "c\030\022 \001(\rH\000\022\021\n\007udp_dst\030\023 \001(\rH\000\022\022\n\010sctp_src" +
      "\030\024 \001(\rH\000\022\022\n\010sctp_dst\030\025 \001(\rH\000\022\025\n\013icmpv4_t" +
      "ype\030\026 \001(\rH\000\022\025\n\013icmpv4_code\030\027 \001(\rH\000\022\020\n\006ar" +
      "p_op\030\030 \001(\rH\000\022\021\n\007arp_spa\030\031 \001(\rH\000\022\021\n\007arp_t" +
      "pa\030\032 \001(\rH\000\022\021\n\007arp_sha\030\033 \001(\014H\000\022\021\n\007arp_tha" +
      "\030\034 \001(\014H\000\022\022\n\010ipv6_src\030\035 \001(\014H\000\022\022\n\010ipv6_dst" +
      "\030\036 \001(\014H\000\022\025\n\013ipv6_flabel\030\037 \001(\rH\000\022\025\n\013icmpv" +
      "6_type\030  \001(\rH\000\022\025\n\013icmpv6_code\030! \001(\rH\000\022\030\n" +
      "\016ipv6_nd_target\030\" \001(\014H\000\022\025\n\013ipv6_nd_ssl\030#" +
      " \001(\014H\000\022\025\n\013ipv6_nd_tll\030$ \001(\014H\000\022\024\n\nmpls_la" +
      "bel\030% \001(\rH\000\022\021\n\007mpls_tc\030& \001(\rH\000\022\022\n\010mpls_b" +
      "os\030\' \001(\rH\000\022\022\n\010pbb_isid\030( \001(\rH\000\022\023\n\ttunnel" +
      "_id\030) \001(\004H\000\022\025\n\013ipv6_exthdr\030* \001(\rH\000\022\035\n\023ta" +
      "ble_metadata_mask\030i \001(\004H\001\022\026\n\014eth_dst_mas" +
      "k\030j \001(\014H\001\022\026\n\014eth_src_mask\030k \001(\014H\001\022\027\n\rvla" +
      "n_vid_mask\030m \001(\rH\001\022\027\n\ripv4_src_mask\030r \001(" +
      "\rH\001\022\027\n\ripv4_dst_mask\030s \001(\rH\001\022\026\n\014arp_spa_" +
      "mask\030} \001(\rH\001\022\026\n\014arp_tpa_mask\030~ \001(\rH\001\022\030\n\r" +
      "ipv6_src_mask\030\201\001 \001(\014H\001\022\030\n\ripv6_dst_mask\030" +
      "\202\001 \001(\014H\001\022\033\n\020ipv6_flabel_mask\030\203\001 \001(\rH\001\022\030\n" +
      "\rpbb_isid_mask\030\214\001 \001(\rH\001\022\031\n\016tunnel_id_mas" +
      "k\030\215\001 \001(\004H\001\022\033\n\020ipv6_exthdr_mask\030\216\001 \001(\rH\001B" +
      "\007\n\005valueB\006\n\004mask\"F\n\032ofp_oxm_experimenter" +
      "_field\022\022\n\noxm_header\030\001 \001(\r\022\024\n\014experiment" +
      "er\030\002 \001(\r\"\346\003\n\nofp_action\022*\n\004type\030\001 \001(\0162\034." +
      "openflow_13.ofp_action_type\0220\n\006output\030\002 " +
      "\001(\0132\036.openflow_13.ofp_action_outputH\000\0224\n" +
      "\010mpls_ttl\030\003 \001(\0132 .openflow_13.ofp_action" +
      "_mpls_ttlH\000\022,\n\004push\030\004 \001(\0132\034.openflow_13." +
      "ofp_action_pushH\000\0224\n\010pop_mpls\030\005 \001(\0132 .op" +
      "enflow_13.ofp_action_pop_mplsH\000\022.\n\005group" +
      "\030\006 \001(\0132\035.openflow_13.ofp_action_groupH\000\022" +
      "0\n\006nw_ttl\030\007 \001(\0132\036.openflow_13.ofp_action" +
      "_nw_ttlH\000\0226\n\tset_field\030\010 \001(\0132!.openflow_" +
      "13.ofp_action_set_fieldH\000\022<\n\014experimente" +
      "r\030\t \001(\0132$.openflow_13.ofp_action_experim" +
      "enterH\000B\010\n\006action\"2\n\021ofp_action_output\022\014" +
      "\n\004port\030\001 \001(\r\022\017\n\007max_len\030\002 \001(\r\"\'\n\023ofp_act" +
      "ion_mpls_ttl\022\020\n\010mpls_ttl\030\001 \001(\r\"$\n\017ofp_ac" +
      "tion_push\022\021\n\tethertype\030\001 \001(\r\"(\n\023ofp_acti" +
      "on_pop_mpls\022\021\n\tethertype\030\001 \001(\r\"$\n\020ofp_ac" +
      "tion_group\022\020\n\010group_id\030\001 \001(\r\"#\n\021ofp_acti" +
      "on_nw_ttl\022\016\n\006nw_ttl\030\001 \001(\r\"A\n\024ofp_action_" +
      "set_field\022)\n\005field\030\001 \001(\0132\032.openflow_13.o" +
      "fp_oxm_field\"=\n\027ofp_action_experimenter\022" +
      "\024\n\014experimenter\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\"\336\002\n\017" +
      "ofp_instruction\022\014\n\004type\030\001 \001(\r\022=\n\ngoto_ta" +
      "ble\030\002 \001(\0132\'.openflow_13.ofp_instruction_" +
      "goto_tableH\000\022E\n\016write_metadata\030\003 \001(\0132+.o" +
      "penflow_13.ofp_instruction_write_metadat" +
      "aH\000\0227\n\007actions\030\004 \001(\0132$.openflow_13.ofp_i" +
      "nstruction_actionsH\000\0223\n\005meter\030\005 \001(\0132\".op" +
      "enflow_13.ofp_instruction_meterH\000\022A\n\014exp" +
      "erimenter\030\006 \001(\0132).openflow_13.ofp_instru" +
      "ction_experimenterH\000B\006\n\004data\".\n\032ofp_inst" +
      "ruction_goto_table\022\020\n\010table_id\030\001 \001(\r\"I\n\036" +
      "ofp_instruction_write_metadata\022\020\n\010metada" +
      "ta\030\001 \001(\004\022\025\n\rmetadata_mask\030\002 \001(\004\"C\n\027ofp_i" +
      "nstruction_actions\022(\n\007actions\030\001 \003(\0132\027.op" +
      "enflow_13.ofp_action\")\n\025ofp_instruction_" +
      "meter\022\020\n\010meter_id\030\001 \001(\r\"B\n\034ofp_instructi" +
      "on_experimenter\022\024\n\014experimenter\030\001 \001(\r\022\014\n" +
      "\004data\030\002 \001(\014\"\331\002\n\014ofp_flow_mod\022\016\n\006cookie\030\001" +
      " \001(\004\022\023\n\013cookie_mask\030\002 \001(\004\022\020\n\010table_id\030\003 " +
      "\001(\r\0222\n\007command\030\004 \001(\0162!.openflow_13.ofp_f" +
      "low_mod_command\022\024\n\014idle_timeout\030\005 \001(\r\022\024\n" +
      "\014hard_timeout\030\006 \001(\r\022\020\n\010priority\030\007 \001(\r\022\021\n" +
      "\tbuffer_id\030\010 \001(\r\022\020\n\010out_port\030\t \001(\r\022\021\n\tou" +
      "t_group\030\n \001(\r\022\r\n\005flags\030\013 \001(\r\022%\n\005match\030\014 " +
      "\001(\0132\026.openflow_13.ofp_match\0222\n\014instructi" +
      "ons\030\r \003(\0132\034.openflow_13.ofp_instruction\"" +
      "o\n\nofp_bucket\022\016\n\006weight\030\001 \001(\r\022\022\n\nwatch_p" +
      "ort\030\002 \001(\r\022\023\n\013watch_group\030\003 \001(\r\022(\n\007action" +
      "s\030\004 \003(\0132\027.openflow_13.ofp_action\"\253\001\n\rofp" +
      "_group_mod\0223\n\007command\030\001 \001(\0162\".openflow_1" +
      "3.ofp_group_mod_command\022)\n\004type\030\002 \001(\0162\033." +
      "openflow_13.ofp_group_type\022\020\n\010group_id\030\003" +
      " \001(\r\022(\n\007buckets\030\004 \003(\0132\027.openflow_13.ofp_" +
      "bucket\"l\n\016ofp_packet_out\022\021\n\tbuffer_id\030\001 " +
      "\001(\r\022\017\n\007in_port\030\002 \001(\r\022(\n\007actions\030\003 \003(\0132\027." +
      "openflow_13.ofp_action\022\014\n\004data\030\004 \001(\014\"\254\001\n" +
      "\rofp_packet_in\022\021\n\tbuffer_id\030\001 \001(\r\0221\n\006rea" +
      "son\030\002 \001(\0162!.openflow_13.ofp_packet_in_re" +
      "ason\022\020\n\010table_id\030\003 \001(\r\022\016\n\006cookie\030\004 \001(\004\022%" +
      "\n\005match\030\005 \001(\0132\026.openflow_13.ofp_match\022\014\n" +
      "\004data\030\006 \001(\014\"\246\002\n\020ofp_flow_removed\022\016\n\006cook" +
      "ie\030\001 \001(\004\022\020\n\010priority\030\002 \001(\r\0224\n\006reason\030\003 \001" +
      "(\0162$.openflow_13.ofp_flow_removed_reason" +
      "\022\020\n\010table_id\030\004 \001(\r\022\024\n\014duration_sec\030\005 \001(\r" +
      "\022\025\n\rduration_nsec\030\006 \001(\r\022\024\n\014idle_timeout\030" +
      "\007 \001(\r\022\024\n\014hard_timeout\030\010 \001(\r\022\024\n\014packet_co" +
      "unt\030\t \001(\004\022\022\n\nbyte_count\030\n \001(\004\022%\n\005match\030y" +
      " \001(\0132\026.openflow_13.ofp_match\"\245\002\n\025ofp_met" +
      "er_band_header\022.\n\004type\030\001 \001(\0162 .openflow_" +
      "13.ofp_meter_band_type\022\014\n\004rate\030\002 \001(\r\022\022\n\n" +
      "burst_size\030\003 \001(\r\0220\n\004drop\030\004 \001(\0132 .openflo" +
      "w_13.ofp_meter_band_dropH\000\022>\n\013dscp_remar" +
      "k\030\005 \001(\0132\'.openflow_13.ofp_meter_band_dsc" +
      "p_remarkH\000\022@\n\014experimenter\030\006 \001(\0132(.openf" +
      "low_13.ofp_meter_band_experimenterH\000B\006\n\004" +
      "data\"\025\n\023ofp_meter_band_drop\"0\n\032ofp_meter" +
      "_band_dscp_remark\022\022\n\nprec_level\030\001 \001(\r\"3\n" +
      "\033ofp_meter_band_experimenter\022\024\n\014experime" +
      "nter\030\001 \001(\r\"\230\001\n\rofp_meter_mod\0223\n\007command\030" +
      "\001 \001(\0162\".openflow_13.ofp_meter_mod_comman" +
      "d\022\r\n\005flags\030\002 \001(\r\022\020\n\010meter_id\030\003 \001(\r\0221\n\005ba" +
      "nds\030\004 \003(\0132\".openflow_13.ofp_meter_band_h" +
      "eader\"b\n\rofp_error_msg\022\'\n\006header\030\001 \001(\0132\027" +
      ".openflow_13.ofp_header\022\014\n\004type\030\002 \001(\r\022\014\n" +
      "\004code\030\003 \001(\r\022\014\n\004data\030\004 \001(\014\"`\n\032ofp_error_e" +
      "xperimenter_msg\022\014\n\004type\030\001 \001(\r\022\020\n\010exp_typ" +
      "e\030\002 \001(\r\022\024\n\014experimenter\030\003 \001(\r\022\014\n\004data\030\004 " +
      "\001(\014\"c\n\025ofp_multipart_request\022-\n\004type\030\001 \001" +
      "(\0162\037.openflow_13.ofp_multipart_type\022\r\n\005f" +
      "lags\030\002 \001(\r\022\014\n\004body\030\003 \001(\014\"a\n\023ofp_multipar" +
      "t_reply\022-\n\004type\030\001 \001(\0162\037.openflow_13.ofp_" +
      "multipart_type\022\r\n\005flags\030\002 \001(\r\022\014\n\004body\030\003 " +
      "\001(\014\"c\n\010ofp_desc\022\020\n\010mfr_desc\030\001 \001(\t\022\017\n\007hw_" +
      "desc\030\002 \001(\t\022\017\n\007sw_desc\030\003 \001(\t\022\022\n\nserial_nu" +
      "m\030\004 \001(\t\022\017\n\007dp_desc\030\005 \001(\t\"\233\001\n\026ofp_flow_st" +
      "ats_request\022\020\n\010table_id\030\001 \001(\r\022\020\n\010out_por" +
      "t\030\002 \001(\r\022\021\n\tout_group\030\003 \001(\r\022\016\n\006cookie\030\004 \001" +
      "(\004\022\023\n\013cookie_mask\030\005 \001(\004\022%\n\005match\030\006 \001(\0132\026" +
      ".openflow_13.ofp_match\"\275\002\n\016ofp_flow_stat" +
      "s\022\n\n\002id\030\016 \001(\004\022\020\n\010table_id\030\001 \001(\r\022\024\n\014durat" +
      "ion_sec\030\002 \001(\r\022\025\n\rduration_nsec\030\003 \001(\r\022\020\n\010" +
      "priority\030\004 \001(\r\022\024\n\014idle_timeout\030\005 \001(\r\022\024\n\014" +
      "hard_timeout\030\006 \001(\r\022\r\n\005flags\030\007 \001(\r\022\016\n\006coo" +
      "kie\030\010 \001(\004\022\024\n\014packet_count\030\t \001(\004\022\022\n\nbyte_" +
      "count\030\n \001(\004\022%\n\005match\030\014 \001(\0132\026.openflow_13" +
      ".ofp_match\0222\n\014instructions\030\r \003(\0132\034.openf" +
      "low_13.ofp_instruction\"\240\001\n\033ofp_aggregate" +
      "_stats_request\022\020\n\010table_id\030\001 \001(\r\022\020\n\010out_" +
      "port\030\002 \001(\r\022\021\n\tout_group\030\003 \001(\r\022\016\n\006cookie\030" +
      "\004 \001(\004\022\023\n\013cookie_mask\030\005 \001(\004\022%\n\005match\030\006 \001(" +
      "\0132\026.openflow_13.ofp_match\"Y\n\031ofp_aggrega" +
      "te_stats_reply\022\024\n\014packet_count\030\001 \001(\004\022\022\n\n" +
      "byte_count\030\002 \001(\004\022\022\n\nflow_count\030\003 \001(\r\"\261\003\n" +
      "\032ofp_table_feature_property\0226\n\004type\030\001 \001(" +
      "\0162(.openflow_13.ofp_table_feature_prop_t" +
      "ype\022H\n\014instructions\030\002 \001(\01320.openflow_13." +
      "ofp_table_feature_prop_instructionsH\000\022F\n" +
      "\013next_tables\030\003 \001(\0132/.openflow_13.ofp_tab" +
      "le_feature_prop_next_tablesH\000\022>\n\007actions" +
      "\030\004 \001(\0132+.openflow_13.ofp_table_feature_p" +
      "rop_actionsH\000\0226\n\003oxm\030\005 \001(\0132\'.openflow_13" +
      ".ofp_table_feature_prop_oxmH\000\022H\n\014experim" +
      "enter\030\006 \001(\01320.openflow_13.ofp_table_feat" +
      "ure_prop_experimenterH\000B\007\n\005value\"Y\n#ofp_" +
      "table_feature_prop_instructions\0222\n\014instr" +
      "uctions\030\001 \003(\0132\034.openflow_13.ofp_instruct" +
      "ion\"<\n\"ofp_table_feature_prop_next_table" +
      "s\022\026\n\016next_table_ids\030\001 \003(\r\"J\n\036ofp_table_f" +
      "eature_prop_actions\022(\n\007actions\030\001 \003(\0132\027.o" +
      "penflow_13.ofp_action\"-\n\032ofp_table_featu" +
      "re_prop_oxm\022\017\n\007oxm_ids\030\003 \003(\r\"h\n#ofp_tabl" +
      "e_feature_prop_experimenter\022\024\n\014experimen" +
      "ter\030\002 \001(\r\022\020\n\010exp_type\030\003 \001(\r\022\031\n\021experimen" +
      "ter_data\030\004 \003(\r\"\306\001\n\022ofp_table_features\022\020\n" +
      "\010table_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\026\n\016metadat" +
      "a_match\030\003 \001(\004\022\026\n\016metadata_write\030\004 \001(\004\022\016\n" +
      "\006config\030\005 \001(\r\022\023\n\013max_entries\030\006 \001(\r\022;\n\npr" +
      "operties\030\007 \003(\0132\'.openflow_13.ofp_table_f" +
      "eature_property\"f\n\017ofp_table_stats\022\020\n\010ta" +
      "ble_id\030\001 \001(\r\022\024\n\014active_count\030\002 \001(\r\022\024\n\014lo" +
      "okup_count\030\003 \001(\004\022\025\n\rmatched_count\030\004 \001(\004\"" +
      ")\n\026ofp_port_stats_request\022\017\n\007port_no\030\001 \001" +
      "(\r\"\273\002\n\016ofp_port_stats\022\017\n\007port_no\030\001 \001(\r\022\022" +
      "\n\nrx_packets\030\002 \001(\004\022\022\n\ntx_packets\030\003 \001(\004\022\020" +
      "\n\010rx_bytes\030\004 \001(\004\022\020\n\010tx_bytes\030\005 \001(\004\022\022\n\nrx" +
      "_dropped\030\006 \001(\004\022\022\n\ntx_dropped\030\007 \001(\004\022\021\n\trx" +
      "_errors\030\010 \001(\004\022\021\n\ttx_errors\030\t \001(\004\022\024\n\014rx_f" +
      "rame_err\030\n \001(\004\022\023\n\013rx_over_err\030\013 \001(\004\022\022\n\nr" +
      "x_crc_err\030\014 \001(\004\022\022\n\ncollisions\030\r \001(\004\022\024\n\014d" +
      "uration_sec\030\016 \001(\r\022\025\n\rduration_nsec\030\017 \001(\r" +
      "\"+\n\027ofp_group_stats_request\022\020\n\010group_id\030" +
      "\001 \001(\r\">\n\022ofp_bucket_counter\022\024\n\014packet_co" +
      "unt\030\001 \001(\004\022\022\n\nbyte_count\030\002 \001(\004\"\304\001\n\017ofp_gr" +
      "oup_stats\022\020\n\010group_id\030\001 \001(\r\022\021\n\tref_count" +
      "\030\002 \001(\r\022\024\n\014packet_count\030\003 \001(\004\022\022\n\nbyte_cou" +
      "nt\030\004 \001(\004\022\024\n\014duration_sec\030\005 \001(\r\022\025\n\rdurati" +
      "on_nsec\030\006 \001(\r\0225\n\014bucket_stats\030\007 \003(\0132\037.op" +
      "enflow_13.ofp_bucket_counter\"w\n\016ofp_grou" +
      "p_desc\022)\n\004type\030\001 \001(\0162\033.openflow_13.ofp_g" +
      "roup_type\022\020\n\010group_id\030\002 \001(\r\022(\n\007buckets\030\003" +
      " \003(\0132\027.openflow_13.ofp_bucket\"i\n\017ofp_gro" +
      "up_entry\022)\n\004desc\030\001 \001(\0132\033.openflow_13.ofp" +
      "_group_desc\022+\n\005stats\030\002 \001(\0132\034.openflow_13" +
      ".ofp_group_stats\"^\n\022ofp_group_features\022\r" +
      "\n\005types\030\001 \001(\r\022\024\n\014capabilities\030\002 \001(\r\022\022\n\nm" +
      "ax_groups\030\003 \003(\r\022\017\n\007actions\030\004 \003(\r\"/\n\033ofp_" +
      "meter_multipart_request\022\020\n\010meter_id\030\001 \001(" +
      "\r\"J\n\024ofp_meter_band_stats\022\031\n\021packet_band" +
      "_count\030\001 \001(\004\022\027\n\017byte_band_count\030\002 \001(\004\"\313\001" +
      "\n\017ofp_meter_stats\022\020\n\010meter_id\030\001 \001(\r\022\022\n\nf" +
      "low_count\030\002 \001(\r\022\027\n\017packet_in_count\030\003 \001(\004" +
      "\022\025\n\rbyte_in_count\030\004 \001(\004\022\024\n\014duration_sec\030" +
      "\005 \001(\r\022\025\n\rduration_nsec\030\006 \001(\r\0225\n\nband_sta" +
      "ts\030\007 \003(\0132!.openflow_13.ofp_meter_band_st" +
      "ats\"f\n\020ofp_meter_config\022\r\n\005flags\030\001 \001(\r\022\020" +
      "\n\010meter_id\030\002 \001(\r\0221\n\005bands\030\003 \003(\0132\".openfl" +
      "ow_13.ofp_meter_band_header\"w\n\022ofp_meter" +
      "_features\022\021\n\tmax_meter\030\001 \001(\r\022\022\n\nband_typ" +
      "es\030\002 \001(\r\022\024\n\014capabilities\030\003 \001(\r\022\021\n\tmax_ba" +
      "nds\030\004 \001(\r\022\021\n\tmax_color\030\005 \001(\r\"m\n\017ofp_mete" +
      "r_entry\022-\n\006config\030\001 \001(\0132\035.openflow_13.of" +
      "p_meter_config\022+\n\005stats\030\002 \001(\0132\034.openflow" +
      "_13.ofp_meter_stats\"Y\n!ofp_experimenter_" +
      "multipart_header\022\024\n\014experimenter\030\001 \001(\r\022\020" +
      "\n\010exp_type\030\002 \001(\r\022\014\n\004data\030\003 \001(\014\"O\n\027ofp_ex" +
      "perimenter_header\022\024\n\014experimenter\030\001 \001(\r\022" +
      "\020\n\010exp_type\030\002 \001(\r\022\014\n\004data\030\003 \001(\014\"6\n\025ofp_q" +
      "ueue_prop_header\022\020\n\010property\030\001 \001(\r\022\013\n\003le" +
      "n\030\002 \001(\r\"`\n\027ofp_queue_prop_min_rate\0227\n\013pr" +
      "op_header\030\001 \001(\0132\".openflow_13.ofp_queue_" +
      "prop_header\022\014\n\004rate\030\002 \001(\r\"`\n\027ofp_queue_p" +
      "rop_max_rate\0227\n\013prop_header\030\001 \001(\0132\".open" +
      "flow_13.ofp_queue_prop_header\022\014\n\004rate\030\002 " +
      "\001(\r\"z\n\033ofp_queue_prop_experimenter\0227\n\013pr" +
      "op_header\030\001 \001(\0132\".openflow_13.ofp_queue_" +
      "prop_header\022\024\n\014experimenter\030\002 \001(\r\022\014\n\004dat" +
      "a\030\003 \001(\014\"j\n\020ofp_packet_queue\022\020\n\010queue_id\030" +
      "\001 \001(\r\022\014\n\004port\030\002 \001(\r\0226\n\nproperties\030\004 \003(\0132" +
      "\".openflow_13.ofp_queue_prop_header\",\n\034o" +
      "fp_queue_get_config_request\022\014\n\004port\030\001 \001(" +
      "\r\"Y\n\032ofp_queue_get_config_reply\022\014\n\004port\030" +
      "\001 \001(\r\022-\n\006queues\030\002 \003(\0132\035.openflow_13.ofp_" +
      "packet_queue\"6\n\024ofp_action_set_queue\022\014\n\004" +
      "type\030\001 \001(\r\022\020\n\010queue_id\030\003 \001(\r\"<\n\027ofp_queu" +
      "e_stats_request\022\017\n\007port_no\030\001 \001(\r\022\020\n\010queu" +
      "e_id\030\002 \001(\r\"\232\001\n\017ofp_queue_stats\022\017\n\007port_n" +
      "o\030\001 \001(\r\022\020\n\010queue_id\030\002 \001(\r\022\020\n\010tx_bytes\030\003 " +
      "\001(\004\022\022\n\ntx_packets\030\004 \001(\004\022\021\n\ttx_errors\030\005 \001" +
      "(\004\022\024\n\014duration_sec\030\006 \001(\r\022\025\n\rduration_nse" +
      "c\030\007 \001(\r\"Y\n\020ofp_role_request\022.\n\004role\030\001 \001(" +
      "\0162 .openflow_13.ofp_controller_role\022\025\n\rg" +
      "eneration_id\030\002 \001(\004\"_\n\020ofp_async_config\022\026" +
      "\n\016packet_in_mask\030\001 \003(\r\022\030\n\020port_status_ma" +
      "sk\030\002 \003(\r\022\031\n\021flow_removed_mask\030\003 \003(\r\"X\n\016M" +
      "eterModUpdate\022\n\n\002id\030\001 \001(\t\022-\n\tmeter_mod\030\002" +
      " \001(\0132\032.openflow_13.ofp_meter_mod\022\013\n\003xid\030" +
      "\003 \001(\r\"D\n\017MeterStatsReply\0221\n\013meter_stats\030" +
      "\001 \003(\0132\034.openflow_13.ofp_meter_stats\"W\n\017F" +
      "lowTableUpdate\022\n\n\002id\030\001 \001(\t\022+\n\010flow_mod\030\002" +
      " \001(\0132\031.openflow_13.ofp_flow_mod\022\013\n\003xid\030\003" +
      " \001(\r\"^\n\024FlowGroupTableUpdate\022\n\n\002id\030\001 \001(\t" +
      "\022-\n\tgroup_mod\030\002 \001(\0132\032.openflow_13.ofp_gr" +
      "oup_mod\022\013\n\003xid\030\003 \001(\r\"3\n\005Flows\022*\n\005items\030\001" +
      " \003(\0132\033.openflow_13.ofp_flow_stats\"5\n\006Met" +
      "ers\022+\n\005items\030\001 \003(\0132\034.openflow_13.ofp_met" +
      "er_entry\"9\n\nFlowGroups\022+\n\005items\030\001 \003(\0132\034." +
      "openflow_13.ofp_group_entry\"X\n\013FlowChang" +
      "es\022\"\n\006to_add\030\001 \001(\0132\022.openflow_13.Flows\022%" +
      "\n\tto_remove\030\002 \001(\0132\022.openflow_13.Flows\"\223\001" +
      "\n\020FlowGroupChanges\022\'\n\006to_add\030\001 \001(\0132\027.ope" +
      "nflow_13.FlowGroups\022*\n\tto_remove\030\002 \001(\0132\027" +
      ".openflow_13.FlowGroups\022*\n\tto_update\030\003 \001" +
      "(\0132\027.openflow_13.FlowGroups\"E\n\010PacketIn\022" +
      "\n\n\002id\030\001 \001(\t\022-\n\tpacket_in\030\002 \001(\0132\032.openflo" +
      "w_13.ofp_packet_in\"H\n\tPacketOut\022\n\n\002id\030\001 " +
      "\001(\t\022/\n\npacket_out\030\002 \001(\0132\033.openflow_13.of" +
      "p_packet_out\"\204\001\n\013ChangeEvent\022\n\n\002id\030\001 \001(\t" +
      "\0223\n\013port_status\030\002 \001(\0132\034.openflow_13.ofp_" +
      "port_statusH\000\022+\n\005error\030\003 \001(\0132\032.openflow_" +
      "13.ofp_error_msgH\000B\007\n\005event*\325\001\n\013ofp_port" +
      "_no\022\020\n\014OFPP_INVALID\020\000\022\020\n\010OFPP_MAX\020\200\376\377\377\007\022" +
      "\024\n\014OFPP_IN_PORT\020\370\377\377\377\007\022\022\n\nOFPP_TABLE\020\371\377\377\377" +
      "\007\022\023\n\013OFPP_NORMAL\020\372\377\377\377\007\022\022\n\nOFPP_FLOOD\020\373\377\377" +
      "\377\007\022\020\n\010OFPP_ALL\020\374\377\377\377\007\022\027\n\017OFPP_CONTROLLER\020" +
      "\375\377\377\377\007\022\022\n\nOFPP_LOCAL\020\376\377\377\377\007\022\020\n\010OFPP_ANY\020\377\377" +
      "\377\377\007*\310\005\n\010ofp_type\022\016\n\nOFPT_HELLO\020\000\022\016\n\nOFPT" +
      "_ERROR\020\001\022\025\n\021OFPT_ECHO_REQUEST\020\002\022\023\n\017OFPT_" +
      "ECHO_REPLY\020\003\022\025\n\021OFPT_EXPERIMENTER\020\004\022\031\n\025O" +
      "FPT_FEATURES_REQUEST\020\005\022\027\n\023OFPT_FEATURES_" +
      "REPLY\020\006\022\033\n\027OFPT_GET_CONFIG_REQUEST\020\007\022\031\n\025" +
      "OFPT_GET_CONFIG_REPLY\020\010\022\023\n\017OFPT_SET_CONF" +
      "IG\020\t\022\022\n\016OFPT_PACKET_IN\020\n\022\025\n\021OFPT_FLOW_RE" +
      "MOVED\020\013\022\024\n\020OFPT_PORT_STATUS\020\014\022\023\n\017OFPT_PA" +
      "CKET_OUT\020\r\022\021\n\rOFPT_FLOW_MOD\020\016\022\022\n\016OFPT_GR" +
      "OUP_MOD\020\017\022\021\n\rOFPT_PORT_MOD\020\020\022\022\n\016OFPT_TAB" +
      "LE_MOD\020\021\022\032\n\026OFPT_MULTIPART_REQUEST\020\022\022\030\n\024" +
      "OFPT_MULTIPART_REPLY\020\023\022\030\n\024OFPT_BARRIER_R" +
      "EQUEST\020\024\022\026\n\022OFPT_BARRIER_REPLY\020\025\022!\n\035OFPT" +
      "_QUEUE_GET_CONFIG_REQUEST\020\026\022\037\n\033OFPT_QUEU" +
      "E_GET_CONFIG_REPLY\020\027\022\025\n\021OFPT_ROLE_REQUES" +
      "T\020\030\022\023\n\017OFPT_ROLE_REPLY\020\031\022\032\n\026OFPT_GET_ASY" +
      "NC_REQUEST\020\032\022\030\n\024OFPT_GET_ASYNC_REPLY\020\033\022\022" +
      "\n\016OFPT_SET_ASYNC\020\034\022\022\n\016OFPT_METER_MOD\020\035*C" +
      "\n\023ofp_hello_elem_type\022\022\n\016OFPHET_INVALID\020" +
      "\000\022\030\n\024OFPHET_VERSIONBITMAP\020\001*e\n\020ofp_confi" +
      "g_flags\022\024\n\020OFPC_FRAG_NORMAL\020\000\022\022\n\016OFPC_FR" +
      "AG_DROP\020\001\022\023\n\017OFPC_FRAG_REASM\020\002\022\022\n\016OFPC_F" +
      "RAG_MASK\020\003*@\n\020ofp_table_config\022\021\n\rOFPTC_" +
      "INVALID\020\000\022\031\n\025OFPTC_DEPRECATED_MASK\020\003*>\n\t" +
      "ofp_table\022\021\n\rOFPTT_INVALID\020\000\022\016\n\tOFPTT_MA" +
      "X\020\376\001\022\016\n\tOFPTT_ALL\020\377\001*\273\001\n\020ofp_capabilitie" +
      "s\022\020\n\014OFPC_INVALID\020\000\022\023\n\017OFPC_FLOW_STATS\020\001" +
      "\022\024\n\020OFPC_TABLE_STATS\020\002\022\023\n\017OFPC_PORT_STAT" +
      "S\020\004\022\024\n\020OFPC_GROUP_STATS\020\010\022\021\n\rOFPC_IP_REA" +
      "SM\020 \022\024\n\020OFPC_QUEUE_STATS\020@\022\026\n\021OFPC_PORT_" +
      "BLOCKED\020\200\002*v\n\017ofp_port_config\022\021\n\rOFPPC_I" +
      "NVALID\020\000\022\023\n\017OFPPC_PORT_DOWN\020\001\022\021\n\rOFPPC_N" +
      "O_RECV\020\004\022\020\n\014OFPPC_NO_FWD\020 \022\026\n\022OFPPC_NO_P" +
      "ACKET_IN\020@*[\n\016ofp_port_state\022\021\n\rOFPPS_IN" +
      "VALID\020\000\022\023\n\017OFPPS_LINK_DOWN\020\001\022\021\n\rOFPPS_BL" +
      "OCKED\020\002\022\016\n\nOFPPS_LIVE\020\004*\335\002\n\021ofp_port_fea" +
      "tures\022\021\n\rOFPPF_INVALID\020\000\022\021\n\rOFPPF_10MB_H" +
      "D\020\001\022\021\n\rOFPPF_10MB_FD\020\002\022\022\n\016OFPPF_100MB_HD" +
      "\020\004\022\022\n\016OFPPF_100MB_FD\020\010\022\020\n\014OFPPF_1GB_HD\020\020" +
      "\022\020\n\014OFPPF_1GB_FD\020 \022\021\n\rOFPPF_10GB_FD\020@\022\022\n" +
      "\rOFPPF_40GB_FD\020\200\001\022\023\n\016OFPPF_100GB_FD\020\200\002\022\021" +
      "\n\014OFPPF_1TB_FD\020\200\004\022\020\n\013OFPPF_OTHER\020\200\010\022\021\n\014O" +
      "FPPF_COPPER\020\200\020\022\020\n\013OFPPF_FIBER\020\200 \022\022\n\rOFPP" +
      "F_AUTONEG\020\200@\022\021\n\013OFPPF_PAUSE\020\200\200\001\022\026\n\020OFPPF" +
      "_PAUSE_ASYM\020\200\200\002*D\n\017ofp_port_reason\022\r\n\tOF" +
      "PPR_ADD\020\000\022\020\n\014OFPPR_DELETE\020\001\022\020\n\014OFPPR_MOD" +
      "IFY\020\002*3\n\016ofp_match_type\022\022\n\016OFPMT_STANDAR" +
      "D\020\000\022\r\n\tOFPMT_OXM\020\001*k\n\rofp_oxm_class\022\020\n\014O" +
      "FPXMC_NXM_0\020\000\022\020\n\014OFPXMC_NXM_1\020\001\022\033\n\025OFPXM" +
      "C_OPENFLOW_BASIC\020\200\200\002\022\031\n\023OFPXMC_EXPERIMEN" +
      "TER\020\377\377\003*\220\010\n\023oxm_ofb_field_types\022\026\n\022OFPXM" +
      "T_OFB_IN_PORT\020\000\022\032\n\026OFPXMT_OFB_IN_PHY_POR" +
      "T\020\001\022\027\n\023OFPXMT_OFB_METADATA\020\002\022\026\n\022OFPXMT_O" +
      "FB_ETH_DST\020\003\022\026\n\022OFPXMT_OFB_ETH_SRC\020\004\022\027\n\023" +
      "OFPXMT_OFB_ETH_TYPE\020\005\022\027\n\023OFPXMT_OFB_VLAN" +
      "_VID\020\006\022\027\n\023OFPXMT_OFB_VLAN_PCP\020\007\022\026\n\022OFPXM" +
      "T_OFB_IP_DSCP\020\010\022\025\n\021OFPXMT_OFB_IP_ECN\020\t\022\027" +
      "\n\023OFPXMT_OFB_IP_PROTO\020\n\022\027\n\023OFPXMT_OFB_IP" +
      "V4_SRC\020\013\022\027\n\023OFPXMT_OFB_IPV4_DST\020\014\022\026\n\022OFP" +
      "XMT_OFB_TCP_SRC\020\r\022\026\n\022OFPXMT_OFB_TCP_DST\020" +
      "\016\022\026\n\022OFPXMT_OFB_UDP_SRC\020\017\022\026\n\022OFPXMT_OFB_" +
      "UDP_DST\020\020\022\027\n\023OFPXMT_OFB_SCTP_SRC\020\021\022\027\n\023OF" +
      "PXMT_OFB_SCTP_DST\020\022\022\032\n\026OFPXMT_OFB_ICMPV4" +
      "_TYPE\020\023\022\032\n\026OFPXMT_OFB_ICMPV4_CODE\020\024\022\025\n\021O" +
      "FPXMT_OFB_ARP_OP\020\025\022\026\n\022OFPXMT_OFB_ARP_SPA" +
      "\020\026\022\026\n\022OFPXMT_OFB_ARP_TPA\020\027\022\026\n\022OFPXMT_OFB" +
      "_ARP_SHA\020\030\022\026\n\022OFPXMT_OFB_ARP_THA\020\031\022\027\n\023OF" +
      "PXMT_OFB_IPV6_SRC\020\032\022\027\n\023OFPXMT_OFB_IPV6_D" +
      "ST\020\033\022\032\n\026OFPXMT_OFB_IPV6_FLABEL\020\034\022\032\n\026OFPX" +
      "MT_OFB_ICMPV6_TYPE\020\035\022\032\n\026OFPXMT_OFB_ICMPV" +
      "6_CODE\020\036\022\035\n\031OFPXMT_OFB_IPV6_ND_TARGET\020\037\022" +
      "\032\n\026OFPXMT_OFB_IPV6_ND_SLL\020 \022\032\n\026OFPXMT_OF" +
      "B_IPV6_ND_TLL\020!\022\031\n\025OFPXMT_OFB_MPLS_LABEL" +
      "\020\"\022\026\n\022OFPXMT_OFB_MPLS_TC\020#\022\027\n\023OFPXMT_OFB" +
      "_MPLS_BOS\020$\022\027\n\023OFPXMT_OFB_PBB_ISID\020%\022\030\n\024" +
      "OFPXMT_OFB_TUNNEL_ID\020&\022\032\n\026OFPXMT_OFB_IPV" +
      "6_EXTHDR\020\'*3\n\013ofp_vlan_id\022\017\n\013OFPVID_NONE" +
      "\020\000\022\023\n\016OFPVID_PRESENT\020\200 *\311\001\n\024ofp_ipv6exth" +
      "dr_flags\022\022\n\016OFPIEH_INVALID\020\000\022\021\n\rOFPIEH_N" +
      "ONEXT\020\001\022\016\n\nOFPIEH_ESP\020\002\022\017\n\013OFPIEH_AUTH\020\004" +
      "\022\017\n\013OFPIEH_DEST\020\010\022\017\n\013OFPIEH_FRAG\020\020\022\021\n\rOF" +
      "PIEH_ROUTER\020 \022\016\n\nOFPIEH_HOP\020@\022\021\n\014OFPIEH_" +
      "UNREP\020\200\001\022\021\n\014OFPIEH_UNSEQ\020\200\002*\374\002\n\017ofp_acti" +
      "on_type\022\020\n\014OFPAT_OUTPUT\020\000\022\026\n\022OFPAT_COPY_" +
      "TTL_OUT\020\013\022\025\n\021OFPAT_COPY_TTL_IN\020\014\022\026\n\022OFPA" +
      "T_SET_MPLS_TTL\020\017\022\026\n\022OFPAT_DEC_MPLS_TTL\020\020",
      "\022\023\n\017OFPAT_PUSH_VLAN\020\021\022\022\n\016OFPAT_POP_VLAN\020" +
      "\022\022\023\n\017OFPAT_PUSH_MPLS\020\023\022\022\n\016OFPAT_POP_MPLS" +
      "\020\024\022\023\n\017OFPAT_SET_QUEUE\020\025\022\017\n\013OFPAT_GROUP\020\026" +
      "\022\024\n\020OFPAT_SET_NW_TTL\020\027\022\024\n\020OFPAT_DEC_NW_T" +
      "TL\020\030\022\023\n\017OFPAT_SET_FIELD\020\031\022\022\n\016OFPAT_PUSH_" +
      "PBB\020\032\022\021\n\rOFPAT_POP_PBB\020\033\022\030\n\022OFPAT_EXPERI" +
      "MENTER\020\377\377\003*V\n\026ofp_controller_max_len\022\022\n\016" +
      "OFPCML_INVALID\020\000\022\020\n\nOFPCML_MAX\020\345\377\003\022\026\n\020OF" +
      "PCML_NO_BUFFER\020\377\377\003*\317\001\n\024ofp_instruction_t" +
      "ype\022\021\n\rOFPIT_INVALID\020\000\022\024\n\020OFPIT_GOTO_TAB" +
      "LE\020\001\022\030\n\024OFPIT_WRITE_METADATA\020\002\022\027\n\023OFPIT_" +
      "WRITE_ACTIONS\020\003\022\027\n\023OFPIT_APPLY_ACTIONS\020\004" +
      "\022\027\n\023OFPIT_CLEAR_ACTIONS\020\005\022\017\n\013OFPIT_METER" +
      "\020\006\022\030\n\022OFPIT_EXPERIMENTER\020\377\377\003*{\n\024ofp_flow" +
      "_mod_command\022\r\n\tOFPFC_ADD\020\000\022\020\n\014OFPFC_MOD" +
      "IFY\020\001\022\027\n\023OFPFC_MODIFY_STRICT\020\002\022\020\n\014OFPFC_" +
      "DELETE\020\003\022\027\n\023OFPFC_DELETE_STRICT\020\004*\243\001\n\022of" +
      "p_flow_mod_flags\022\021\n\rOFPFF_INVALID\020\000\022\027\n\023O" +
      "FPFF_SEND_FLOW_REM\020\001\022\027\n\023OFPFF_CHECK_OVER" +
      "LAP\020\002\022\026\n\022OFPFF_RESET_COUNTS\020\004\022\027\n\023OFPFF_N" +
      "O_PKT_COUNTS\020\010\022\027\n\023OFPFF_NO_BYT_COUNTS\020\020*" +
      "S\n\tofp_group\022\020\n\014OFPG_INVALID\020\000\022\020\n\010OFPG_M" +
      "AX\020\200\376\377\377\007\022\020\n\010OFPG_ALL\020\374\377\377\377\007\022\020\n\010OFPG_ANY\020\377" +
      "\377\377\377\007*J\n\025ofp_group_mod_command\022\r\n\tOFPGC_A" +
      "DD\020\000\022\020\n\014OFPGC_MODIFY\020\001\022\020\n\014OFPGC_DELETE\020\002" +
      "*S\n\016ofp_group_type\022\r\n\tOFPGT_ALL\020\000\022\020\n\014OFP" +
      "GT_SELECT\020\001\022\022\n\016OFPGT_INDIRECT\020\002\022\014\n\010OFPGT" +
      "_FF\020\003*P\n\024ofp_packet_in_reason\022\021\n\rOFPR_NO" +
      "_MATCH\020\000\022\017\n\013OFPR_ACTION\020\001\022\024\n\020OFPR_INVALI" +
      "D_TTL\020\002*\213\001\n\027ofp_flow_removed_reason\022\026\n\022O" +
      "FPRR_IDLE_TIMEOUT\020\000\022\026\n\022OFPRR_HARD_TIMEOU" +
      "T\020\001\022\020\n\014OFPRR_DELETE\020\002\022\026\n\022OFPRR_GROUP_DEL" +
      "ETE\020\003\022\026\n\022OFPRR_METER_DELETE\020\004*n\n\tofp_met" +
      "er\022\r\n\tOFPM_ZERO\020\000\022\020\n\010OFPM_MAX\020\200\200\374\377\007\022\025\n\rO" +
      "FPM_SLOWPATH\020\375\377\377\377\007\022\027\n\017OFPM_CONTROLLER\020\376\377" +
      "\377\377\007\022\020\n\010OFPM_ALL\020\377\377\377\377\007*m\n\023ofp_meter_band_" +
      "type\022\022\n\016OFPMBT_INVALID\020\000\022\017\n\013OFPMBT_DROP\020" +
      "\001\022\026\n\022OFPMBT_DSCP_REMARK\020\002\022\031\n\023OFPMBT_EXPE" +
      "RIMENTER\020\377\377\003*J\n\025ofp_meter_mod_command\022\r\n" +
      "\tOFPMC_ADD\020\000\022\020\n\014OFPMC_MODIFY\020\001\022\020\n\014OFPMC_" +
      "DELETE\020\002*g\n\017ofp_meter_flags\022\021\n\rOFPMF_INV" +
      "ALID\020\000\022\016\n\nOFPMF_KBPS\020\001\022\017\n\013OFPMF_PKTPS\020\002\022" +
      "\017\n\013OFPMF_BURST\020\004\022\017\n\013OFPMF_STATS\020\010*\244\003\n\016of" +
      "p_error_type\022\026\n\022OFPET_HELLO_FAILED\020\000\022\025\n\021" +
      "OFPET_BAD_REQUEST\020\001\022\024\n\020OFPET_BAD_ACTION\020" +
      "\002\022\031\n\025OFPET_BAD_INSTRUCTION\020\003\022\023\n\017OFPET_BA" +
      "D_MATCH\020\004\022\031\n\025OFPET_FLOW_MOD_FAILED\020\005\022\032\n\026" +
      "OFPET_GROUP_MOD_FAILED\020\006\022\031\n\025OFPET_PORT_M" +
      "OD_FAILED\020\007\022\032\n\026OFPET_TABLE_MOD_FAILED\020\010\022" +
      "\031\n\025OFPET_QUEUE_OP_FAILED\020\t\022\036\n\032OFPET_SWIT" +
      "CH_CONFIG_FAILED\020\n\022\035\n\031OFPET_ROLE_REQUEST" +
      "_FAILED\020\013\022\032\n\026OFPET_METER_MOD_FAILED\020\014\022\037\n" +
      "\033OFPET_TABLE_FEATURES_FAILED\020\r\022\030\n\022OFPET_" +
      "EXPERIMENTER\020\377\377\003*B\n\025ofp_hello_failed_cod" +
      "e\022\027\n\023OFPHFC_INCOMPATIBLE\020\000\022\020\n\014OFPHFC_EPE" +
      "RM\020\001*\355\002\n\024ofp_bad_request_code\022\026\n\022OFPBRC_" +
      "BAD_VERSION\020\000\022\023\n\017OFPBRC_BAD_TYPE\020\001\022\030\n\024OF" +
      "PBRC_BAD_MULTIPART\020\002\022\033\n\027OFPBRC_BAD_EXPER" +
      "IMENTER\020\003\022\027\n\023OFPBRC_BAD_EXP_TYPE\020\004\022\020\n\014OF" +
      "PBRC_EPERM\020\005\022\022\n\016OFPBRC_BAD_LEN\020\006\022\027\n\023OFPB" +
      "RC_BUFFER_EMPTY\020\007\022\031\n\025OFPBRC_BUFFER_UNKNO" +
      "WN\020\010\022\027\n\023OFPBRC_BAD_TABLE_ID\020\t\022\023\n\017OFPBRC_" +
      "IS_SLAVE\020\n\022\023\n\017OFPBRC_BAD_PORT\020\013\022\025\n\021OFPBR" +
      "C_BAD_PACKET\020\014\022$\n OFPBRC_MULTIPART_BUFFE" +
      "R_OVERFLOW\020\r*\234\003\n\023ofp_bad_action_code\022\023\n\017" +
      "OFPBAC_BAD_TYPE\020\000\022\022\n\016OFPBAC_BAD_LEN\020\001\022\033\n" +
      "\027OFPBAC_BAD_EXPERIMENTER\020\002\022\027\n\023OFPBAC_BAD" +
      "_EXP_TYPE\020\003\022\027\n\023OFPBAC_BAD_OUT_PORT\020\004\022\027\n\023" +
      "OFPBAC_BAD_ARGUMENT\020\005\022\020\n\014OFPBAC_EPERM\020\006\022" +
      "\023\n\017OFPBAC_TOO_MANY\020\007\022\024\n\020OFPBAC_BAD_QUEUE" +
      "\020\010\022\030\n\024OFPBAC_BAD_OUT_GROUP\020\t\022\035\n\031OFPBAC_M" +
      "ATCH_INCONSISTENT\020\n\022\034\n\030OFPBAC_UNSUPPORTE" +
      "D_ORDER\020\013\022\022\n\016OFPBAC_BAD_TAG\020\014\022\027\n\023OFPBAC_" +
      "BAD_SET_TYPE\020\r\022\026\n\022OFPBAC_BAD_SET_LEN\020\016\022\033" +
      "\n\027OFPBAC_BAD_SET_ARGUMENT\020\017*\372\001\n\030ofp_bad_" +
      "instruction_code\022\027\n\023OFPBIC_UNKNOWN_INST\020" +
      "\000\022\025\n\021OFPBIC_UNSUP_INST\020\001\022\027\n\023OFPBIC_BAD_T" +
      "ABLE_ID\020\002\022\031\n\025OFPBIC_UNSUP_METADATA\020\003\022\036\n\032" +
      "OFPBIC_UNSUP_METADATA_MASK\020\004\022\033\n\027OFPBIC_B" +
      "AD_EXPERIMENTER\020\005\022\027\n\023OFPBIC_BAD_EXP_TYPE" +
      "\020\006\022\022\n\016OFPBIC_BAD_LEN\020\007\022\020\n\014OFPBIC_EPERM\020\010" +
      "*\245\002\n\022ofp_bad_match_code\022\023\n\017OFPBMC_BAD_TY" +
      "PE\020\000\022\022\n\016OFPBMC_BAD_LEN\020\001\022\022\n\016OFPBMC_BAD_T" +
      "AG\020\002\022\033\n\027OFPBMC_BAD_DL_ADDR_MASK\020\003\022\033\n\027OFP" +
      "BMC_BAD_NW_ADDR_MASK\020\004\022\030\n\024OFPBMC_BAD_WIL" +
      "DCARDS\020\005\022\024\n\020OFPBMC_BAD_FIELD\020\006\022\024\n\020OFPBMC" +
      "_BAD_VALUE\020\007\022\023\n\017OFPBMC_BAD_MASK\020\010\022\025\n\021OFP" +
      "BMC_BAD_PREREQ\020\t\022\024\n\020OFPBMC_DUP_FIELD\020\n\022\020" +
      "\n\014OFPBMC_EPERM\020\013*\322\001\n\030ofp_flow_mod_failed" +
      "_code\022\023\n\017OFPFMFC_UNKNOWN\020\000\022\026\n\022OFPFMFC_TA" +
      "BLE_FULL\020\001\022\030\n\024OFPFMFC_BAD_TABLE_ID\020\002\022\023\n\017" +
      "OFPFMFC_OVERLAP\020\003\022\021\n\rOFPFMFC_EPERM\020\004\022\027\n\023" +
      "OFPFMFC_BAD_TIMEOUT\020\005\022\027\n\023OFPFMFC_BAD_COM" +
      "MAND\020\006\022\025\n\021OFPFMFC_BAD_FLAGS\020\007*\241\003\n\031ofp_gr" +
      "oup_mod_failed_code\022\030\n\024OFPGMFC_GROUP_EXI" +
      "STS\020\000\022\031\n\025OFPGMFC_INVALID_GROUP\020\001\022\036\n\032OFPG" +
      "MFC_WEIGHT_UNSUPPORTED\020\002\022\031\n\025OFPGMFC_OUT_" +
      "OF_GROUPS\020\003\022\032\n\026OFPGMFC_OUT_OF_BUCKETS\020\004\022" +
      " \n\034OFPGMFC_CHAINING_UNSUPPORTED\020\005\022\035\n\031OFP" +
      "GMFC_WATCH_UNSUPPORTED\020\006\022\020\n\014OFPGMFC_LOOP" +
      "\020\007\022\031\n\025OFPGMFC_UNKNOWN_GROUP\020\010\022\031\n\025OFPGMFC" +
      "_CHAINED_GROUP\020\t\022\024\n\020OFPGMFC_BAD_TYPE\020\n\022\027" +
      "\n\023OFPGMFC_BAD_COMMAND\020\013\022\026\n\022OFPGMFC_BAD_B" +
      "UCKET\020\014\022\025\n\021OFPGMFC_BAD_WATCH\020\r\022\021\n\rOFPGMF" +
      "C_EPERM\020\016*\217\001\n\030ofp_port_mod_failed_code\022\024" +
      "\n\020OFPPMFC_BAD_PORT\020\000\022\027\n\023OFPPMFC_BAD_HW_A" +
      "DDR\020\001\022\026\n\022OFPPMFC_BAD_CONFIG\020\002\022\031\n\025OFPPMFC" +
      "_BAD_ADVERTISE\020\003\022\021\n\rOFPPMFC_EPERM\020\004*]\n\031o" +
      "fp_table_mod_failed_code\022\025\n\021OFPTMFC_BAD_" +
      "TABLE\020\000\022\026\n\022OFPTMFC_BAD_CONFIG\020\001\022\021\n\rOFPTM" +
      "FC_EPERM\020\002*Z\n\030ofp_queue_op_failed_code\022\024" +
      "\n\020OFPQOFC_BAD_PORT\020\000\022\025\n\021OFPQOFC_BAD_QUEU" +
      "E\020\001\022\021\n\rOFPQOFC_EPERM\020\002*^\n\035ofp_switch_con" +
      "fig_failed_code\022\025\n\021OFPSCFC_BAD_FLAGS\020\000\022\023" +
      "\n\017OFPSCFC_BAD_LEN\020\001\022\021\n\rOFPSCFC_EPERM\020\002*Z" +
      "\n\034ofp_role_request_failed_code\022\021\n\rOFPRRF" +
      "C_STALE\020\000\022\021\n\rOFPRRFC_UNSUP\020\001\022\024\n\020OFPRRFC_" +
      "BAD_ROLE\020\002*\305\002\n\031ofp_meter_mod_failed_code" +
      "\022\023\n\017OFPMMFC_UNKNOWN\020\000\022\030\n\024OFPMMFC_METER_E" +
      "XISTS\020\001\022\031\n\025OFPMMFC_INVALID_METER\020\002\022\031\n\025OF" +
      "PMMFC_UNKNOWN_METER\020\003\022\027\n\023OFPMMFC_BAD_COM" +
      "MAND\020\004\022\025\n\021OFPMMFC_BAD_FLAGS\020\005\022\024\n\020OFPMMFC" +
      "_BAD_RATE\020\006\022\025\n\021OFPMMFC_BAD_BURST\020\007\022\024\n\020OF" +
      "PMMFC_BAD_BAND\020\010\022\033\n\027OFPMMFC_BAD_BAND_DET" +
      "AIL\020\t\022\031\n\025OFPMMFC_OUT_OF_METERS\020\n\022\030\n\024OFPM" +
      "MFC_OUT_OF_BANDS\020\013*\251\001\n\036ofp_table_feature" +
      "s_failed_code\022\025\n\021OFPTFFC_BAD_TABLE\020\000\022\030\n\024" +
      "OFPTFFC_BAD_METADATA\020\001\022\024\n\020OFPTFFC_BAD_TY" +
      "PE\020\002\022\023\n\017OFPTFFC_BAD_LEN\020\003\022\030\n\024OFPTFFC_BAD" +
      "_ARGUMENT\020\004\022\021\n\rOFPTFFC_EPERM\020\005*\316\002\n\022ofp_m" +
      "ultipart_type\022\016\n\nOFPMP_DESC\020\000\022\016\n\nOFPMP_F" +
      "LOW\020\001\022\023\n\017OFPMP_AGGREGATE\020\002\022\017\n\013OFPMP_TABL" +
      "E\020\003\022\024\n\020OFPMP_PORT_STATS\020\004\022\017\n\013OFPMP_QUEUE" +
      "\020\005\022\017\n\013OFPMP_GROUP\020\006\022\024\n\020OFPMP_GROUP_DESC\020" +
      "\007\022\030\n\024OFPMP_GROUP_FEATURES\020\010\022\017\n\013OFPMP_MET" +
      "ER\020\t\022\026\n\022OFPMP_METER_CONFIG\020\n\022\030\n\024OFPMP_ME" +
      "TER_FEATURES\020\013\022\030\n\024OFPMP_TABLE_FEATURES\020\014" +
      "\022\023\n\017OFPMP_PORT_DESC\020\r\022\030\n\022OFPMP_EXPERIMEN" +
      "TER\020\377\377\003*J\n\033ofp_multipart_request_flags\022\026" +
      "\n\022OFPMPF_REQ_INVALID\020\000\022\023\n\017OFPMPF_REQ_MOR" +
      "E\020\001*L\n\031ofp_multipart_reply_flags\022\030\n\024OFPM" +
      "PF_REPLY_INVALID\020\000\022\025\n\021OFPMPF_REPLY_MORE\020" +
      "\001*\344\003\n\033ofp_table_feature_prop_type\022\030\n\024OFP" +
      "TFPT_INSTRUCTIONS\020\000\022\035\n\031OFPTFPT_INSTRUCTI" +
      "ONS_MISS\020\001\022\027\n\023OFPTFPT_NEXT_TABLES\020\002\022\034\n\030O" +
      "FPTFPT_NEXT_TABLES_MISS\020\003\022\031\n\025OFPTFPT_WRI" +
      "TE_ACTIONS\020\004\022\036\n\032OFPTFPT_WRITE_ACTIONS_MI" +
      "SS\020\005\022\031\n\025OFPTFPT_APPLY_ACTIONS\020\006\022\036\n\032OFPTF" +
      "PT_APPLY_ACTIONS_MISS\020\007\022\021\n\rOFPTFPT_MATCH" +
      "\020\010\022\025\n\021OFPTFPT_WILDCARDS\020\n\022\032\n\026OFPTFPT_WRI" +
      "TE_SETFIELD\020\014\022\037\n\033OFPTFPT_WRITE_SETFIELD_" +
      "MISS\020\r\022\032\n\026OFPTFPT_APPLY_SETFIELD\020\016\022\037\n\033OF" +
      "PTFPT_APPLY_SETFIELD_MISS\020\017\022\032\n\024OFPTFPT_E" +
      "XPERIMENTER\020\376\377\003\022\037\n\031OFPTFPT_EXPERIMENTER_" +
      "MISS\020\377\377\003*\223\001\n\026ofp_group_capabilities\022\022\n\016O" +
      "FPGFC_INVALID\020\000\022\030\n\024OFPGFC_SELECT_WEIGHT\020" +
      "\001\022\032\n\026OFPGFC_SELECT_LIVENESS\020\002\022\023\n\017OFPGFC_" +
      "CHAINING\020\004\022\032\n\026OFPGFC_CHAINING_CHECKS\020\010*k" +
      "\n\024ofp_queue_properties\022\021\n\rOFPQT_INVALID\020" +
      "\000\022\022\n\016OFPQT_MIN_RATE\020\001\022\022\n\016OFPQT_MAX_RATE\020" +
      "\002\022\030\n\022OFPQT_EXPERIMENTER\020\377\377\003*q\n\023ofp_contr" +
      "oller_role\022\027\n\023OFPCR_ROLE_NOCHANGE\020\000\022\024\n\020O" +
      "FPCR_ROLE_EQUAL\020\001\022\025\n\021OFPCR_ROLE_MASTER\020\002" +
      "\022\024\n\020OFPCR_ROLE_SLAVE\020\003BU\n\036org.opencord.v" +
      "oltha.openflow13Z3github.com/opencord/vo" +
      "ltha-protos/v4/go/openflow_13b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
        });
    internal_static_openflow_13_ofp_header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_openflow_13_ofp_header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_header_descriptor,
        new java.lang.String[] { "Version", "Type", "Xid", });
    internal_static_openflow_13_ofp_hello_elem_header_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_openflow_13_ofp_hello_elem_header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_hello_elem_header_descriptor,
        new java.lang.String[] { "Type", "Versionbitmap", "Element", });
    internal_static_openflow_13_ofp_hello_elem_versionbitmap_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_openflow_13_ofp_hello_elem_versionbitmap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_hello_elem_versionbitmap_descriptor,
        new java.lang.String[] { "Bitmaps", });
    internal_static_openflow_13_ofp_hello_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_openflow_13_ofp_hello_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_hello_descriptor,
        new java.lang.String[] { "Elements", });
    internal_static_openflow_13_ofp_switch_config_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_openflow_13_ofp_switch_config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_switch_config_descriptor,
        new java.lang.String[] { "Flags", "MissSendLen", });
    internal_static_openflow_13_ofp_table_mod_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_openflow_13_ofp_table_mod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_mod_descriptor,
        new java.lang.String[] { "TableId", "Config", });
    internal_static_openflow_13_ofp_port_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_openflow_13_ofp_port_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_port_descriptor,
        new java.lang.String[] { "PortNo", "HwAddr", "Name", "Config", "State", "Curr", "Advertised", "Supported", "Peer", "CurrSpeed", "MaxSpeed", });
    internal_static_openflow_13_ofp_switch_features_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_openflow_13_ofp_switch_features_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_switch_features_descriptor,
        new java.lang.String[] { "DatapathId", "NBuffers", "NTables", "AuxiliaryId", "Capabilities", });
    internal_static_openflow_13_ofp_port_status_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_openflow_13_ofp_port_status_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_port_status_descriptor,
        new java.lang.String[] { "Reason", "Desc", });
    internal_static_openflow_13_ofp_port_mod_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_openflow_13_ofp_port_mod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_port_mod_descriptor,
        new java.lang.String[] { "PortNo", "HwAddr", "Config", "Mask", "Advertise", });
    internal_static_openflow_13_ofp_match_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_openflow_13_ofp_match_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_match_descriptor,
        new java.lang.String[] { "Type", "OxmFields", });
    internal_static_openflow_13_ofp_oxm_field_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_openflow_13_ofp_oxm_field_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_oxm_field_descriptor,
        new java.lang.String[] { "OxmClass", "OfbField", "ExperimenterField", "Field", });
    internal_static_openflow_13_ofp_oxm_ofb_field_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_openflow_13_ofp_oxm_ofb_field_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_oxm_ofb_field_descriptor,
        new java.lang.String[] { "Type", "HasMask", "Port", "PhysicalPort", "TableMetadata", "EthDst", "EthSrc", "EthType", "VlanVid", "VlanPcp", "IpDscp", "IpEcn", "IpProto", "Ipv4Src", "Ipv4Dst", "TcpSrc", "TcpDst", "UdpSrc", "UdpDst", "SctpSrc", "SctpDst", "Icmpv4Type", "Icmpv4Code", "ArpOp", "ArpSpa", "ArpTpa", "ArpSha", "ArpTha", "Ipv6Src", "Ipv6Dst", "Ipv6Flabel", "Icmpv6Type", "Icmpv6Code", "Ipv6NdTarget", "Ipv6NdSsl", "Ipv6NdTll", "MplsLabel", "MplsTc", "MplsBos", "PbbIsid", "TunnelId", "Ipv6Exthdr", "TableMetadataMask", "EthDstMask", "EthSrcMask", "VlanVidMask", "Ipv4SrcMask", "Ipv4DstMask", "ArpSpaMask", "ArpTpaMask", "Ipv6SrcMask", "Ipv6DstMask", "Ipv6FlabelMask", "PbbIsidMask", "TunnelIdMask", "Ipv6ExthdrMask", "Value", "Mask", });
    internal_static_openflow_13_ofp_oxm_experimenter_field_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_openflow_13_ofp_oxm_experimenter_field_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_oxm_experimenter_field_descriptor,
        new java.lang.String[] { "OxmHeader", "Experimenter", });
    internal_static_openflow_13_ofp_action_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_openflow_13_ofp_action_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_descriptor,
        new java.lang.String[] { "Type", "Output", "MplsTtl", "Push", "PopMpls", "Group", "NwTtl", "SetField", "Experimenter", "Action", });
    internal_static_openflow_13_ofp_action_output_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_openflow_13_ofp_action_output_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_output_descriptor,
        new java.lang.String[] { "Port", "MaxLen", });
    internal_static_openflow_13_ofp_action_mpls_ttl_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_openflow_13_ofp_action_mpls_ttl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_mpls_ttl_descriptor,
        new java.lang.String[] { "MplsTtl", });
    internal_static_openflow_13_ofp_action_push_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_openflow_13_ofp_action_push_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_push_descriptor,
        new java.lang.String[] { "Ethertype", });
    internal_static_openflow_13_ofp_action_pop_mpls_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_openflow_13_ofp_action_pop_mpls_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_pop_mpls_descriptor,
        new java.lang.String[] { "Ethertype", });
    internal_static_openflow_13_ofp_action_group_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_openflow_13_ofp_action_group_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_group_descriptor,
        new java.lang.String[] { "GroupId", });
    internal_static_openflow_13_ofp_action_nw_ttl_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_openflow_13_ofp_action_nw_ttl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_nw_ttl_descriptor,
        new java.lang.String[] { "NwTtl", });
    internal_static_openflow_13_ofp_action_set_field_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_openflow_13_ofp_action_set_field_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_set_field_descriptor,
        new java.lang.String[] { "Field", });
    internal_static_openflow_13_ofp_action_experimenter_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_openflow_13_ofp_action_experimenter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_experimenter_descriptor,
        new java.lang.String[] { "Experimenter", "Data", });
    internal_static_openflow_13_ofp_instruction_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_openflow_13_ofp_instruction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_instruction_descriptor,
        new java.lang.String[] { "Type", "GotoTable", "WriteMetadata", "Actions", "Meter", "Experimenter", "Data", });
    internal_static_openflow_13_ofp_instruction_goto_table_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_openflow_13_ofp_instruction_goto_table_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_instruction_goto_table_descriptor,
        new java.lang.String[] { "TableId", });
    internal_static_openflow_13_ofp_instruction_write_metadata_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_openflow_13_ofp_instruction_write_metadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_instruction_write_metadata_descriptor,
        new java.lang.String[] { "Metadata", "MetadataMask", });
    internal_static_openflow_13_ofp_instruction_actions_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_openflow_13_ofp_instruction_actions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_instruction_actions_descriptor,
        new java.lang.String[] { "Actions", });
    internal_static_openflow_13_ofp_instruction_meter_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_openflow_13_ofp_instruction_meter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_instruction_meter_descriptor,
        new java.lang.String[] { "MeterId", });
    internal_static_openflow_13_ofp_instruction_experimenter_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_openflow_13_ofp_instruction_experimenter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_instruction_experimenter_descriptor,
        new java.lang.String[] { "Experimenter", "Data", });
    internal_static_openflow_13_ofp_flow_mod_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_openflow_13_ofp_flow_mod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_flow_mod_descriptor,
        new java.lang.String[] { "Cookie", "CookieMask", "TableId", "Command", "IdleTimeout", "HardTimeout", "Priority", "BufferId", "OutPort", "OutGroup", "Flags", "Match", "Instructions", });
    internal_static_openflow_13_ofp_bucket_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_openflow_13_ofp_bucket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_bucket_descriptor,
        new java.lang.String[] { "Weight", "WatchPort", "WatchGroup", "Actions", });
    internal_static_openflow_13_ofp_group_mod_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_openflow_13_ofp_group_mod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_group_mod_descriptor,
        new java.lang.String[] { "Command", "Type", "GroupId", "Buckets", });
    internal_static_openflow_13_ofp_packet_out_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_openflow_13_ofp_packet_out_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_packet_out_descriptor,
        new java.lang.String[] { "BufferId", "InPort", "Actions", "Data", });
    internal_static_openflow_13_ofp_packet_in_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_openflow_13_ofp_packet_in_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_packet_in_descriptor,
        new java.lang.String[] { "BufferId", "Reason", "TableId", "Cookie", "Match", "Data", });
    internal_static_openflow_13_ofp_flow_removed_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_openflow_13_ofp_flow_removed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_flow_removed_descriptor,
        new java.lang.String[] { "Cookie", "Priority", "Reason", "TableId", "DurationSec", "DurationNsec", "IdleTimeout", "HardTimeout", "PacketCount", "ByteCount", "Match", });
    internal_static_openflow_13_ofp_meter_band_header_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_openflow_13_ofp_meter_band_header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_band_header_descriptor,
        new java.lang.String[] { "Type", "Rate", "BurstSize", "Drop", "DscpRemark", "Experimenter", "Data", });
    internal_static_openflow_13_ofp_meter_band_drop_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_openflow_13_ofp_meter_band_drop_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_band_drop_descriptor,
        new java.lang.String[] { });
    internal_static_openflow_13_ofp_meter_band_dscp_remark_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_openflow_13_ofp_meter_band_dscp_remark_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_band_dscp_remark_descriptor,
        new java.lang.String[] { "PrecLevel", });
    internal_static_openflow_13_ofp_meter_band_experimenter_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_openflow_13_ofp_meter_band_experimenter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_band_experimenter_descriptor,
        new java.lang.String[] { "Experimenter", });
    internal_static_openflow_13_ofp_meter_mod_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_openflow_13_ofp_meter_mod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_mod_descriptor,
        new java.lang.String[] { "Command", "Flags", "MeterId", "Bands", });
    internal_static_openflow_13_ofp_error_msg_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_openflow_13_ofp_error_msg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_error_msg_descriptor,
        new java.lang.String[] { "Header", "Type", "Code", "Data", });
    internal_static_openflow_13_ofp_error_experimenter_msg_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_openflow_13_ofp_error_experimenter_msg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_error_experimenter_msg_descriptor,
        new java.lang.String[] { "Type", "ExpType", "Experimenter", "Data", });
    internal_static_openflow_13_ofp_multipart_request_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_openflow_13_ofp_multipart_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_multipart_request_descriptor,
        new java.lang.String[] { "Type", "Flags", "Body", });
    internal_static_openflow_13_ofp_multipart_reply_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_openflow_13_ofp_multipart_reply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_multipart_reply_descriptor,
        new java.lang.String[] { "Type", "Flags", "Body", });
    internal_static_openflow_13_ofp_desc_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_openflow_13_ofp_desc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_desc_descriptor,
        new java.lang.String[] { "MfrDesc", "HwDesc", "SwDesc", "SerialNum", "DpDesc", });
    internal_static_openflow_13_ofp_flow_stats_request_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_openflow_13_ofp_flow_stats_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_flow_stats_request_descriptor,
        new java.lang.String[] { "TableId", "OutPort", "OutGroup", "Cookie", "CookieMask", "Match", });
    internal_static_openflow_13_ofp_flow_stats_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_openflow_13_ofp_flow_stats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_flow_stats_descriptor,
        new java.lang.String[] { "Id", "TableId", "DurationSec", "DurationNsec", "Priority", "IdleTimeout", "HardTimeout", "Flags", "Cookie", "PacketCount", "ByteCount", "Match", "Instructions", });
    internal_static_openflow_13_ofp_aggregate_stats_request_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_openflow_13_ofp_aggregate_stats_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_aggregate_stats_request_descriptor,
        new java.lang.String[] { "TableId", "OutPort", "OutGroup", "Cookie", "CookieMask", "Match", });
    internal_static_openflow_13_ofp_aggregate_stats_reply_descriptor =
      getDescriptor().getMessageTypes().get(48);
    internal_static_openflow_13_ofp_aggregate_stats_reply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_aggregate_stats_reply_descriptor,
        new java.lang.String[] { "PacketCount", "ByteCount", "FlowCount", });
    internal_static_openflow_13_ofp_table_feature_property_descriptor =
      getDescriptor().getMessageTypes().get(49);
    internal_static_openflow_13_ofp_table_feature_property_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_feature_property_descriptor,
        new java.lang.String[] { "Type", "Instructions", "NextTables", "Actions", "Oxm", "Experimenter", "Value", });
    internal_static_openflow_13_ofp_table_feature_prop_instructions_descriptor =
      getDescriptor().getMessageTypes().get(50);
    internal_static_openflow_13_ofp_table_feature_prop_instructions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_feature_prop_instructions_descriptor,
        new java.lang.String[] { "Instructions", });
    internal_static_openflow_13_ofp_table_feature_prop_next_tables_descriptor =
      getDescriptor().getMessageTypes().get(51);
    internal_static_openflow_13_ofp_table_feature_prop_next_tables_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_feature_prop_next_tables_descriptor,
        new java.lang.String[] { "NextTableIds", });
    internal_static_openflow_13_ofp_table_feature_prop_actions_descriptor =
      getDescriptor().getMessageTypes().get(52);
    internal_static_openflow_13_ofp_table_feature_prop_actions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_feature_prop_actions_descriptor,
        new java.lang.String[] { "Actions", });
    internal_static_openflow_13_ofp_table_feature_prop_oxm_descriptor =
      getDescriptor().getMessageTypes().get(53);
    internal_static_openflow_13_ofp_table_feature_prop_oxm_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_feature_prop_oxm_descriptor,
        new java.lang.String[] { "OxmIds", });
    internal_static_openflow_13_ofp_table_feature_prop_experimenter_descriptor =
      getDescriptor().getMessageTypes().get(54);
    internal_static_openflow_13_ofp_table_feature_prop_experimenter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_feature_prop_experimenter_descriptor,
        new java.lang.String[] { "Experimenter", "ExpType", "ExperimenterData", });
    internal_static_openflow_13_ofp_table_features_descriptor =
      getDescriptor().getMessageTypes().get(55);
    internal_static_openflow_13_ofp_table_features_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_features_descriptor,
        new java.lang.String[] { "TableId", "Name", "MetadataMatch", "MetadataWrite", "Config", "MaxEntries", "Properties", });
    internal_static_openflow_13_ofp_table_stats_descriptor =
      getDescriptor().getMessageTypes().get(56);
    internal_static_openflow_13_ofp_table_stats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_table_stats_descriptor,
        new java.lang.String[] { "TableId", "ActiveCount", "LookupCount", "MatchedCount", });
    internal_static_openflow_13_ofp_port_stats_request_descriptor =
      getDescriptor().getMessageTypes().get(57);
    internal_static_openflow_13_ofp_port_stats_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_port_stats_request_descriptor,
        new java.lang.String[] { "PortNo", });
    internal_static_openflow_13_ofp_port_stats_descriptor =
      getDescriptor().getMessageTypes().get(58);
    internal_static_openflow_13_ofp_port_stats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_port_stats_descriptor,
        new java.lang.String[] { "PortNo", "RxPackets", "TxPackets", "RxBytes", "TxBytes", "RxDropped", "TxDropped", "RxErrors", "TxErrors", "RxFrameErr", "RxOverErr", "RxCrcErr", "Collisions", "DurationSec", "DurationNsec", });
    internal_static_openflow_13_ofp_group_stats_request_descriptor =
      getDescriptor().getMessageTypes().get(59);
    internal_static_openflow_13_ofp_group_stats_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_group_stats_request_descriptor,
        new java.lang.String[] { "GroupId", });
    internal_static_openflow_13_ofp_bucket_counter_descriptor =
      getDescriptor().getMessageTypes().get(60);
    internal_static_openflow_13_ofp_bucket_counter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_bucket_counter_descriptor,
        new java.lang.String[] { "PacketCount", "ByteCount", });
    internal_static_openflow_13_ofp_group_stats_descriptor =
      getDescriptor().getMessageTypes().get(61);
    internal_static_openflow_13_ofp_group_stats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_group_stats_descriptor,
        new java.lang.String[] { "GroupId", "RefCount", "PacketCount", "ByteCount", "DurationSec", "DurationNsec", "BucketStats", });
    internal_static_openflow_13_ofp_group_desc_descriptor =
      getDescriptor().getMessageTypes().get(62);
    internal_static_openflow_13_ofp_group_desc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_group_desc_descriptor,
        new java.lang.String[] { "Type", "GroupId", "Buckets", });
    internal_static_openflow_13_ofp_group_entry_descriptor =
      getDescriptor().getMessageTypes().get(63);
    internal_static_openflow_13_ofp_group_entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_group_entry_descriptor,
        new java.lang.String[] { "Desc", "Stats", });
    internal_static_openflow_13_ofp_group_features_descriptor =
      getDescriptor().getMessageTypes().get(64);
    internal_static_openflow_13_ofp_group_features_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_group_features_descriptor,
        new java.lang.String[] { "Types", "Capabilities", "MaxGroups", "Actions", });
    internal_static_openflow_13_ofp_meter_multipart_request_descriptor =
      getDescriptor().getMessageTypes().get(65);
    internal_static_openflow_13_ofp_meter_multipart_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_multipart_request_descriptor,
        new java.lang.String[] { "MeterId", });
    internal_static_openflow_13_ofp_meter_band_stats_descriptor =
      getDescriptor().getMessageTypes().get(66);
    internal_static_openflow_13_ofp_meter_band_stats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_band_stats_descriptor,
        new java.lang.String[] { "PacketBandCount", "ByteBandCount", });
    internal_static_openflow_13_ofp_meter_stats_descriptor =
      getDescriptor().getMessageTypes().get(67);
    internal_static_openflow_13_ofp_meter_stats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_stats_descriptor,
        new java.lang.String[] { "MeterId", "FlowCount", "PacketInCount", "ByteInCount", "DurationSec", "DurationNsec", "BandStats", });
    internal_static_openflow_13_ofp_meter_config_descriptor =
      getDescriptor().getMessageTypes().get(68);
    internal_static_openflow_13_ofp_meter_config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_config_descriptor,
        new java.lang.String[] { "Flags", "MeterId", "Bands", });
    internal_static_openflow_13_ofp_meter_features_descriptor =
      getDescriptor().getMessageTypes().get(69);
    internal_static_openflow_13_ofp_meter_features_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_features_descriptor,
        new java.lang.String[] { "MaxMeter", "BandTypes", "Capabilities", "MaxBands", "MaxColor", });
    internal_static_openflow_13_ofp_meter_entry_descriptor =
      getDescriptor().getMessageTypes().get(70);
    internal_static_openflow_13_ofp_meter_entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_meter_entry_descriptor,
        new java.lang.String[] { "Config", "Stats", });
    internal_static_openflow_13_ofp_experimenter_multipart_header_descriptor =
      getDescriptor().getMessageTypes().get(71);
    internal_static_openflow_13_ofp_experimenter_multipart_header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_experimenter_multipart_header_descriptor,
        new java.lang.String[] { "Experimenter", "ExpType", "Data", });
    internal_static_openflow_13_ofp_experimenter_header_descriptor =
      getDescriptor().getMessageTypes().get(72);
    internal_static_openflow_13_ofp_experimenter_header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_experimenter_header_descriptor,
        new java.lang.String[] { "Experimenter", "ExpType", "Data", });
    internal_static_openflow_13_ofp_queue_prop_header_descriptor =
      getDescriptor().getMessageTypes().get(73);
    internal_static_openflow_13_ofp_queue_prop_header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_prop_header_descriptor,
        new java.lang.String[] { "Property", "Len", });
    internal_static_openflow_13_ofp_queue_prop_min_rate_descriptor =
      getDescriptor().getMessageTypes().get(74);
    internal_static_openflow_13_ofp_queue_prop_min_rate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_prop_min_rate_descriptor,
        new java.lang.String[] { "PropHeader", "Rate", });
    internal_static_openflow_13_ofp_queue_prop_max_rate_descriptor =
      getDescriptor().getMessageTypes().get(75);
    internal_static_openflow_13_ofp_queue_prop_max_rate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_prop_max_rate_descriptor,
        new java.lang.String[] { "PropHeader", "Rate", });
    internal_static_openflow_13_ofp_queue_prop_experimenter_descriptor =
      getDescriptor().getMessageTypes().get(76);
    internal_static_openflow_13_ofp_queue_prop_experimenter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_prop_experimenter_descriptor,
        new java.lang.String[] { "PropHeader", "Experimenter", "Data", });
    internal_static_openflow_13_ofp_packet_queue_descriptor =
      getDescriptor().getMessageTypes().get(77);
    internal_static_openflow_13_ofp_packet_queue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_packet_queue_descriptor,
        new java.lang.String[] { "QueueId", "Port", "Properties", });
    internal_static_openflow_13_ofp_queue_get_config_request_descriptor =
      getDescriptor().getMessageTypes().get(78);
    internal_static_openflow_13_ofp_queue_get_config_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_get_config_request_descriptor,
        new java.lang.String[] { "Port", });
    internal_static_openflow_13_ofp_queue_get_config_reply_descriptor =
      getDescriptor().getMessageTypes().get(79);
    internal_static_openflow_13_ofp_queue_get_config_reply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_get_config_reply_descriptor,
        new java.lang.String[] { "Port", "Queues", });
    internal_static_openflow_13_ofp_action_set_queue_descriptor =
      getDescriptor().getMessageTypes().get(80);
    internal_static_openflow_13_ofp_action_set_queue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_action_set_queue_descriptor,
        new java.lang.String[] { "Type", "QueueId", });
    internal_static_openflow_13_ofp_queue_stats_request_descriptor =
      getDescriptor().getMessageTypes().get(81);
    internal_static_openflow_13_ofp_queue_stats_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_stats_request_descriptor,
        new java.lang.String[] { "PortNo", "QueueId", });
    internal_static_openflow_13_ofp_queue_stats_descriptor =
      getDescriptor().getMessageTypes().get(82);
    internal_static_openflow_13_ofp_queue_stats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_queue_stats_descriptor,
        new java.lang.String[] { "PortNo", "QueueId", "TxBytes", "TxPackets", "TxErrors", "DurationSec", "DurationNsec", });
    internal_static_openflow_13_ofp_role_request_descriptor =
      getDescriptor().getMessageTypes().get(83);
    internal_static_openflow_13_ofp_role_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_role_request_descriptor,
        new java.lang.String[] { "Role", "GenerationId", });
    internal_static_openflow_13_ofp_async_config_descriptor =
      getDescriptor().getMessageTypes().get(84);
    internal_static_openflow_13_ofp_async_config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ofp_async_config_descriptor,
        new java.lang.String[] { "PacketInMask", "PortStatusMask", "FlowRemovedMask", });
    internal_static_openflow_13_MeterModUpdate_descriptor =
      getDescriptor().getMessageTypes().get(85);
    internal_static_openflow_13_MeterModUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_MeterModUpdate_descriptor,
        new java.lang.String[] { "Id", "MeterMod", "Xid", });
    internal_static_openflow_13_MeterStatsReply_descriptor =
      getDescriptor().getMessageTypes().get(86);
    internal_static_openflow_13_MeterStatsReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_MeterStatsReply_descriptor,
        new java.lang.String[] { "MeterStats", });
    internal_static_openflow_13_FlowTableUpdate_descriptor =
      getDescriptor().getMessageTypes().get(87);
    internal_static_openflow_13_FlowTableUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_FlowTableUpdate_descriptor,
        new java.lang.String[] { "Id", "FlowMod", "Xid", });
    internal_static_openflow_13_FlowGroupTableUpdate_descriptor =
      getDescriptor().getMessageTypes().get(88);
    internal_static_openflow_13_FlowGroupTableUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_FlowGroupTableUpdate_descriptor,
        new java.lang.String[] { "Id", "GroupMod", "Xid", });
    internal_static_openflow_13_Flows_descriptor =
      getDescriptor().getMessageTypes().get(89);
    internal_static_openflow_13_Flows_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_Flows_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_openflow_13_Meters_descriptor =
      getDescriptor().getMessageTypes().get(90);
    internal_static_openflow_13_Meters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_Meters_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_openflow_13_FlowGroups_descriptor =
      getDescriptor().getMessageTypes().get(91);
    internal_static_openflow_13_FlowGroups_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_FlowGroups_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_openflow_13_FlowChanges_descriptor =
      getDescriptor().getMessageTypes().get(92);
    internal_static_openflow_13_FlowChanges_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_FlowChanges_descriptor,
        new java.lang.String[] { "ToAdd", "ToRemove", });
    internal_static_openflow_13_FlowGroupChanges_descriptor =
      getDescriptor().getMessageTypes().get(93);
    internal_static_openflow_13_FlowGroupChanges_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_FlowGroupChanges_descriptor,
        new java.lang.String[] { "ToAdd", "ToRemove", "ToUpdate", });
    internal_static_openflow_13_PacketIn_descriptor =
      getDescriptor().getMessageTypes().get(94);
    internal_static_openflow_13_PacketIn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_PacketIn_descriptor,
        new java.lang.String[] { "Id", "PacketIn", });
    internal_static_openflow_13_PacketOut_descriptor =
      getDescriptor().getMessageTypes().get(95);
    internal_static_openflow_13_PacketOut_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_PacketOut_descriptor,
        new java.lang.String[] { "Id", "PacketOut", });
    internal_static_openflow_13_ChangeEvent_descriptor =
      getDescriptor().getMessageTypes().get(96);
    internal_static_openflow_13_ChangeEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_openflow_13_ChangeEvent_descriptor,
        new java.lang.String[] { "Id", "PortStatus", "Error", "Event", });
    com.google.api.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
